{-# LINE 1 "C:\Users\Allll\AppData\Local\Temp\ghc4648_0\ghc_4.s" #-}
.data
	.align 4
.align 1
.globl __stginit_Main
__stginit_Main:
.data
	.align 4
.align 1
.globl Main_canHeight_closure
Main_canHeight_closure:
	.long	ghczmprim_GHCziTypes_Izh_static_info
	.long	300
.data
	.align 4
.align 1
.globl Main_canWidth_closure
Main_canWidth_closure:
	.long	stg_IND_STATIC_info
	.long	Main_canHeight_closure+1
	.long	0
	.long	0
.data
	.align 4
.align 1
.globl Main_zdwpoints_closure
Main_zdwpoints_closure:
	.long	Main_zdwpoints_info
	.long	0
.text
	.align 4,0x90
	.long	131073
	.long	16
s6f6_info:
.Lc6jT:
	leal -24(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lc6k3
.Lc6k4:
	movl $stg_upd_frame_info,-12(%ebp)
	movl %esi,-8(%ebp)
	movl $c6jQ_info,-24(%ebp)
#	gldsd 16(%esi),%fake0
	fldl 16(%esi) ; fstp %st(1)
	movl 12(%esi),%esi
#	gstsd %fake0,-20(%ebp)
	fstl -20(%ebp)
	addl $-24,%ebp
	testw $7,%si
	jne .Lc6jQ
.Lc6jR:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
.text
	.align 4,0x90
	.long	194
	.long	32
c6jQ_info:
.Lc6jQ:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja .Lc6k7
.Lc6k6:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gldsd 4(%ebp),%fake1
	fldl 4(%ebp) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gldsd .Ln6na,%fake1
	fldl .Ln6na ; fstp %st(2)
#	gdivt %fake0,%fake1,%fake0
	#GDIV-xxxcase1
	fld %st(1) ; fdivrp %st(0),%st(1)
	movl $ghczmprim_GHCziTypes_Dzh_con_info,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $12,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
.Lc6k3:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *-16(%ebx)
.Lc6k7:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp stg_gc_unpt_r1
.section .rodata
	.align 4
.align 8
.Ln6na:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	64
.text
	.align 4,0x90
	.long	131073
	.long	16
s6fb_info:
.Lc6kf:
	leal -24(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lc6kp
.Lc6kq:
	movl $stg_upd_frame_info,-12(%ebp)
	movl %esi,-8(%ebp)
	movl $c6kc_info,-24(%ebp)
#	gldsd 16(%esi),%fake0
	fldl 16(%esi) ; fstp %st(1)
	movl 12(%esi),%esi
#	gstsd %fake0,-20(%ebp)
	fstl -20(%ebp)
	addl $-24,%ebp
	testw $7,%si
	jne .Lc6kc
.Lc6kd:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
.text
	.align 4,0x90
	.long	194
	.long	32
c6kc_info:
.Lc6kc:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja .Lc6kt
.Lc6ks:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl $ghczmprim_GHCziTypes_Dzh_con_info,-8(%edi)
#	gaddt %fake0,%fake0,%fake0
	#GADD-xxxcase1
	fld %st(0) ; faddp %st(0),%st(1)
#	gldsd 4(%ebp),%fake1
	fldl 4(%ebp) ; fstp %st(2)
#	gdivt %fake0,%fake1,%fake0
	#GDIV-xxxcase1
	fld %st(1) ; fdivrp %st(0),%st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $12,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
.Lc6kp:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *-16(%ebx)
.Lc6kt:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp stg_gc_unpt_r1
.text
	.align 4,0x90
	.long	S6n3_srt-(s6fG_info)+0
	.long	131073
	.long	65552
s6fG_info:
.Lc6l8:
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lc6l9
.Lc6lf:
	movl $stg_upd_frame_info,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 20(%esi),%eax
	cmpl 16(%esi),%eax
	je .Lc6lh
.Lc6li:
	incl %eax
	movl %eax,8(%ebx)
	movl 12(%esi),%esi
	addl $-12,%ebp
	jmp s6fg_info
.Lc6l9:
	jmp *-16(%ebx)
.Lc6lh:
	movl $ghczmprim_GHCziTypes_ZMZN_closure+1,%esi
	addl $-12,%ebp
	jmp *(%ebp)
.text
	.align 4,0x90
	.long	65538
	.long	16
s6fr_info:
.Lc6lL:
	leal -28(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lc6m3
.Lc6m4:
	movl $stg_upd_frame_info,-12(%ebp)
	movl %esi,-8(%ebp)
	movl $c6lI_info,-24(%ebp)
	movl 12(%esi),%eax
	movl 20(%esi),%ecx
	movl 16(%esi),%esi
	movl %eax,-20(%ebp)
	movl %ecx,-16(%ebp)
	addl $-24,%ebp
	testw $7,%si
	jne .Lc6lI
.Lc6lJ:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
.text
	.align 4,0x90
	.long	130
	.long	32
c6lI_info:
.Lc6lI:
	movl $c6lO_info,-4(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 4(%ebp),%esi
#	gstsd %fake0,(%ebp)
	fstl (%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne .Lc6lO
.Lc6lP:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
.text
	.align 4,0x90
	.long	451
	.long	32
c6lO_info:
.Lc6lO:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja .Lc6m8
.Lc6m7:
	movl 12(%ebp),%eax
#	gitodlsd %eax,%fake0
	pushl %eax ; fildl (%esp) ; fstp %st(1) ; addl $4,%esp
#	gldsd 4(%ebp),%fake1
	fldl 4(%ebp) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gldsd 3(%esi),%fake1
	fldl 3(%esi) ; fstp %st(2)
#	gsubt %fake0,%fake1,%fake0
	#GSUB-xxxcase1
	fld %st(1) ; fsubrp %st(0),%st(1)
	movl $ghczmprim_GHCziTypes_Dzh_con_info,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $16,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
.Lc6m3:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *-16(%ebx)
.Lc6m8:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp stg_gc_unpt_r1
.text
	.align 4,0x90
	.long	S6n3_srt-(s6fB_info)+0
	.long	65539
	.long	65552
s6fB_info:
.Lc6mb:
	movl %esi,%eax
	leal -40(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb .Lc6my
.Lc6mz:
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja .Lc6mB
.Lc6mA:
	movl $stg_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl 12(%eax),%ecx
	movl 16(%eax),%edx
	movl %ecx,64(%esp)
	movl 20(%eax),%ecx
	movl 24(%eax),%eax
	movl $s6fr_info,-20(%edi)
	movl %edx,-8(%edi)
	movl %ecx,-4(%edi)
	movl %eax,(%edi)
	movl $c6m9_info,-24(%ebp)
	leal -20(%edi),%eax
	movl %eax,16(%ebx)
	movl 64(%esp),%eax
	movl %eax,8(%ebx)
	movl %edx,-20(%ebp)
	movl %ecx,-16(%ebp)
	addl $-24,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp Expr_eval_info
.text
	.align 4,0x90
	.long	2
	.long	32
c6m9_info:
.Lc6m9:
	movl $c6me_info,-4(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 4(%ebp),%esi
#	gstsd %fake0,(%ebp)
	fstl (%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne .Lc6me
.Lc6mf:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
.text
	.align 4,0x90
	.long	195
	.long	32
c6me_info:
.Lc6me:
	movl $c6mj_info,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 12(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne .Lc6mj
.Lc6mk:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
.text
	.align 4,0x90
	.long	4038
	.long	32
c6mj_info:
.Lc6mj:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja .Lc6mG
.Lc6mF:
#	gldsd 16(%ebp),%fake0
	fldl 16(%ebp) ; fstp %st(1)
#	gnegt %fake0,%fake0
	fld %st(0) ; fchs ; fstp %st(1)
#	gldsd 4(%ebp),%fake1
	fldl 4(%ebp) ; fstp %st(2)
#	gaddt %fake0,%fake1,%fake0
	#GADD-xxxcase1
	fld %st(1) ; faddp %st(0),%st(1)
#	gldsd 3(%esi),%fake1
	fldl 3(%esi) ; fstp %st(2)
#	gdivt %fake0,%fake1,%fake0
	#GDIV-xxxcase1
	fld %st(1) ; fdivrp %st(0),%st(1)
	movl $ghczmprim_GHCziTypes_Dzh_con_info,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $28,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
.Lc6mB:
	movl $24,904(%ebx)
.Lc6my:
	movl %eax,%esi
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *-16(%ebx)
.Lc6mG:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp stg_gc_unpt_r1
.text
	.align 4,0x90
	.long	S6n3_srt-(s6fg_info)+0
	.long	65540
	.long	65539
	.long	65545
s6fg_info:
.Lc6mJ:
	addl $88,%edi
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja .Lc6mR
.Lc6mQ:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	movl %ecx,64(%esp)
	movl 11(%esi),%ecx
	movl %edx,76(%esp)
	movl 15(%esi),%edx
	movl $s6fG_info,-84(%edi)
	movl %esi,-72(%edi)
	movl %edx,-68(%edi)
	movl %eax,-64(%edi)
	movl $s6fB_info,-60(%edi)
	movl 64(%esp),%edx
	movl %edx,-48(%edi)
	movl 76(%esp),%edx
	movl %edx,-44(%edi)
	movl %ecx,-40(%edi)
	movl %eax,-36(%edi)
	movl $ghczmprim_GHCziTypes_Dzh_con_info,-32(%edi)
#	gitodlsd %eax,%fake0
	pushl %eax ; fildl (%esp) ; fstp %st(1) ; addl $4,%esp
#	gstsd %fake0,-28(%edi)
	fstl -28(%edi)
	movl $ghczmprim_GHCziTuple_Z2T_con_info,-20(%edi)
	leal -31(%edi),%eax
	movl %eax,-16(%edi)
	leal -60(%edi),%eax
	movl %eax,-12(%edi)
	movl $ghczmprim_GHCziTypes_ZC_con_info,-8(%edi)
	leal -19(%edi),%eax
	movl %eax,-4(%edi)
	leal -84(%edi),%eax
	movl %eax,(%edi)
	leal -6(%edi),%esi
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
.Lc6mR:
	movl $88,904(%ebx)
	movl %eax,8(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *-8(%ebx)
.text
	.align 4,0x90
	.long	S6n3_srt-(Main_zdwpoints_info)+0
	.long	196630
	.long	0
	.long	196623
.globl Main_zdwpoints_info
Main_zdwpoints_info:
.Lc6mS:
	addl $68,%edi
	movl 24(%ebx),%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja .Lc6mW
.Lc6mV:
	cmpl $0,%eax
	jl .Lc6n1
.Lc6n2:
	movl $s6f6_info,-64(%edi)
	movl %ecx,-52(%edi)
#	gitodlsd %eax,%fake0
	pushl %eax ; fildl (%esp) ; fstp %st(1) ; addl $4,%esp
#	gstsd %fake0,-48(%edi)
	fstl -48(%edi)
	movl $s6fb_info,-40(%edi)
	leal -64(%edi),%ecx
	movl %ecx,-28(%edi)
#	gstsd %fake0,-24(%edi)
	fstl -24(%edi)
	movl $s6fg_info,-16(%edi)
	movl %edx,-12(%edi)
	movl %ecx,-8(%edi)
	leal -40(%edi),%ecx
	movl %ecx,-4(%edi)
	movl %eax,(%edi)
	movl $0,8(%ebx)
	leal -15(%edi),%esi
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp s6fg_info
.Lc6mW:
	movl $68,904(%ebx)
	movl %eax,24(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl $Main_zdwpoints_closure,%esi
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *-8(%ebx)
.Lc6n1:
	addl $-68,%edi
	movl $ghczmprim_GHCziTypes_ZMZN_closure+1,%esi
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
.data
	.align 4
.align 1
.globl Main_points_closure
Main_points_closure:
	.long	Main_points_info
	.long	0
.text
	.align 4,0x90
	.long	S6n3_srt-(Main_points_info)+4
	.long	196631
	.long	0
	.long	196623
.globl Main_points_info
Main_points_info:
.Lc6o2:
	movl 24(%ebx),%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %edx,64(%esp)
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb .Lc6o6
.Lc6o7:
	movl $c6nZ_info,-12(%ebp)
	movl %eax,%esi
	movl 64(%esp),%eax
	movl %eax,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne .Lc6nZ
.Lc6o0:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	S6n3_srt-(c6nZ_info)+4
	.long	2
	.long	65568
c6nZ_info:
.Lc6nZ:
	movl $c6o5_info,(%ebp)
	movl 3(%esi),%esi
	testw $7,%si
	jne .Lc6o5
.Lc6o9:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	S6n3_srt-(c6o5_info)+4
	.long	2
	.long	65568
c6o5_info:
.Lc6o5:
	movl 3(%esi),%eax
	movl %eax,24(%ebx)
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl 4(%ebp),%eax
	movl %eax,8(%ebx)
	addl $12,%ebp
	jmp Main_zdwpoints_info
.Lc6o6:
	movl %eax,24(%ebx)
	movl %ecx,16(%ebx)
	movl 64(%esp),%eax
	movl %eax,8(%ebx)
	movl $Main_points_closure,%esi
	jmp *-8(%ebx)
.data
	.align 4
.align 1
.globl Main_readAndDraw4_closure
Main_readAndDraw4_closure:
	.long	Main_readAndDraw4_info
	.long	0
	.long	0
	.long	0
.section .rodata
	.align 4
.align 1
c6os_str:
	.byte	118
	.byte	97
	.byte	108
	.byte	117
	.byte	101
	.byte	0
.text
	.align 4,0x90
	.long	0
	.long	22
.globl Main_readAndDraw4_info
Main_readAndDraw4_info:
.Lc6ot:
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lc6ou
.Lc6ov:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	call newCAF
	addl $12,%esp
	testl %eax,%eax
	je .Lc6or
.Lc6oq:
	movl $stg_bh_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl $c6os_str,8(%ebx)
	addl $-12,%ebp
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.Lc6or:
	jmp *(%esi)
.Lc6ou:
	jmp *-16(%ebx)
.data
	.align 4
.align 1
.globl Main_readAndDraw3_closure
Main_readAndDraw3_closure:
	.long	Main_readAndDraw3_info
	.long	0
	.long	0
	.long	0
.section .rodata
	.align 4
.align 1
c6oI_str:
	.byte	69
	.byte	114
	.byte	114
	.byte	32
	.byte	58
	.byte	32
	.byte	87
	.byte	114
	.byte	111
	.byte	110
	.byte	103
	.byte	32
	.byte	101
	.byte	120
	.byte	112
	.byte	114
	.byte	101
	.byte	115
	.byte	115
	.byte	105
	.byte	111
	.byte	110
	.byte	0
.text
	.align 4,0x90
	.long	0
	.long	22
.globl Main_readAndDraw3_info
Main_readAndDraw3_info:
.Lc6oJ:
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lc6oK
.Lc6oL:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	call newCAF
	addl $12,%esp
	testl %eax,%eax
	je .Lc6oH
.Lc6oG:
	movl $stg_bh_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl $c6oI_str,8(%ebx)
	addl $-12,%ebp
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.Lc6oH:
	jmp *(%esi)
.Lc6oK:
	jmp *-16(%ebx)
.data
	.align 4
.align 1
.globl Main_readAndDraw2_closure
Main_readAndDraw2_closure:
	.long	ghczmprim_GHCziTypes_Dzh_static_info
	.byte	123
	.byte	20
	.byte	174
	.byte	71
	.byte	225
	.byte	122
	.byte	164
	.byte	63
.data
	.align 4
.align 1
.globl Main_readAndDraw1_closure
Main_readAndDraw1_closure:
	.long	Main_readAndDraw1_info
	.long	0
.text
	.align 4,0x90
	.long	1
	.long	17
s6gs_info:
.Lc6qk:
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lc6ql
.Lc6qm:
	movl $stg_upd_frame_info,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp base_DataziTuple_fst_info
.Lc6ql:
	jmp *-16(%ebx)
.text
	.align 4,0x90
	.long	S6n3_srt-(s6gt_info)+4
	.long	1
	.long	65553
s6gt_info:
.Lc6qn:
	movl %esi,%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb .Lc6qo
.Lc6qp:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja .Lc6qr
.Lc6qq:
	movl $stg_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl 12(%eax),%eax
	movl $s6gs_info,-12(%edi)
	movl %eax,(%edi)
	movl $300,24(%ebx)
	movl $Main_readAndDraw2_closure+1,16(%ebx)
	leal -12(%edi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp Main_zdwpoints_info
.Lc6qr:
	movl $16,904(%ebx)
.Lc6qo:
	movl %eax,%esi
	jmp *-16(%ebx)
.text
	.align 4,0x90
	.long	S6n3_srt-(s6gu_info)+12
	.long	131077
	.long	1
	.long	65546
s6gu_info:
.Lc6qx:
	movl 8(%ebx),%eax
	movl %eax,16(%ebx)
	movl 2(%esi),%eax
	movl %eax,8(%ebx)
	jmp FxthDgO5vhFC0dVxe1OwkF_HasteziGraphicsziCanvas_line2_info
.text
	.align 4,0x90
	.long	S6n3_srt-(Main_readAndDraw1_info)+4
	.long	196623
	.long	0
	.long	268238863
.globl Main_readAndDraw1_info
Main_readAndDraw1_info:
.Lc6qH:
	movl 16(%ebx),%eax
	movl 8(%ebx),%ecx
	leal -16(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb .Lc6qI
.Lc6qJ:
	movl $c6pF_info,-12(%ebp)
	movl $Main_readAndDraw4_closure,32(%ebx)
	movl %ecx,24(%ebx)
	movl $LlHybR7LOSS7VAc0pG6N16_ControlziMonadziIOziClass_zdfMonadIOIO_closure,16(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_zdfIsElemElem_closure,8(%ebx)
	movl $stg_ap_v_info,-16(%ebp)
	movl %ecx,-8(%ebp)
	movl %eax,-4(%ebp)
	addl $-16,%ebp
	jmp FxthDgO5vhFC0dVxe1OwkF_HasteziDOM_getProp_info
.text
	.align 4,0x90
	.long	S6n3_srt-(c6pF_info)+4
	.long	2
	.long	33357856
c6pF_info:
.Lc6pF:
	movl $c6pJ_info,(%ebp)
	movl %esi,8(%ebx)
	jmp Expr_expr1_info
.text
	.align 4,0x90
	.long	S6n3_srt-(c6pJ_info)+4
	.long	2
	.long	32833568
c6pJ_info:
.Lc6pJ:
	movl 4(%ebp),%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jb .Ls6fV
.Lc6qF:
	movl $c6pO_info,-4(%ebp)
	movl 2(%esi),%eax
	movl %eax,8(%ebx)
	movl %eax,(%ebp)
	addl $-4,%ebp
	jmp base_DataziTuple_snd_info
.text
	.align 4,0x90
	.long	S6n3_srt-(c6pO_info)+4
	.long	3
	.long	32833568
c6pO_info:
.Lc6pO:
	movl $c6pS_info,(%ebp)
	movl $ghczmprim_GHCziTypes_ZMZN_closure+1,16(%ebx)
	movl %esi,8(%ebx)
	jmp ghczmprim_GHCziClasses_zdfEqZMZNzuzdszdczeze1_info
.text
	.align 4,0x90
	.long	S6n3_srt-(c6pS_info)+4
	.long	3
	.long	32833568
c6pS_info:
.Lc6pS:
	movl %esi,%eax
	andl $7,%eax
	cmpl $2,%eax
	jb .Lu6rY
.Lc6rW:
	movl $c6pX_info,(%ebp)
	movl 12(%ebp),%esi
	testw $7,%si
	jne .Lc6pX
.Lc6pY:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	S6n3_srt-(c6pX_info)+4
	.long	387
	.long	6619168
c6pX_info:
.Lc6pX:
	movl $c6q2_info,(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%ecx
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziGraphicsziCanvas_bufferzuf1_closure,%esi
	movl %ecx,8(%ebp)
	movl %eax,12(%ebp)
	testw $7,%si
	jne .Lc6q2
.Lc6q3:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	S6n3_srt-(c6q2_info)+4
	.long	387
	.long	2424864
c6q2_info:
.Lc6q2:
	movl $c6qa_info,(%ebp)
	movl 3(%esi),%eax
	movl 8(%ebp),%ecx
	movl 872(%ebx),%edx
	movl %eax,64(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,76(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,88(%esp)
	movl 104(%edx),%ecx
	movl %ecx,100(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,112(%esp)
	movl 88(%esp),%eax
	subl %ecx,%eax
	movl 100(%esp),%ecx
	movl %eax,124(%esp)
	movl 112(%esp),%eax
	sbbl %eax,%ecx
	movl 124(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call suspendThread
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call __app1
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call resumeThread
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
.text
	.align 4,0x90
	.long	S6n3_srt-(c6qa_info)+4
	.long	387
	.long	2424864
c6qa_info:
.Lc6qa:
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja .Lc6rT
.Lc6rS:
	movl $s6gt_info,-20(%edi)
	movl 4(%ebp),%eax
	movl %eax,-8(%edi)
	movl $s6gu_info,-4(%edi)
	leal -20(%edi),%eax
	movl %eax,(%edi)
	movl 12(%ebp),%eax
	movl %eax,16(%ebx)
	leal -2(%edi),%eax
	movl %eax,8(%ebx)
	addl $16,%ebp
	jmp FxthDgO5vhFC0dVxe1OwkF_HasteziGraphicsziCanvas_zdwa16_info
.Lc6qI:
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	movl $Main_readAndDraw1_closure,%esi
	jmp *-8(%ebx)
.text
	.align 4,0x90
	.long	S6n3_srt-(c6qO_info)+20
	.long	0
	.long	1638432
c6qO_info:
.Lc6qO:
	movl $c6qV_info,-4(%ebp)
	movl 3(%esi),%eax
	movl $Main_readAndDraw4_closure,%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	jmp toJSStr
.Lu6rY:
	movl 8(%ebp),%eax
	addl $4,%ebp
.Ls6fV:
	movl $c6qO_info,8(%ebp)
	movl %eax,%esi
	addl $8,%ebp
	testw $7,%si
	jne .Lc6qO
.Lc6qP:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	S6n3_srt-(c6qV_info)+20
	.long	65
	.long	589856
c6qV_info:
.Lc6qV:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .Lc6rm
.Lc6rl:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl $c6r7_info,-4(%ebp)
	movl $Main_readAndDraw3_closure,%esi
	movl (%edi),%eax
	movl %eax,(%ebp)
	addl $-4,%ebp
	jmp toJSStr
.text
	.align 4,0x90
	.long	S6n3_srt-(c6r7_info)+20
	.long	194
	.long	65568
c6r7_info:
.Lc6r7:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .Lc6rq
.Lc6rp:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl $c6rh_info,-4(%ebp)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_jsSetzuf1_closure,%esi
	movl (%edi),%eax
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne .Lc6rh
.Lc6rs:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	451
	.long	32
c6rh_info:
.Lc6rh:
	movl 12(%ebp),%eax
	movl $c6rC_info,12(%ebp)
	movl 8(%ebp),%ecx
	movl 4(%ebp),%edx
	addl $12,%ebp
	movl %eax,208(%esp)
	movl 3(%esi),%eax
	movl %eax,220(%esp)
	movl 872(%ebx),%eax
	movl %ecx,232(%esp)
	movl 20(%eax),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	movl %edx,244(%esp)
	leal 4(%edi),%edx
	movl %edx,8(%ecx)
	movl 100(%eax),%edx
	movl %edx,256(%esp)
	movl 104(%eax),%edx
	movl %edx,268(%esp)
	leal 4(%edi),%edx
	subl (%ecx),%edx
	xorl %ecx,%ecx
	movl %ecx,280(%esp)
	movl 256(%esp),%ecx
	subl %edx,%ecx
	movl 268(%esp),%edx
	movl %ecx,292(%esp)
	movl 280(%esp),%ecx
	sbbl %ecx,%edx
	movl 292(%esp),%ecx
	movl %ecx,100(%eax)
	movl %edx,104(%eax)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call suspendThread
	addl $12,%esp
	subl $12,%esp
	movl 256(%esp),%ecx
	pushl %ecx
	movl 248(%esp),%ecx
	pushl %ecx
	movl 228(%esp),%ecx
	pushl %ecx
	movl 244(%esp),%ecx
	pushl %ecx
	movl %eax,332(%esp)
	call __app3
	addl $28,%esp
	subl $8,%esp
	movl 312(%esp),%ecx
	pushl %ecx
	movl %eax,328(%esp)
	call resumeThread
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,328(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,340(%esp)
	movl %eax,%ecx
	movl %edx,352(%esp)
	movl 340(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 328(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,364(%esp)
	movl 352(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 364(%esp),%ecx
	adcl %eax,%ecx
	movl 328(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 316(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
.Lc6rm:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.Lc6rq:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.text
	.align 4,0x90
	.long	0
	.long	32
c6rC_info:
.Lc6rC:
	addl $4,%ebp
	jmp IBJHmTQyrtkCXFsQwT7UYx_HasteziPrimziAny_zdfFromAnyZLZR4_info
.Lc6rT:
	movl $24,904(%ebx)
	jmp stg_gc_unbx_r1
.data
	.align 4
.align 1
.globl Main_readAndDraw_closure
Main_readAndDraw_closure:
	.long	Main_readAndDraw_info
	.long	0
.text
	.align 4,0x90
	.long	S6n3_srt-(Main_readAndDraw_info)+48
	.long	196623
	.long	0
	.long	65551
.globl Main_readAndDraw_info
Main_readAndDraw_info:
.Lc6te:
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp Main_readAndDraw1_info
.data
	.align 4
.align 1
r65B_closure:
	.long	r65B_info
	.long	0
	.long	0
	.long	0
.section .rodata
	.align 4
.align 1
c6tt_str:
	.byte	80
	.byte	97
	.byte	116
	.byte	116
	.byte	101
	.byte	114
	.byte	110
	.byte	32
	.byte	109
	.byte	97
	.byte	116
	.byte	99
	.byte	104
	.byte	32
	.byte	102
	.byte	97
	.byte	105
	.byte	108
	.byte	117
	.byte	114
	.byte	101
	.byte	32
	.byte	105
	.byte	110
	.byte	32
	.byte	100
	.byte	111
	.byte	32
	.byte	101
	.byte	120
	.byte	112
	.byte	114
	.byte	101
	.byte	115
	.byte	115
	.byte	105
	.byte	111
	.byte	110
	.byte	32
	.byte	97
	.byte	116
	.byte	32
	.byte	67
	.byte	97
	.byte	108
	.byte	99
	.byte	117
	.byte	108
	.byte	97
	.byte	116
	.byte	111
	.byte	114
	.byte	46
	.byte	104
	.byte	115
	.byte	58
	.byte	53
	.byte	51
	.byte	58
	.byte	53
	.byte	45
	.byte	49
	.byte	50
	.byte	0
.text
	.align 4,0x90
	.long	0
	.long	22
r65B_info:
.Lc6tu:
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lc6tv
.Lc6tw:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	call newCAF
	addl $12,%esp
	testl %eax,%eax
	je .Lc6ts
.Lc6tr:
	movl $stg_bh_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl $c6tt_str,8(%ebx)
	addl $-12,%ebp
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.Lc6ts:
	jmp *(%esi)
.Lc6tv:
	jmp *-16(%ebx)
.data
	.align 4
.align 1
r65C_closure:
	.long	base_GHCziIOziException_IOError_static_info
	.long	base_GHCziBase_Nothing_closure+1
	.long	base_GHCziIOziException_UserError_closure+1
	.long	ghczmprim_GHCziTypes_ZMZN_closure+1
	.long	r65B_closure
	.long	base_GHCziBase_Nothing_closure+1
	.long	base_GHCziBase_Nothing_closure+1
	.long	0
.data
	.align 4
.align 1
r65D_closure:
	.long	r65D_info
	.long	0
	.long	0
	.long	0
.text
	.align 4,0x90
	.long	S6n3_srt-(r65D_info)+52
	.long	0
	.long	196630
r65D_info:
.Lc6tL:
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lc6tM
.Lc6tN:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	call newCAF
	addl $12,%esp
	testl %eax,%eax
	je .Lc6tK
.Lc6tJ:
	movl $stg_bh_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl $r65C_closure+1,8(%ebx)
	addl $-12,%ebp
	jmp base_GHCziIOziException_zdfExceptionIOExceptionzuzdctoException_info
.Lc6tK:
	jmp *(%esi)
.Lc6tM:
	jmp *-16(%ebx)
.data
	.align 4
.align 1
r65E_closure:
	.long	r65E_info
	.long	0
	.long	0
	.long	0
.section .rodata
	.align 4
.align 1
c6uh_str:
	.byte	68
	.byte	105
	.byte	102
	.byte	102
	.byte	101
	.byte	114
	.byte	101
	.byte	110
	.byte	116
	.byte	105
	.byte	97
	.byte	116
	.byte	101
	.byte	0
.text
	.align 4,0x90
	.long	S6n3_srt-(r65E_info)+60
	.long	0
	.long	65558
r65E_info:
.Lc6ue:
	leal -20(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lc6ux
.Lc6uy:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	call newCAF
	addl $12,%esp
	testl %eax,%eax
	je .Lc6ua
.Lc6u9:
	movl $stg_bh_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl $c6ub_info,-16(%ebp)
	movl $Pages_mkButton1_closure,%esi
	addl $-16,%ebp
	testw $7,%si
	jne .Lc6ub
.Lc6uc:
	jmp *(%esi)
.Lc6ua:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	0
	.long	32
c6ub_info:
.Lc6ub:
	movl $c6ui_info,-4(%ebp)
	movl $c6uh_str,8(%ebx)
	movl %esi,(%ebp)
	addl $-4,%ebp
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.text
	.align 4,0x90
	.long	1
	.long	32
c6ui_info:
.Lc6ui:
	movl $c6um_info,(%ebp)
	jmp toJSStr
.text
	.align 4,0x90
	.long	1
	.long	32
c6um_info:
.Lc6um:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .Lc6uD
.Lc6uC:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl 4(%ebp),%eax
	leal -3(%edi),%ecx
.Lc6uu:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja .Lc6uG
.Lc6uF:
	movl 3(%ecx),%ecx
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_Attribute_con_info,-8(%edi)
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%esi
	addl $8,%ebp
	jmp *(%ebp)
.text
	.align 4,0x90
	.long	1
	.long	32
c6ut_info:
.Lc6ut:
	movl 4(%ebp),%eax
	movl %esi,%ecx
	jmp .Lc6uu
.Lc6ux:
	jmp *-16(%ebx)
.Lc6uD:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.Lc6uG:
	movl $12,904(%ebx)
	movl $c6ut_info,(%ebp)
	movl %ecx,%esi
	jmp stg_gc_unpt_r1
.data
	.align 4
.align 1
r65F_closure:
	.long	ghczmprim_GHCziTypes_ZC_static_info
	.long	r65E_closure
	.long	ghczmprim_GHCziTypes_ZMZN_closure+1
	.long	0
.data
	.align 4
.align 1
r65G_closure:
	.long	r65G_info
	.long	0
	.long	0
	.long	0
.section .rodata
	.align 4
.align 1
c6vd_str:
	.byte	68
	.byte	114
	.byte	97
	.byte	119
	.byte	32
	.byte	103
	.byte	114
	.byte	97
	.byte	112
	.byte	104
	.byte	0
.text
	.align 4,0x90
	.long	S6n3_srt-(r65G_info)+60
	.long	0
	.long	65558
r65G_info:
.Lc6va:
	leal -20(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lc6vt
.Lc6vu:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	call newCAF
	addl $12,%esp
	testl %eax,%eax
	je .Lc6v6
.Lc6v5:
	movl $stg_bh_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl $c6v7_info,-16(%ebp)
	movl $Pages_mkButton1_closure,%esi
	addl $-16,%ebp
	testw $7,%si
	jne .Lc6v7
.Lc6v8:
	jmp *(%esi)
.Lc6v6:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	0
	.long	32
c6v7_info:
.Lc6v7:
	movl $c6ve_info,-4(%ebp)
	movl $c6vd_str,8(%ebx)
	movl %esi,(%ebp)
	addl $-4,%ebp
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.text
	.align 4,0x90
	.long	1
	.long	32
c6ve_info:
.Lc6ve:
	movl $c6vi_info,(%ebp)
	jmp toJSStr
.text
	.align 4,0x90
	.long	1
	.long	32
c6vi_info:
.Lc6vi:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .Lc6vz
.Lc6vy:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl 4(%ebp),%eax
	leal -3(%edi),%ecx
.Lc6vq:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja .Lc6vC
.Lc6vB:
	movl 3(%ecx),%ecx
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_Attribute_con_info,-8(%edi)
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%esi
	addl $8,%ebp
	jmp *(%ebp)
.text
	.align 4,0x90
	.long	1
	.long	32
c6vp_info:
.Lc6vp:
	movl 4(%ebp),%eax
	movl %esi,%ecx
	jmp .Lc6vq
.Lc6vt:
	jmp *-16(%ebx)
.Lc6vz:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.Lc6vC:
	movl $12,904(%ebx)
	movl $c6vp_info,(%ebp)
	movl %ecx,%esi
	jmp stg_gc_unpt_r1
.data
	.align 4
.align 1
r65H_closure:
	.long	ghczmprim_GHCziTypes_ZC_static_info
	.long	r65G_closure
	.long	ghczmprim_GHCziTypes_ZMZN_closure+1
	.long	0
.data
	.align 4
.align 1
r65I_closure:
	.long	ghczmprim_GHCziTypes_Izh_static_info
	.long	20
.data
	.align 4
.align 1
r65J_closure:
	.long	r65J_info
	.long	0
	.long	0
	.long	0
.section .rodata
	.align 4
.align 1
c6vT_str:
	.byte	120
	.byte	0
.text
	.align 4,0x90
	.long	0
	.long	22
r65J_info:
.Lc6vU:
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lc6vV
.Lc6vW:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	call newCAF
	addl $12,%esp
	testl %eax,%eax
	je .Lc6vS
.Lc6vR:
	movl $stg_bh_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl $c6vT_str,8(%ebx)
	addl $-12,%ebp
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.Lc6vS:
	jmp *(%esi)
.Lc6vV:
	jmp *-16(%ebx)
.data
	.align 4
.align 1
r65K_closure:
	.long	r65K_info
	.long	0
	.long	0
	.long	0
.section .rodata
	.align 4
.align 1
c6wr_str:
	.byte	60
	.byte	105
	.byte	62
	.byte	102
	.byte	60
	.byte	47
	.byte	105
	.byte	62
	.byte	40
	.byte	60
	.byte	105
	.byte	62
	.byte	120
	.byte	60
	.byte	47
	.byte	105
	.byte	62
	.byte	41
	.byte	61
	.byte	0
.text
	.align 4,0x90
	.long	S6n3_srt-(r65K_info)+64
	.long	0
	.long	65558
r65K_info:
.Lc6wo:
	leal -20(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lc6wH
.Lc6wI:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	call newCAF
	addl $12,%esp
	testl %eax,%eax
	je .Lc6wk
.Lc6wj:
	movl $stg_bh_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl $c6wl_info,-16(%ebp)
	movl $Pages_mkHTML1_closure,%esi
	addl $-16,%ebp
	testw $7,%si
	jne .Lc6wl
.Lc6wm:
	jmp *(%esi)
.Lc6wk:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	0
	.long	32
c6wl_info:
.Lc6wl:
	movl $c6ws_info,-4(%ebp)
	movl $c6wr_str,8(%ebx)
	movl %esi,(%ebp)
	addl $-4,%ebp
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.text
	.align 4,0x90
	.long	1
	.long	32
c6ws_info:
.Lc6ws:
	movl $c6ww_info,(%ebp)
	jmp toJSStr
.text
	.align 4,0x90
	.long	1
	.long	32
c6ww_info:
.Lc6ww:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .Lc6wN
.Lc6wM:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl 4(%ebp),%eax
	leal -3(%edi),%ecx
.Lc6wE:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja .Lc6wQ
.Lc6wP:
	movl 3(%ecx),%ecx
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_Attribute_con_info,-8(%edi)
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%esi
	addl $8,%ebp
	jmp *(%ebp)
.text
	.align 4,0x90
	.long	1
	.long	32
c6wD_info:
.Lc6wD:
	movl 4(%ebp),%eax
	movl %esi,%ecx
	jmp .Lc6wE
.Lc6wH:
	jmp *-16(%ebx)
.Lc6wN:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.Lc6wQ:
	movl $12,904(%ebx)
	movl $c6wD_info,(%ebp)
	movl %ecx,%esi
	jmp stg_gc_unpt_r1
.data
	.align 4
.align 1
r65L_closure:
	.long	ghczmprim_GHCziTypes_ZC_static_info
	.long	r65K_closure
	.long	ghczmprim_GHCziTypes_ZMZN_closure+1
	.long	0
.data
	.align 4
.align 1
.globl Main_main1_closure
Main_main1_closure:
	.long	Main_main1_info
	.long	0
.section .rodata
	.align 4
.align 1
c6zK_str:
	.byte	98
	.byte	97
	.byte	99
	.byte	107
	.byte	103
	.byte	114
	.byte	111
	.byte	117
	.byte	110
	.byte	100
	.byte	67
	.byte	111
	.byte	108
	.byte	111
	.byte	114
	.byte	0
.section .rodata
	.align 4
.align 1
c6zZ_str:
	.byte	108
	.byte	105
	.byte	103
	.byte	104
	.byte	116
	.byte	98
	.byte	108
	.byte	117
	.byte	101
	.byte	0
.section .rodata
	.align 4
.align 1
c6Aq_str:
	.byte	116
	.byte	101
	.byte	120
	.byte	116
	.byte	65
	.byte	108
	.byte	105
	.byte	103
	.byte	110
	.byte	0
.section .rodata
	.align 4
.align 1
c6AF_str:
	.byte	99
	.byte	101
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	0
.section .rodata
	.align 4
.align 1
c6B6_str:
	.byte	102
	.byte	111
	.byte	110
	.byte	116
	.byte	83
	.byte	105
	.byte	122
	.byte	101
	.byte	0
.section .rodata
	.align 4
.align 1
c6Bl_str:
	.byte	49
	.byte	52
	.byte	112
	.byte	116
	.byte	0
.text
	.align 4,0x90
	.long	S6n3_srt-(s6iC_info)+48
	.long	131077
	.long	2
	.long	65548
s6iC_info:
.Lc6CD:
	movl 6(%esi),%eax
	movl %eax,16(%ebx)
	movl 2(%esi),%eax
	movl %eax,8(%ebx)
	jmp Main_readAndDraw1_info
.text
	.align 4,0x90
	.long	S6n3_srt-(s6iT_info)+48
	.long	131077
	.long	2
	.long	65548
s6iT_info:
.Lc6CP:
	movl 8(%ebx),%eax
	leal -24(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb .Lc6CQ
.Lc6CR:
	movl $c6CN_info,-12(%ebp)
	movl 2(%esi),%ecx
	movl 6(%esi),%edx
	movl %eax,%esi
	movl %ecx,-8(%ebp)
	movl %edx,-4(%ebp)
	addl $-12,%ebp
	jmp stg_ap_0_fast
.text
	.align 4,0x90
	.long	S6n3_srt-(c6CN_info)+48
	.long	2
	.long	65568
c6CN_info:
.Lc6CN:
	cmpl $13,19(%esi)
	jne .Lc6CX
.Lc6D1:
	movl $c6D0_info,-12(%ebp)
	movl 7(%esi),%eax
	movl 11(%esi),%ecx
	movl 15(%esi),%edx
	movl 3(%esi),%esi
	movl %ecx,-8(%ebp)
	movl %edx,-4(%ebp)
	movl %eax,(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne .Lc6D0
.Lc6D2:
	jmp *(%esi)
.Lc6CQ:
	movl %eax,8(%ebx)
	jmp *-8(%ebx)
.Lu6E5:
	addl $8,%ebp
.Lc6CX:
	movl $ghczmprim_GHCziTuple_Z0T_closure+1,%esi
	addl $12,%ebp
	jmp *(%ebp)
.Lu6E4:
	addl $12,%ebp
	jmp .Lc6CX
.Lu6E3:
	addl $12,%ebp
	jmp .Lc6CX
.text
	.align 4,0x90
	.long	S6n3_srt-(c6D0_info)+48
	.long	5
	.long	65568
c6D0_info:
.Lc6D0:
	movl %esi,%eax
	andl $7,%eax
	cmpl $2,%eax
	jae .Lu6E3
.Lc6E2:
	movl $c6D6_info,(%ebp)
	movl 12(%ebp),%esi
	testw $7,%si
	jne .Lc6D6
.Lc6Da:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	S6n3_srt-(c6D6_info)+48
	.long	261
	.long	65568
c6D6_info:
.Lc6D6:
	movl %esi,%eax
	andl $7,%eax
	cmpl $2,%eax
	jae .Lu6E4
.Lc6DU:
	movl 4(%ebp),%eax
	movl $c6De_info,4(%ebp)
	movl %eax,%esi
	addl $4,%ebp
	testw $7,%si
	jne .Lc6De
.Lc6Di:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	S6n3_srt-(c6De_info)+48
	.long	132
	.long	65568
c6De_info:
.Lc6De:
	movl %esi,%eax
	andl $7,%eax
	cmpl $2,%eax
	jae .Lu6E5
.Lc6DM:
	movl $c6Dm_info,8(%ebp)
	movl 4(%ebp),%esi
	addl $8,%ebp
	testw $7,%si
	jne .Lc6Dm
.Lc6Dq:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	S6n3_srt-(c6Dm_info)+48
	.long	2
	.long	65568
c6Dm_info:
.Lc6Dm:
	movl %esi,%eax
	andl $7,%eax
	cmpl $2,%eax
	jae .Lc6CX
.Lc6DE:
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl 4(%ebp),%eax
	movl %eax,8(%ebx)
	addl $12,%ebp
	jmp Main_readAndDraw1_info
.section .data
	.align 4
.align 1
u6Gj_srtd:
	.long	S6n3_srt+40
	.long	28
	.long	268435333
.section .data
	.align 4
.align 1
u6Gk_srtd:
	.long	S6n3_srt+40
	.long	27
	.long	134217349
.section .data
	.align 4
.align 1
u6Gl_srtd:
	.long	S6n3_srt+40
	.long	26
	.long	67092101
.section .data
	.align 4
.align 1
u6Gm_srtd:
	.long	S6n3_srt+40
	.long	25
	.long	33537669
.section .data
	.align 4
.align 1
u6Gn_srtd:
	.long	S6n3_srt+48
	.long	22
	.long	4189345
.section .data
	.align 4
.align 1
u6Go_srtd:
	.long	S6n3_srt+48
	.long	22
	.long	4189217
.section .data
	.align 4
.align 1
u6Gp_srtd:
	.long	S6n3_srt+48
	.long	22
	.long	4189217
.section .data
	.align 4
.align 1
u6Gq_srtd:
	.long	S6n3_srt+48
	.long	22
	.long	4188193
.section .data
	.align 4
.align 1
u6Gr_srtd:
	.long	S6n3_srt+48
	.long	22
	.long	4188193
.section .data
	.align 4
.align 1
u6Gs_srtd:
	.long	S6n3_srt+48
	.long	22
	.long	4186145
.section .data
	.align 4
.align 1
u6Gt_srtd:
	.long	S6n3_srt+48
	.long	22
	.long	4153377
.section .data
	.align 4
.align 1
u6Gu_srtd:
	.long	S6n3_srt+48
	.long	22
	.long	4153377
.section .data
	.align 4
.align 1
u6Gv_srtd:
	.long	S6n3_srt+48
	.long	22
	.long	4153377
.section .data
	.align 4
.align 1
u6Gw_srtd:
	.long	S6n3_srt+48
	.long	22
	.long	4153377
.section .data
	.align 4
.align 1
u6Gx_srtd:
	.long	S6n3_srt+48
	.long	22
	.long	4153377
.section .data
	.align 4
.align 1
u6Gy_srtd:
	.long	S6n3_srt+48
	.long	22
	.long	4145185
.section .data
	.align 4
.align 1
u6Gz_srtd:
	.long	S6n3_srt+48
	.long	22
	.long	4145185
.section .data
	.align 4
.align 1
u6GA_srtd:
	.long	S6n3_srt+48
	.long	22
	.long	4145185
.section .data
	.align 4
.align 1
u6GB_srtd:
	.long	S6n3_srt+48
	.long	22
	.long	4145185
.section .data
	.align 4
.align 1
u6GC_srtd:
	.long	S6n3_srt+48
	.long	22
	.long	4145185
.section .data
	.align 4
.align 1
u6GD_srtd:
	.long	S6n3_srt+48
	.long	22
	.long	4145185
.section .data
	.align 4
.align 1
u6GE_srtd:
	.long	S6n3_srt+48
	.long	22
	.long	4145185
.section .data
	.align 4
.align 1
u6GF_srtd:
	.long	S6n3_srt+48
	.long	22
	.long	4145185
.section .data
	.align 4
.align 1
u6GG_srtd:
	.long	S6n3_srt+48
	.long	22
	.long	4145185
.section .data
	.align 4
.align 1
u6GH_srtd:
	.long	S6n3_srt+48
	.long	22
	.long	4145185
.section .data
	.align 4
.align 1
u6GI_srtd:
	.long	S6n3_srt+48
	.long	22
	.long	4145185
.section .data
	.align 4
.align 1
u6GJ_srtd:
	.long	S6n3_srt+48
	.long	22
	.long	4145185
.section .data
	.align 4
.align 1
u6GK_srtd:
	.long	S6n3_srt+48
	.long	22
	.long	4145185
.section .data
	.align 4
.align 1
u6GL_srtd:
	.long	S6n3_srt+48
	.long	22
	.long	4128801
.section .data
	.align 4
.align 1
u6GM_srtd:
	.long	S6n3_srt+48
	.long	22
	.long	4128801
.section .data
	.align 4
.align 1
u6GN_srtd:
	.long	S6n3_srt+48
	.long	22
	.long	4128769
.section .data
	.align 4
.align 1
u6GO_srtd:
	.long	S6n3_srt+48
	.long	22
	.long	4128769
.section .data
	.align 4
.align 1
u6GP_srtd:
	.long	S6n3_srt+48
	.long	22
	.long	4128769
.section .data
	.align 4
.align 1
u6GQ_srtd:
	.long	S6n3_srt+48
	.long	22
	.long	3866625
.section .data
	.align 4
.align 1
u6GR_srtd:
	.long	S6n3_srt+48
	.long	22
	.long	3866625
.section .data
	.align 4
.align 1
u6GS_srtd:
	.long	S6n3_srt+48
	.long	21
	.long	1638401
.section .data
	.align 4
.align 1
u6GT_srtd:
	.long	S6n3_srt+48
	.long	21
	.long	1638401
.section .data
	.align 4
.align 1
u6GU_srtd:
	.long	S6n3_srt+48
	.long	20
	.long	589825
.section .data
	.align 4
.align 1
u6GV_srtd:
	.long	S6n3_srt+40
	.long	30
	.long	1073741701
.text
	.align 4,0x90
	.long	u6GV_srtd-(Main_main1_info)+0
	.long	65539
	.long	0
	.long	-65521
.globl Main_main1_info
Main_main1_info:
.Lc6E6:
	leal -28(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lc6E7
.Lc6E8:
	movl $c6zd_info,-4(%ebp)
	movl $Main_canHeight_closure+1,16(%ebx)
	movl $Main_canHeight_closure+1,8(%ebx)
	movl $stg_ap_v_info,-8(%ebp)
	addl $-8,%ebp
	jmp Pages_mkCanvas_info
.text
	.align 4,0x90
	.long	u6Gj_srtd-(c6zd_info)+0
	.long	0
	.long	-65504
c6zd_info:
.Lc6zd:
	movl $c6zf_info,-4(%ebp)
	movl $r65L_closure+2,32(%ebx)
	movl $Pages_mkHTML2_closure+1,24(%ebx)
	movl $LlHybR7LOSS7VAc0pG6N16_ControlziMonadziIOziClass_zdfMonadIOIO_closure,16(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_zdfIsElemElem_closure,8(%ebx)
	movl $stg_ap_v_info,-8(%ebp)
	movl %esi,(%ebp)
	addl $-8,%ebp
	jmp FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_with_info
.text
	.align 4,0x90
	.long	u6Gk_srtd-(c6zf_info)+0
	.long	1
	.long	-65504
c6zf_info:
.Lc6zf:
	movl $c6zh_info,-4(%ebp)
	movl $r65J_closure,16(%ebx)
	movl $r65I_closure+1,8(%ebx)
	movl $stg_ap_v_info,-8(%ebp)
	movl %esi,(%ebp)
	addl $-8,%ebp
	jmp Pages_mkInput_info
.text
	.align 4,0x90
	.long	u6Gl_srtd-(c6zh_info)+0
	.long	2
	.long	-65504
c6zh_info:
.Lc6zh:
	movl $c6zj_info,-4(%ebp)
	movl $r65H_closure+2,32(%ebx)
	movl $Pages_mkButton2_closure+1,24(%ebx)
	movl $LlHybR7LOSS7VAc0pG6N16_ControlziMonadziIOziClass_zdfMonadIOIO_closure,16(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_zdfIsElemElem_closure,8(%ebx)
	movl $stg_ap_v_info,-8(%ebp)
	movl %esi,(%ebp)
	addl $-8,%ebp
	jmp FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_with_info
.text
	.align 4,0x90
	.long	u6Gm_srtd-(c6zj_info)+0
	.long	3
	.long	-65504
c6zj_info:
.Lc6zj:
	movl $c6zl_info,-4(%ebp)
	movl $r65F_closure+2,32(%ebx)
	movl $Pages_mkButton2_closure+1,24(%ebx)
	movl $LlHybR7LOSS7VAc0pG6N16_ControlziMonadziIOziClass_zdfMonadIOIO_closure,16(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_zdfIsElemElem_closure,8(%ebx)
	movl $stg_ap_v_info,-8(%ebp)
	movl %esi,(%ebp)
	addl $-8,%ebp
	jmp FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_with_info
.text
	.align 4,0x90
	.long	u6Gn_srtd-(c6zl_info)+0
	.long	4
	.long	-65504
c6zl_info:
.Lc6zl:
	movl $c6zn_info,-4(%ebp)
	movl %esi,(%ebp)
	addl $-4,%ebp
	jmp Pages_mkDiv1_info
.text
	.align 4,0x90
	.long	u6Go_srtd-(c6zn_info)+0
	.long	5
	.long	-65504
c6zn_info:
.Lc6zn:
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja .Lc6Eg
.Lc6Ef:
	movl $ghczmprim_GHCziTypes_ZC_con_info,-20(%edi)
	movl 12(%ebp),%eax
	movl %eax,-16(%edi)
	movl $ghczmprim_GHCziTypes_ZMZN_closure+1,-12(%edi)
	movl $ghczmprim_GHCziTypes_ZC_con_info,-8(%edi)
	movl 16(%ebp),%eax
	movl %eax,-4(%edi)
	leal -18(%edi),%eax
	movl %eax,(%edi)
	movl $c6zr_info,(%ebp)
	leal -6(%edi),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	movl %esi,16(%ebp)
	jmp Pages_appendChildren1_info
.text
	.align 4,0x90
	.long	u6Gp_srtd-(c6zr_info)+0
	.long	5
	.long	-65504
c6zr_info:
.Lc6zr:
	addl $48,%edi
	cmpl 856(%ebx),%edi
	ja .Lc6Ej
.Lc6Ei:
	movl $ghczmprim_GHCziTypes_ZC_con_info,-44(%edi)
	movl 4(%ebp),%eax
	movl %eax,-40(%edi)
	movl $ghczmprim_GHCziTypes_ZMZN_closure+1,-36(%edi)
	movl $ghczmprim_GHCziTypes_ZC_con_info,-32(%edi)
	movl 8(%ebp),%eax
	movl %eax,-28(%edi)
	leal -42(%edi),%eax
	movl %eax,-24(%edi)
	movl $ghczmprim_GHCziTypes_ZC_con_info,-20(%edi)
	movl 16(%ebp),%eax
	movl %eax,-16(%edi)
	leal -30(%edi),%eax
	movl %eax,-12(%edi)
	movl $ghczmprim_GHCziTypes_ZC_con_info,-8(%edi)
	movl 20(%ebp),%eax
	movl %eax,-4(%edi)
	leal -18(%edi),%eax
	movl %eax,(%edi)
	movl $c6zx_info,4(%ebp)
	leal -6(%edi),%eax
	movl %eax,8(%ebx)
	addl $4,%ebp
	jmp Pages_columnzugo_info
.text
	.align 4,0x90
	.long	u6Gq_srtd-(c6zx_info)+0
	.long	260
	.long	-65504
c6zx_info:
.Lc6zx:
	movl $c6zB_info,(%ebp)
	movl %esi,8(%ebx)
	jmp Pages_column2_info
.text
	.align 4,0x90
	.long	u6Gr_srtd-(c6zB_info)+0
	.long	260
	.long	-65504
c6zB_info:
.Lc6zB:
	movl $c6zD_info,(%ebp)
	movl %esi,16(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_documentBody1_closure,8(%ebx)
	jmp Pages_appendChildren1_info
.text
	.align 4,0x90
	.long	u6Gs_srtd-(c6zD_info)+0
	.long	260
	.long	-65504
c6zD_info:
.Lc6zD:
	movl $c6zF_info,(%ebp)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_documentBody1_closure,%esi
	testw $7,%si
	jne .Lc6zF
.Lc6zG:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	u6Gt_srtd-(c6zF_info)+0
	.long	260
	.long	-65504
c6zF_info:
.Lc6zF:
	movl $c6zL_info,(%ebp)
	movl $c6zK_str,8(%ebx)
	movl 3(%esi),%eax
	movl %eax,12(%ebp)
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.text
	.align 4,0x90
	.long	u6Gu_srtd-(c6zL_info)+0
	.long	260
	.long	-65504
c6zL_info:
.Lc6zL:
	movl $c6zP_info,(%ebp)
	jmp toJSStr
.text
	.align 4,0x90
	.long	u6Gv_srtd-(c6zP_info)+0
	.long	260
	.long	-65504
c6zP_info:
.Lc6zP:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .Lc6Er
.Lc6Eq:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl $c6A0_info,-4(%ebp)
	movl $c6zZ_str,8(%ebx)
	movl (%edi),%eax
	movl %eax,(%ebp)
	addl $-4,%ebp
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.text
	.align 4,0x90
	.long	u6Gw_srtd-(c6A0_info)+0
	.long	581
	.long	-65504
c6A0_info:
.Lc6A0:
	movl $c6A4_info,(%ebp)
	jmp toJSStr
.text
	.align 4,0x90
	.long	u6Gx_srtd-(c6A4_info)+0
	.long	581
	.long	-65504
c6A4_info:
.Lc6A4:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .Lc6Ew
.Lc6Ev:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl $c6Ae_info,-4(%ebp)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_jsSetStylezuf1_closure,%esi
	movl (%edi),%eax
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne .Lc6Ae
.Lc6Af:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	u6Gy_srtd-(c6Ae_info)+0
	.long	1222
	.long	-65504
c6Ae_info:
.Lc6Ae:
	movl 4(%ebp),%eax
	movl $c6Ao_info,4(%ebp)
	movl 3(%esi),%ecx
	movl 8(%ebp),%edx
	movl %ecx,8(%ebp)
	movl %edx,64(%esp)
	movl 20(%ebp),%edx
	addl $4,%ebp
	movl %edx,76(%esp)
	movl 872(%ebx),%edx
	movl %eax,88(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,100(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,112(%esp)
	movl 104(%edx),%ecx
	movl %ecx,124(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,136(%esp)
	movl 112(%esp),%eax
	subl %ecx,%eax
	movl 124(%esp),%ecx
	movl %eax,148(%esp)
	movl 136(%esp),%eax
	sbbl %eax,%ecx
	movl 148(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call suspendThread
	addl $12,%esp
	subl $12,%esp
	movl 100(%esp),%ecx
	pushl %ecx
	movl 80(%esp),%ecx
	pushl %ecx
	movl 96(%esp),%ecx
	pushl %ecx
	movl 124(%esp),%ecx
	pushl %ecx
	movl %eax,188(%esp)
	call __app3
	addl $28,%esp
	subl $8,%esp
	movl 168(%esp),%ecx
	pushl %ecx
	movl %eax,184(%esp)
	call resumeThread
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,184(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,196(%esp)
	movl %eax,%ecx
	movl %edx,208(%esp)
	movl 196(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 184(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,220(%esp)
	movl 208(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 220(%esp),%ecx
	adcl %eax,%ecx
	movl 184(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 172(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
.text
	.align 4,0x90
	.long	u6Gz_srtd-(c6Ao_info)+0
	.long	581
	.long	-65504
c6Ao_info:
.Lc6Ao:
	movl $c6Ar_info,(%ebp)
	movl $c6Aq_str,8(%ebx)
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.text
	.align 4,0x90
	.long	u6GA_srtd-(c6Ar_info)+0
	.long	581
	.long	-65504
c6Ar_info:
.Lc6Ar:
	movl $c6Av_info,(%ebp)
	jmp toJSStr
.text
	.align 4,0x90
	.long	u6GB_srtd-(c6Av_info)+0
	.long	581
	.long	-65504
c6Av_info:
.Lc6Av:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .Lc6ED
.Lc6EC:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl $c6AG_info,-4(%ebp)
	movl $c6AF_str,8(%ebx)
	movl (%edi),%eax
	movl %eax,(%ebp)
	addl $-4,%ebp
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.text
	.align 4,0x90
	.long	u6GC_srtd-(c6AG_info)+0
	.long	1222
	.long	-65504
c6AG_info:
.Lc6AG:
	movl $c6AK_info,(%ebp)
	jmp toJSStr
.text
	.align 4,0x90
	.long	u6GD_srtd-(c6AK_info)+0
	.long	1222
	.long	-65504
c6AK_info:
.Lc6AK:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .Lc6EI
.Lc6EH:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl 4(%ebp),%eax
	movl $c6AZ_info,4(%ebp)
	movl 8(%ebp),%ecx
	movl 20(%ebp),%edx
	addl $4,%ebp
	movl %ecx,808(%esp)
	movl (%edi),%ecx
	movl %edx,820(%esp)
	movl 872(%ebx),%edx
	movl %eax,832(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,844(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,856(%esp)
	movl 104(%edx),%ecx
	movl %ecx,868(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,880(%esp)
	movl 856(%esp),%eax
	subl %ecx,%eax
	movl 868(%esp),%ecx
	movl %eax,892(%esp)
	movl 880(%esp),%eax
	sbbl %eax,%ecx
	movl 892(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call suspendThread
	addl $12,%esp
	subl $12,%esp
	movl 856(%esp),%ecx
	pushl %ecx
	movl 848(%esp),%ecx
	pushl %ecx
	movl 840(%esp),%ecx
	pushl %ecx
	movl 832(%esp),%ecx
	pushl %ecx
	movl %eax,932(%esp)
	call __app3
	addl $28,%esp
	subl $8,%esp
	movl 912(%esp),%ecx
	pushl %ecx
	movl %eax,928(%esp)
	call resumeThread
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,928(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,940(%esp)
	movl %eax,%ecx
	movl %edx,952(%esp)
	movl 940(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 928(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,964(%esp)
	movl 952(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 964(%esp),%ecx
	adcl %eax,%ecx
	movl 928(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 916(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
.text
	.align 4,0x90
	.long	u6GE_srtd-(c6AZ_info)+0
	.long	581
	.long	-65504
c6AZ_info:
.Lc6AZ:
	movl $c6B1_info,(%ebp)
	movl 12(%ebp),%esi
	testw $7,%si
	jne .Lc6B1
.Lc6B2:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	u6GF_srtd-(c6B1_info)+0
	.long	837
	.long	-65504
c6B1_info:
.Lc6B1:
	movl $c6B7_info,(%ebp)
	movl $c6B6_str,8(%ebx)
	movl 3(%esi),%eax
	movl %eax,12(%ebp)
	movl %esi,16(%ebp)
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.text
	.align 4,0x90
	.long	u6GG_srtd-(c6B7_info)+0
	.long	325
	.long	-65504
c6B7_info:
.Lc6B7:
	movl $c6Bb_info,(%ebp)
	jmp toJSStr
.text
	.align 4,0x90
	.long	u6GH_srtd-(c6Bb_info)+0
	.long	325
	.long	-65504
c6Bb_info:
.Lc6Bb:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .Lc6EP
.Lc6EO:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl $c6Bm_info,-4(%ebp)
	movl $c6Bl_str,8(%ebx)
	movl (%edi),%eax
	movl %eax,(%ebp)
	addl $-4,%ebp
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.text
	.align 4,0x90
	.long	u6GI_srtd-(c6Bm_info)+0
	.long	710
	.long	-65504
c6Bm_info:
.Lc6Bm:
	movl $c6Bq_info,(%ebp)
	jmp toJSStr
.text
	.align 4,0x90
	.long	u6GJ_srtd-(c6Bq_info)+0
	.long	710
	.long	-65504
c6Bq_info:
.Lc6Bq:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .Lc6EU
.Lc6ET:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl 8(%ebp),%eax
	movl $c6BF_info,8(%ebp)
	movl 16(%ebp),%ecx
	movl 4(%ebp),%edx
	addl $8,%ebp
	movl %eax,976(%esp)
	movl (%edi),%eax
	movl %ecx,988(%esp)
	movl 872(%ebx),%ecx
	movl %edx,1000(%esp)
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,1012(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,1024(%esp)
	movl 104(%ecx),%eax
	movl %eax,1036(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,1048(%esp)
	movl 1024(%esp),%edx
	subl %eax,%edx
	movl 1036(%esp),%eax
	movl %edx,1060(%esp)
	movl 1048(%esp),%edx
	sbbl %edx,%eax
	movl 1060(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call suspendThread
	addl $12,%esp
	subl $12,%esp
	movl 1024(%esp),%ecx
	pushl %ecx
	movl 1016(%esp),%ecx
	pushl %ecx
	movl 1008(%esp),%ecx
	pushl %ecx
	movl 1000(%esp),%ecx
	pushl %ecx
	movl %eax,1100(%esp)
	call __app3
	addl $28,%esp
	subl $8,%esp
	movl 1080(%esp),%ecx
	pushl %ecx
	movl %eax,1096(%esp)
	call resumeThread
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,1096(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,1108(%esp)
	movl %eax,%ecx
	movl %edx,1120(%esp)
	movl 1108(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 1096(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,1132(%esp)
	movl 1120(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 1132(%esp),%ecx
	adcl %eax,%ecx
	movl 1096(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 1084(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
.text
	.align 4,0x90
	.long	u6GK_srtd-(c6BF_info)+0
	.long	132
	.long	-65504
c6BF_info:
.Lc6BF:
	movl $c6BH_info,(%ebp)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_focuszuf1_closure,%esi
	testw $7,%si
	jne .Lc6BH
.Lc6BI:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	u6GL_srtd-(c6BH_info)+0
	.long	132
	.long	-65504
c6BH_info:
.Lc6BH:
	movl $c6BP_info,(%ebp)
	movl 3(%esi),%eax
	movl 8(%ebp),%ecx
	movl 872(%ebx),%edx
	movl %eax,232(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,244(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,256(%esp)
	movl 104(%edx),%ecx
	movl %ecx,268(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,280(%esp)
	movl 256(%esp),%eax
	subl %ecx,%eax
	movl 268(%esp),%ecx
	movl %eax,292(%esp)
	movl 280(%esp),%eax
	sbbl %eax,%ecx
	movl 292(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call suspendThread
	addl $12,%esp
	subl $4,%esp
	movl 248(%esp),%ecx
	pushl %ecx
	movl 240(%esp),%ecx
	pushl %ecx
	movl %eax,316(%esp)
	call __app1
	addl $12,%esp
	subl $8,%esp
	movl 312(%esp),%ecx
	pushl %ecx
	movl %eax,328(%esp)
	call resumeThread
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,328(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,340(%esp)
	movl %eax,%ecx
	movl %edx,352(%esp)
	movl 340(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 328(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,364(%esp)
	movl 352(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 364(%esp),%ecx
	adcl %eax,%ecx
	movl 328(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 316(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
.text
	.align 4,0x90
	.long	u6GM_srtd-(c6BP_info)+0
	.long	132
	.long	-65504
c6BP_info:
.Lc6BP:
	movl $c6BR_info,(%ebp)
	movl $Pages_selectzuf1_closure,%esi
	testw $7,%si
	jne .Lc6BR
.Lc6BS:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	u6GN_srtd-(c6BR_info)+0
	.long	132
	.long	-65504
c6BR_info:
.Lc6BR:
	movl $c6BZ_info,(%ebp)
	movl 3(%esi),%eax
	movl 8(%ebp),%ecx
	movl 872(%ebx),%edx
	movl %eax,376(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,388(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,400(%esp)
	movl 104(%edx),%ecx
	movl %ecx,412(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,424(%esp)
	movl 400(%esp),%eax
	subl %ecx,%eax
	movl 412(%esp),%ecx
	movl %eax,436(%esp)
	movl 424(%esp),%eax
	sbbl %eax,%ecx
	movl 436(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call suspendThread
	addl $12,%esp
	subl $4,%esp
	movl 392(%esp),%ecx
	pushl %ecx
	movl 384(%esp),%ecx
	pushl %ecx
	movl %eax,460(%esp)
	call __app1
	addl $12,%esp
	subl $8,%esp
	movl 456(%esp),%ecx
	pushl %ecx
	movl %eax,472(%esp)
	call resumeThread
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,472(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,484(%esp)
	movl %eax,%ecx
	movl %edx,496(%esp)
	movl 484(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 472(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,508(%esp)
	movl 496(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 508(%esp),%ecx
	adcl %eax,%ecx
	movl 472(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 460(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
.text
	.align 4,0x90
	.long	u6GO_srtd-(c6BZ_info)+0
	.long	132
	.long	-65504
c6BZ_info:
.Lc6BZ:
	movl $c6C1_info,(%ebp)
	movl 16(%ebp),%esi
	testw $7,%si
	jne .Lc6C1
.Lc6C2:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	u6GP_srtd-(c6C1_info)+0
	.long	644
	.long	-65504
c6C1_info:
.Lc6C1:
	movl $c6C6_info,(%ebp)
	movl 3(%esi),%eax
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziGraphicsziCanvas_zdfFromAnyCanvaszuf2_closure,%esi
	movl %eax,16(%ebp)
	testw $7,%si
	jne .Lc6C6
.Lc6C7:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	u6GQ_srtd-(c6C6_info)+0
	.long	644
	.long	-65504
c6C6_info:
.Lc6C6:
	movl $c6Ce_info,(%ebp)
	movl 3(%esi),%eax
	movl 16(%ebp),%ecx
	movl 872(%ebx),%edx
	movl %eax,520(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,532(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,544(%esp)
	movl 104(%edx),%ecx
	movl %ecx,556(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,568(%esp)
	movl 544(%esp),%eax
	subl %ecx,%eax
	movl 556(%esp),%ecx
	movl %eax,580(%esp)
	movl 568(%esp),%eax
	sbbl %eax,%ecx
	movl 580(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call suspendThread
	addl $12,%esp
	subl $4,%esp
	movl 536(%esp),%ecx
	pushl %ecx
	movl 528(%esp),%ecx
	pushl %ecx
	movl %eax,604(%esp)
	call __app1
	addl $12,%esp
	subl $8,%esp
	movl 600(%esp),%ecx
	pushl %ecx
	movl %eax,616(%esp)
	call resumeThread
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,616(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,628(%esp)
	movl %eax,%ecx
	movl %edx,640(%esp)
	movl 628(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 616(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,652(%esp)
	movl 640(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 652(%esp),%ecx
	adcl %eax,%ecx
	movl 616(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 604(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
.text
	.align 4,0x90
	.long	u6GR_srtd-(c6Ce_info)+0
	.long	644
	.long	-65504
c6Ce_info:
.Lc6Ce:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .Lc6F5
.Lc6F4:
	movl $base_GHCziPtr_Ptr_con_info,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%eax
	andl $7,%eax
	cmpl $2,%eax
	jae .Lc6Fn
.Lc6Fo:
	movl $r65D_closure,%esi
	addl $20,%ebp
	jmp stg_raiseIOzh
.text
	.align 4,0x90
	.long	u6GS_srtd-(c6Cn_info)+0
	.long	644
	.long	-65504
c6Cn_info:
.Lc6Cn:
	movl $c6Cv_info,(%ebp)
	movl 3(%esi),%eax
	movl 16(%ebp),%ecx
	movl 872(%ebx),%edx
	movl %eax,664(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,676(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,688(%esp)
	movl 104(%edx),%ecx
	movl %ecx,700(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,712(%esp)
	movl 688(%esp),%eax
	subl %ecx,%eax
	movl 700(%esp),%ecx
	movl %eax,724(%esp)
	movl 712(%esp),%eax
	sbbl %eax,%ecx
	movl 724(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call suspendThread
	addl $12,%esp
	subl $4,%esp
	movl 680(%esp),%ecx
	pushl %ecx
	movl 672(%esp),%ecx
	pushl %ecx
	movl %eax,748(%esp)
	call __app1
	addl $12,%esp
	subl $8,%esp
	movl 744(%esp),%ecx
	pushl %ecx
	movl %eax,760(%esp)
	call resumeThread
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,760(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,772(%esp)
	movl %eax,%ecx
	movl %edx,784(%esp)
	movl 772(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 760(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,796(%esp)
	movl 784(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 796(%esp),%ecx
	adcl %eax,%ecx
	movl 760(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 748(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
.Lc6Fn:
	movl $c6Cn_info,(%ebp)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziGraphicsziCanvas_zdfFromAnyCanvaszuf1_closure,%esi
	testw $7,%si
	jne .Lc6Cn
.Lc6Co:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	u6GT_srtd-(c6Cv_info)+0
	.long	644
	.long	-65504
c6Cv_info:
.Lc6Cv:
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja .Lc6Fh
.Lc6Fg:
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziGraphicsziCanvas_Canvas_con_info,-20(%edi)
	movl %esi,-16(%edi)
	movl 16(%ebp),%eax
	movl %eax,-12(%edi)
	movl $s6iC_info,-8(%edi)
	movl 12(%ebp),%eax
	movl %eax,-4(%edi)
	leal -19(%edi),%eax
	movl %eax,(%edi)
	movl $c6CG_info,8(%ebp)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziEventsziMouseEvents_Click_closure+1,40(%ebx)
	movl 4(%ebp),%ecx
	movl %ecx,32(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziEventsziMouseEvents_zdfEventMouseEvent_closure,24(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_zdfIsElemElem_closure,16(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziEventsziCore_zdfMonadEventIO_closure,8(%ebx)
	leal -6(%edi),%ecx
	movl %ecx,(%ebp)
	movl $stg_ap_v_info,4(%ebp)
	movl %eax,16(%ebp)
	jmp FxthDgO5vhFC0dVxe1OwkF_HasteziEventsziCore_onEvent_info
.text
	.align 4,0x90
	.long	u6GU_srtd-(c6CG_info)+0
	.long	2
	.long	-65504
c6CG_info:
.Lc6CG:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja .Lc6Fk
.Lc6Fj:
	movl $s6iT_info,-8(%edi)
	movl 4(%ebp),%eax
	movl %eax,-4(%edi)
	movl 8(%ebp),%ecx
	movl %ecx,(%edi)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziEventsziKeyEvents_KeyUp_closure+2,40(%ebx)
	movl %eax,32(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziEventsziKeyEvents_zdfEventKeyEvent_closure,24(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_zdfIsElemElem_closure,16(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziEventsziCore_zdfMonadEventIO_closure,8(%ebx)
	leal -6(%edi),%eax
	movl %eax,4(%ebp)
	movl $stg_ap_v_info,8(%ebp)
	addl $4,%ebp
	jmp FxthDgO5vhFC0dVxe1OwkF_HasteziEventsziCore_onEvent_info
.Lc6E7:
	movl $Main_main1_closure,%esi
	jmp *-8(%ebx)
.Lc6Eg:
	movl $24,904(%ebx)
	jmp stg_gc_unpt_r1
.Lc6Ej:
	movl $48,904(%ebx)
	jmp stg_gc_unpt_r1
.Lc6Er:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.Lc6Ew:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.Lc6ED:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.Lc6EI:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.Lc6EP:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.Lc6EU:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.Lc6F5:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.Lc6Fh:
	movl $24,904(%ebx)
	jmp stg_gc_unbx_r1
.Lc6Fk:
	movl $12,904(%ebx)
	jmp stg_gc_unpt_r1
.data
	.align 4
.align 1
.globl Main_main_closure
Main_main_closure:
	.long	Main_main_info
	.long	0
.text
	.align 4,0x90
	.long	S6n3_srt-(Main_main_info)+156
	.long	65539
	.long	0
	.long	65551
.globl Main_main_info
Main_main_info:
.Lc6Kc:
	jmp Main_main1_info
.data
	.align 4
.align 1
.globl Main_main2_closure
Main_main2_closure:
	.long	Main_main2_info
	.long	0
.text
	.align 4,0x90
	.long	S6n3_srt-(Main_main2_info)+156
	.long	65539
	.long	0
	.long	196623
.globl Main_main2_info
Main_main2_info:
.Lc6Kn:
	movl $Main_main1_closure+1,8(%ebx)
	jmp base_GHCziTopHandler_runMainIO1_info
.data
	.align 4
.align 1
.globl ZCMain_main_closure
ZCMain_main_closure:
	.long	ZCMain_main_info
	.long	0
.text
	.align 4,0x90
	.long	S6n3_srt-(ZCMain_main_info)+164
	.long	65539
	.long	0
	.long	65551
.globl ZCMain_main_info
ZCMain_main_info:
.Lc6Ky:
	jmp Main_main2_info
.section .data
	.align 4
.align 1
S6n3_srt:
	.long	Expr_eval_closure
	.long	Main_zdwpoints_closure
	.long	Main_points_closure
	.long	FxthDgO5vhFC0dVxe1OwkF_HasteziGraphicsziCanvas_line2_closure
	.long	Expr_expr1_closure
	.long	FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_jsSetzuf1_closure
	.long	FxthDgO5vhFC0dVxe1OwkF_HasteziGraphicsziCanvas_zdwa16_closure
	.long	FxthDgO5vhFC0dVxe1OwkF_HasteziGraphicsziCanvas_bufferzuf1_closure
	.long	Main_readAndDraw3_closure
	.long	Main_readAndDraw4_closure
	.long	LlHybR7LOSS7VAc0pG6N16_ControlziMonadziIOziClass_zdfMonadIOIO_closure
	.long	FxthDgO5vhFC0dVxe1OwkF_HasteziDOM_getProp_closure
	.long	Main_readAndDraw1_closure
	.long	base_GHCziIOziException_zdfExceptionIOExceptionzuzdctoException_closure
	.long	r65C_closure
	.long	Pages_mkButton1_closure
	.long	Pages_mkHTML1_closure
	.long	Pages_selectzuf1_closure
	.long	Pages_mkHTML2_closure
	.long	Pages_mkDiv1_closure
	.long	Pages_mkButton2_closure
	.long	FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_with_closure
	.long	Pages_columnzugo_closure
	.long	Pages_appendChildren1_closure
	.long	Pages_mkInput_closure
	.long	FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_jsSetStylezuf1_closure
	.long	FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_focuszuf1_closure
	.long	FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_documentBody1_closure
	.long	FxthDgO5vhFC0dVxe1OwkF_HasteziEventsziCore_onEvent_closure
	.long	FxthDgO5vhFC0dVxe1OwkF_HasteziGraphicsziCanvas_zdfFromAnyCanvaszuf1_closure
	.long	FxthDgO5vhFC0dVxe1OwkF_HasteziGraphicsziCanvas_zdfFromAnyCanvaszuf2_closure
	.long	FxthDgO5vhFC0dVxe1OwkF_HasteziEventsziCore_zdfMonadEventIO_closure
	.long	FxthDgO5vhFC0dVxe1OwkF_HasteziEventsziMouseEvents_zdfEventMouseEvent_closure
	.long	r65D_closure
	.long	r65F_closure
	.long	r65H_closure
	.long	r65J_closure
	.long	r65L_closure
	.long	Pages_mkCanvas_closure
	.long	Main_main1_closure
	.long	base_GHCziTopHandler_runMainIO1_closure
	.long	Main_main2_closure
.ident "GHC 7.10.2"

