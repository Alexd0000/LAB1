{-# LINE 1 "C:\Users\Allll\AppData\Local\Temp\ghc3008_0\ghc_7.s" #-}
.data
	.align 4
.align 1
.globl __stginit_Main
__stginit_Main:
.data
	.align 4
.align 1
rc5A_closure:
	.long	rc5A_info
	.long	0
	.long	0
	.long	0
.text
	.align 4,0x90
	.long	Sczg_srt-(rc5A_info)+0
	.long	0
	.long	196630
rc5A_info:
.Lcczd:
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lccze
.Lcczf:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	call newCAF
	addl $12,%esp
	testl %eax,%eax
	je .Lcczc
.Lcczb:
	movl $stg_bh_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl $base_TextziRead_readEither4_closure,8(%ebx)
	addl $-12,%ebp
	jmp base_GHCziErr_error_info
.Lcczc:
	jmp *(%esi)
.Lccze:
	jmp *-16(%ebx)
.data
	.align 4
.align 1
rc5B_closure:
	.long	rc5B_info
	.long	0
	.long	0
	.long	0
.text
	.align 4,0x90
	.long	Sczg_srt-(rc5B_info)+0
	.long	0
	.long	327702
rc5B_info:
.Lcczs:
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lcczt
.Lcczu:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	call newCAF
	addl $12,%esp
	testl %eax,%eax
	je .Lcczr
.Lcczq:
	movl $stg_bh_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl $base_TextziRead_readEither2_closure,8(%ebx)
	addl $-12,%ebp
	jmp base_GHCziErr_error_info
.Lcczr:
	jmp *(%esi)
.Lcczt:
	jmp *-16(%ebx)
.data
	.align 4
.align 1
rc5C_closure:
	.long	rc5C_info
	.long	0
	.long	0
	.long	0
.text
	.align 4,0x90
	.long	Sczg_srt-(rc5C_info)+12
	.long	0
	.long	196630
rc5C_info:
.LcczG:
	leal -20(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .LcczH
.LcczI:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	call newCAF
	addl $12,%esp
	testl %eax,%eax
	je .LcczF
.LcczE:
	movl $stg_bh_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl $base_TextziParserCombinatorsziReadPrec_minPrec_closure,16(%ebx)
	movl $base_GHCziRead_zdfReadDoublezuzdsconvertFrac_closure+1,8(%ebx)
	movl $stg_ap_p_info,-20(%ebp)
	movl $base_TextziRead_readEither5_closure+1,-16(%ebp)
	addl $-20,%ebp
	jmp base_GHCziRead_zdfReadDouble9_info
.LcczF:
	jmp *(%esi)
.LcczH:
	jmp *-16(%ebx)
.data
	.align 4
.align 1
.globl Main_canHeight_closure
Main_canHeight_closure:
	.long	ghczmprim_GHCziTypes_Izh_static_info
	.long	300
.data
	.align 4
.align 1
.globl Main_canWidth_closure
Main_canWidth_closure:
	.long	stg_IND_STATIC_info
	.long	Main_canHeight_closure+1
	.long	0
	.long	0
.data
	.align 4
.align 1
.globl Main_readAndDraw4_closure
Main_readAndDraw4_closure:
	.long	Main_readAndDraw4_info
	.long	0
	.long	0
	.long	0
.section .rodata
	.align 4
.align 1
cczY_str:
	.byte	118
	.byte	97
	.byte	108
	.byte	117
	.byte	101
	.byte	0
.text
	.align 4,0x90
	.long	0
	.long	22
.globl Main_readAndDraw4_info
Main_readAndDraw4_info:
.LcczZ:
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .LccA0
.LccA1:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	call newCAF
	addl $12,%esp
	testl %eax,%eax
	je .LcczX
.LcczW:
	movl $stg_bh_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl $cczY_str,8(%ebx)
	addl $-12,%ebp
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.LcczX:
	jmp *(%esi)
.LccA0:
	jmp *-16(%ebx)
.data
	.align 4
.align 1
.globl Main_saveExpr1_closure
Main_saveExpr1_closure:
	.long	Main_saveExpr1_info
	.long	0
.text
	.align 4,0x90
	.long	Sczg_srt-(Main_saveExpr1_info)+20
	.long	196623
	.long	0
	.long	4128783
.globl Main_saveExpr1_info
Main_saveExpr1_info:
.LccBr:
	movl 16(%ebx),%eax
	movl 8(%ebx),%ecx
	leal -16(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb .LccBs
.LccBt:
	movl $ccBc_info,-8(%ebp)
	movl $Main_readAndDraw4_closure,32(%ebx)
	movl %ecx,24(%ebx)
	movl $LlHybR7LOSS7VAc0pG6N16_ControlziMonadziIOziClass_zdfMonadIOIO_closure,16(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_zdfIsElemElem_closure,8(%ebx)
	movl $stg_ap_v_info,-12(%ebp)
	movl %eax,-4(%ebp)
	addl $-12,%ebp
	jmp FxthDgO5vhFC0dVxe1OwkF_HasteziDOM_getProp_info
.text
	.align 4,0x90
	.long	Sczg_srt-(ccBc_info)+20
	.long	1
	.long	2031648
ccBc_info:
.LccBc:
	movl $ccBe_info,-4(%ebp)
	movl $Main_readAndDraw4_closure,32(%ebx)
	movl 4(%ebp),%eax
	movl %eax,24(%ebx)
	movl $LlHybR7LOSS7VAc0pG6N16_ControlziMonadziIOziClass_zdfMonadIOIO_closure,16(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_zdfIsElemElem_closure,8(%ebx)
	movl $stg_ap_v_info,-8(%ebp)
	movl %esi,(%ebp)
	addl $-8,%ebp
	jmp FxthDgO5vhFC0dVxe1OwkF_HasteziDOM_getProp_info
.text
	.align 4,0x90
	.long	Sczg_srt-(ccBe_info)+28
	.long	2
	.long	458784
ccBe_info:
.LccBe:
	movl $ccBi_info,-4(%ebp)
	movl 4(%ebp),%eax
	movl %eax,8(%ebx)
	movl %esi,(%ebp)
	addl $-4,%ebp
	jmp Expr_expr1_info
.text
	.align 4,0x90
	.long	Sczg_srt-(ccBi_info)+28
	.long	3
	.long	327712
ccBi_info:
.LccBi:
	movl 12(%ebp),%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jb .Lscqb
.LccBp:
	movl $ccCv_info,(%ebp)
	movl 2(%esi),%eax
	movl %eax,8(%ebx)
	jmp base_DataziTuple_snd_info
.LccBs:
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	movl $Main_saveExpr1_closure,%esi
	jmp *-8(%ebx)
.text
	.align 4,0x90
	.long	Sczg_srt-(ccBz_info)+28
	.long	387
	.long	327712
ccBz_info:
.LccBz:
	movl $ccBG_info,(%ebp)
	movl 3(%esi),%eax
	movl $Main_readAndDraw4_closure,%esi
	movl %eax,12(%ebp)
	jmp toJSStr
.Lscqb:
	movl $ccBz_info,(%ebp)
	movl %eax,%esi
	testw $7,%si
	jne .LccBz
.LccBA:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	Sczg_srt-(ccBG_info)+28
	.long	387
	.long	65568
ccBG_info:
.LccBG:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .LccC7
.LccC6:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl 4(%ebp),%eax
	movl $ccBS_info,4(%ebp)
	movl %eax,%esi
	movl (%edi),%eax
	movl %eax,8(%ebp)
	addl $4,%ebp
	jmp toJSStr
.text
	.align 4,0x90
	.long	Sczg_srt-(ccBS_info)+28
	.long	194
	.long	65568
ccBS_info:
.LccBS:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .LccCb
.LccCa:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl $ccC2_info,-4(%ebp)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_jsSetzuf1_closure,%esi
	movl (%edi),%eax
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne .LccC2
.LccCd:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	451
	.long	32
ccC2_info:
.LccC2:
	movl 12(%ebp),%eax
	movl $ccCn_info,12(%ebp)
	movl 8(%ebp),%ecx
	movl 4(%ebp),%edx
	addl $12,%ebp
	movl %eax,64(%esp)
	movl 3(%esi),%eax
	movl %eax,76(%esp)
	movl 872(%ebx),%eax
	movl %ecx,88(%esp)
	movl 20(%eax),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	movl %edx,100(%esp)
	leal 4(%edi),%edx
	movl %edx,8(%ecx)
	movl 100(%eax),%edx
	movl %edx,112(%esp)
	movl 104(%eax),%edx
	movl %edx,124(%esp)
	leal 4(%edi),%edx
	subl (%ecx),%edx
	xorl %ecx,%ecx
	movl %ecx,136(%esp)
	movl 112(%esp),%ecx
	subl %edx,%ecx
	movl 124(%esp),%edx
	movl %ecx,148(%esp)
	movl 136(%esp),%ecx
	sbbl %ecx,%edx
	movl 148(%esp),%ecx
	movl %ecx,100(%eax)
	movl %edx,104(%eax)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call suspendThread
	addl $12,%esp
	subl $12,%esp
	movl 112(%esp),%ecx
	pushl %ecx
	movl 104(%esp),%ecx
	pushl %ecx
	movl 84(%esp),%ecx
	pushl %ecx
	movl 100(%esp),%ecx
	pushl %ecx
	movl %eax,188(%esp)
	call __app3
	addl $28,%esp
	subl $8,%esp
	movl 168(%esp),%ecx
	pushl %ecx
	movl %eax,184(%esp)
	call resumeThread
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,184(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,196(%esp)
	movl %eax,%ecx
	movl %edx,208(%esp)
	movl 196(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 184(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,220(%esp)
	movl 208(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 220(%esp),%ecx
	adcl %eax,%ecx
	movl 184(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 172(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
.LccC7:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.LccCb:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.text
	.align 4,0x90
	.long	0
	.long	32
ccCn_info:
.LccCn:
	addl $4,%ebp
	jmp IBJHmTQyrtkCXFsQwT7UYx_HasteziPrimziAny_zdfFromAnyZLZR4_info
.text
	.align 4,0x90
	.long	Sczg_srt-(ccCv_info)+28
	.long	3
	.long	327712
ccCv_info:
.LccCv:
	movl $ccCA_info,(%ebp)
	movl $ghczmprim_GHCziTypes_ZMZN_closure+1,16(%ebx)
	movl %esi,8(%ebx)
	jmp ghczmprim_GHCziClasses_zdfEqZMZNzuzdszdczeze1_info
.text
	.align 4,0x90
	.long	Sczg_srt-(ccCA_info)+28
	.long	3
	.long	327712
ccCA_info:
.LccCA:
	movl 12(%ebp),%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jb .Lscqb
.LccDE:
	movl $ccCK_info,4(%ebp)
	movl %eax,%esi
	addl $4,%ebp
	testw $7,%si
	jne .LccCK
.LccCL:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	Sczg_srt-(ccCK_info)+28
	.long	130
	.long	327712
ccCK_info:
.LccCK:
	movl $ccCR_info,(%ebp)
	movl 3(%esi),%eax
	movl $Main_readAndDraw4_closure,%esi
	movl %eax,8(%ebp)
	jmp toJSStr
.text
	.align 4,0x90
	.long	Sczg_srt-(ccCR_info)+28
	.long	130
	.long	65568
ccCR_info:
.LccCR:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .LccDj
.LccDi:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl $ccD3_info,(%ebp)
	movl 4(%ebp),%esi
	movl (%edi),%eax
	movl %eax,4(%ebp)
	jmp toJSStr
.text
	.align 4,0x90
	.long	Sczg_srt-(ccD3_info)+28
	.long	194
	.long	65568
ccD3_info:
.LccD3:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .LccDn
.LccDm:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl $ccDd_info,-4(%ebp)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_jsSetzuf1_closure,%esi
	movl (%edi),%eax
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne .LccDd
.LccDp:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	451
	.long	32
ccDd_info:
.LccDd:
	movl 12(%ebp),%eax
	movl $ccDz_info,12(%ebp)
	movl 8(%ebp),%ecx
	movl 4(%ebp),%edx
	addl $12,%ebp
	movl %eax,232(%esp)
	movl 3(%esi),%eax
	movl %eax,244(%esp)
	movl 872(%ebx),%eax
	movl %ecx,256(%esp)
	movl 20(%eax),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	movl %edx,268(%esp)
	leal 4(%edi),%edx
	movl %edx,8(%ecx)
	movl 100(%eax),%edx
	movl %edx,280(%esp)
	movl 104(%eax),%edx
	movl %edx,292(%esp)
	leal 4(%edi),%edx
	subl (%ecx),%edx
	xorl %ecx,%ecx
	movl %ecx,304(%esp)
	movl 280(%esp),%ecx
	subl %edx,%ecx
	movl 292(%esp),%edx
	movl %ecx,316(%esp)
	movl 304(%esp),%ecx
	sbbl %ecx,%edx
	movl 316(%esp),%ecx
	movl %ecx,100(%eax)
	movl %edx,104(%eax)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call suspendThread
	addl $12,%esp
	subl $12,%esp
	movl 280(%esp),%ecx
	pushl %ecx
	movl 272(%esp),%ecx
	pushl %ecx
	movl 252(%esp),%ecx
	pushl %ecx
	movl 268(%esp),%ecx
	pushl %ecx
	movl %eax,356(%esp)
	call __app3
	addl $28,%esp
	subl $8,%esp
	movl 336(%esp),%ecx
	pushl %ecx
	movl %eax,352(%esp)
	call resumeThread
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,352(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,364(%esp)
	movl %eax,%ecx
	movl %edx,376(%esp)
	movl 364(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 352(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,388(%esp)
	movl 376(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 388(%esp),%ecx
	adcl %eax,%ecx
	movl 352(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 340(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
.LccDj:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.LccDn:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.text
	.align 4,0x90
	.long	0
	.long	32
ccDz_info:
.LccDz:
	addl $4,%ebp
	jmp IBJHmTQyrtkCXFsQwT7UYx_HasteziPrimziAny_zdfFromAnyZLZR4_info
.data
	.align 4
.align 1
.globl Main_saveExpr_closure
Main_saveExpr_closure:
	.long	Main_saveExpr_info
	.long	0
.text
	.align 4,0x90
	.long	Sczg_srt-(Main_saveExpr_info)+40
	.long	196623
	.long	0
	.long	65551
.globl Main_saveExpr_info
Main_saveExpr_info:
.LccEK:
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp Main_saveExpr1_info
.data
	.align 4
.align 1
.globl Main_zdwpoints_closure
Main_zdwpoints_closure:
	.long	Main_zdwpoints_info
.text
	.align 4,0x90
	.long	131073
	.long	16
scqX_info:
.LccFO:
	leal -24(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .LccFY
.LccFZ:
	movl $stg_upd_frame_info,-12(%ebp)
	movl %esi,-8(%ebp)
	movl $ccFL_info,-24(%ebp)
#	gldsd 16(%esi),%fake0
	fldl 16(%esi) ; fstp %st(1)
	movl 12(%esi),%esi
#	gstsd %fake0,-20(%ebp)
	fstl -20(%ebp)
	addl $-24,%ebp
	testw $7,%si
	jne .LccFL
.LccFM:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
.text
	.align 4,0x90
	.long	194
	.long	32
ccFL_info:
.LccFL:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja .LccG2
.LccG1:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
#	gldsd 4(%ebp),%fake1
	fldl 4(%ebp) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gldsd .LncJ4,%fake1
	fldl .LncJ4 ; fstp %st(2)
#	gdivt %fake0,%fake1,%fake0
	#GDIV-xxxcase1
	fld %st(1) ; fdivrp %st(0),%st(1)
	movl $ghczmprim_GHCziTypes_Dzh_con_info,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $12,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
.LccFY:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *-16(%ebx)
.LccG2:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp stg_gc_unpt_r1
.section .rodata
	.align 4
.align 8
.LncJ4:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	64
.text
	.align 4,0x90
	.long	131073
	.long	16
scr2_info:
.LccGa:
	leal -24(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .LccGk
.LccGl:
	movl $stg_upd_frame_info,-12(%ebp)
	movl %esi,-8(%ebp)
	movl $ccG7_info,-24(%ebp)
#	gldsd 16(%esi),%fake0
	fldl 16(%esi) ; fstp %st(1)
	movl 12(%esi),%esi
#	gstsd %fake0,-20(%ebp)
	fstl -20(%ebp)
	addl $-24,%ebp
	testw $7,%si
	jne .LccG7
.LccG8:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
.text
	.align 4,0x90
	.long	194
	.long	32
ccG7_info:
.LccG7:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja .LccGo
.LccGn:
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl $ghczmprim_GHCziTypes_Dzh_con_info,-8(%edi)
#	gaddt %fake0,%fake0,%fake0
	#GADD-xxxcase1
	fld %st(0) ; faddp %st(0),%st(1)
#	gldsd 4(%ebp),%fake1
	fldl 4(%ebp) ; fstp %st(2)
#	gdivt %fake0,%fake1,%fake0
	#GDIV-xxxcase1
	fld %st(1) ; fdivrp %st(0),%st(1)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $12,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
.LccGk:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *-16(%ebx)
.LccGo:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp stg_gc_unpt_r1
.text
	.align 4,0x90
	.long	131073
	.long	16
scrx_info:
.LccH3:
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .LccH4
.LccHa:
	movl $stg_upd_frame_info,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 20(%esi),%eax
	cmpl 16(%esi),%eax
	je .LccHc
.LccHd:
	incl %eax
	movl %eax,8(%ebx)
	movl 12(%esi),%esi
	addl $-12,%ebp
	jmp scr7_info
.LccH4:
	jmp *-16(%ebx)
.LccHc:
	movl $ghczmprim_GHCziTypes_ZMZN_closure+1,%esi
	addl $-12,%ebp
	jmp *(%ebp)
.text
	.align 4,0x90
	.long	65538
	.long	16
scri_info:
.LccHG:
	leal -28(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .LccHY
.LccHZ:
	movl $stg_upd_frame_info,-12(%ebp)
	movl %esi,-8(%ebp)
	movl $ccHD_info,-24(%ebp)
	movl 12(%esi),%eax
	movl 20(%esi),%ecx
	movl 16(%esi),%esi
	movl %eax,-20(%ebp)
	movl %ecx,-16(%ebp)
	addl $-24,%ebp
	testw $7,%si
	jne .LccHD
.LccHE:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
.text
	.align 4,0x90
	.long	130
	.long	32
ccHD_info:
.LccHD:
	movl $ccHJ_info,-4(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 4(%ebp),%esi
#	gstsd %fake0,(%ebp)
	fstl (%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne .LccHJ
.LccHK:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
.text
	.align 4,0x90
	.long	451
	.long	32
ccHJ_info:
.LccHJ:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja .LccI3
.LccI2:
	movl 12(%ebp),%eax
#	gitodlsd %eax,%fake0
	pushl %eax ; fildl (%esp) ; fstp %st(1) ; addl $4,%esp
#	gldsd 4(%ebp),%fake1
	fldl 4(%ebp) ; fstp %st(2)
#	gmult %fake0,%fake1,%fake0
	#GMUL-xxxcase1
	fld %st(1) ; fmulp %st(0),%st(1)
#	gldsd 3(%esi),%fake1
	fldl 3(%esi) ; fstp %st(2)
#	gsubt %fake0,%fake1,%fake0
	#GSUB-xxxcase1
	fld %st(1) ; fsubrp %st(0),%st(1)
	movl $ghczmprim_GHCziTypes_Dzh_con_info,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $16,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
.LccHY:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *-16(%ebx)
.LccI3:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp stg_gc_unpt_r1
.text
	.align 4,0x90
	.long	65539
	.long	16
scrs_info:
.LccI6:
	movl %esi,%eax
	leal -40(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb .LccIt
.LccIu:
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja .LccIw
.LccIv:
	movl $stg_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl 12(%eax),%ecx
	movl 16(%eax),%edx
	movl %ecx,64(%esp)
	movl 20(%eax),%ecx
	movl 24(%eax),%eax
	movl $scri_info,-20(%edi)
	movl %edx,-8(%edi)
	movl %ecx,-4(%edi)
	movl %eax,(%edi)
	movl $ccI4_info,-24(%ebp)
	leal -20(%edi),%eax
	movl %eax,16(%ebx)
	movl 64(%esp),%eax
	movl %eax,8(%ebx)
	movl %edx,-20(%ebp)
	movl %ecx,-16(%ebp)
	addl $-24,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp Expr_eval_info
.text
	.align 4,0x90
	.long	2
	.long	32
ccI4_info:
.LccI4:
	movl $ccI9_info,-4(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 4(%ebp),%esi
#	gstsd %fake0,(%ebp)
	fstl (%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne .LccI9
.LccIa:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
.text
	.align 4,0x90
	.long	195
	.long	32
ccI9_info:
.LccI9:
	movl $ccIe_info,-12(%ebp)
#	gldsd 3(%esi),%fake0
	fldl 3(%esi) ; fstp %st(1)
	movl 12(%ebp),%esi
#	gstsd %fake0,-8(%ebp)
	fstl -8(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne .LccIe
.LccIf:
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%esi)
.text
	.align 4,0x90
	.long	4038
	.long	32
ccIe_info:
.LccIe:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja .LccIB
.LccIA:
#	gldsd 16(%ebp),%fake0
	fldl 16(%ebp) ; fstp %st(1)
#	gnegt %fake0,%fake0
	fld %st(0) ; fchs ; fstp %st(1)
#	gldsd 4(%ebp),%fake1
	fldl 4(%ebp) ; fstp %st(2)
#	gaddt %fake0,%fake1,%fake0
	#GADD-xxxcase1
	fld %st(1) ; faddp %st(0),%st(1)
#	gldsd 3(%esi),%fake1
	fldl 3(%esi) ; fstp %st(2)
#	gdivt %fake0,%fake1,%fake0
	#GDIV-xxxcase1
	fld %st(1) ; fdivrp %st(0),%st(1)
	movl $ghczmprim_GHCziTypes_Dzh_con_info,-8(%edi)
#	gstsd %fake0,-4(%edi)
	fstl -4(%edi)
	leal -7(%edi),%esi
	addl $28,%ebp
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
.LccIw:
	movl $24,904(%ebx)
.LccIt:
	movl %eax,%esi
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *-16(%ebx)
.LccIB:
	movl $12,904(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp stg_gc_unpt_r1
.text
	.align 4,0x90
	.long	65540
	.long	65539
	.long	9
scr7_info:
.LccIE:
	addl $88,%edi
	movl 8(%ebx),%eax
	cmpl 856(%ebx),%edi
	ja .LccIM
.LccIL:
	movl 3(%esi),%ecx
	movl 7(%esi),%edx
	movl %ecx,64(%esp)
	movl 11(%esi),%ecx
	movl %edx,76(%esp)
	movl 15(%esi),%edx
	movl $scrx_info,-84(%edi)
	movl %esi,-72(%edi)
	movl %edx,-68(%edi)
	movl %eax,-64(%edi)
	movl $scrs_info,-60(%edi)
	movl 64(%esp),%edx
	movl %edx,-48(%edi)
	movl 76(%esp),%edx
	movl %edx,-44(%edi)
	movl %ecx,-40(%edi)
	movl %eax,-36(%edi)
	movl $ghczmprim_GHCziTypes_Dzh_con_info,-32(%edi)
#	gitodlsd %eax,%fake0
	pushl %eax ; fildl (%esp) ; fstp %st(1) ; addl $4,%esp
#	gstsd %fake0,-28(%edi)
	fstl -28(%edi)
	movl $ghczmprim_GHCziTuple_Z2T_con_info,-20(%edi)
	leal -31(%edi),%eax
	movl %eax,-16(%edi)
	leal -60(%edi),%eax
	movl %eax,-12(%edi)
	movl $ghczmprim_GHCziTypes_ZC_con_info,-8(%edi)
	leal -19(%edi),%eax
	movl %eax,-4(%edi)
	leal -84(%edi),%eax
	movl %eax,(%edi)
	leal -6(%edi),%esi
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
.LccIM:
	movl $88,904(%ebx)
	movl %eax,8(%ebx)
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *-8(%ebx)
.text
	.align 4,0x90
	.long	196630
	.long	0
	.long	15
.globl Main_zdwpoints_info
Main_zdwpoints_info:
.LccIN:
	addl $68,%edi
	movl 24(%ebx),%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	cmpl 856(%ebx),%edi
	ja .LccIR
.LccIQ:
	cmpl $0,%eax
	jl .LccIW
.LccIX:
	movl $scqX_info,-64(%edi)
	movl %ecx,-52(%edi)
#	gitodlsd %eax,%fake0
	pushl %eax ; fildl (%esp) ; fstp %st(1) ; addl $4,%esp
#	gstsd %fake0,-48(%edi)
	fstl -48(%edi)
	movl $scr2_info,-40(%edi)
	leal -64(%edi),%ecx
	movl %ecx,-28(%edi)
#	gstsd %fake0,-24(%edi)
	fstl -24(%edi)
	movl $scr7_info,-16(%edi)
	movl %edx,-12(%edi)
	movl %ecx,-8(%edi)
	leal -40(%edi),%ecx
	movl %ecx,-4(%edi)
	movl %eax,(%edi)
	movl $0,8(%ebx)
	leal -15(%edi),%esi
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp scr7_info
.LccIR:
	movl $68,904(%ebx)
	movl %eax,24(%ebx)
	movl %ecx,16(%ebx)
	movl %edx,8(%ebx)
	movl $Main_zdwpoints_closure,%esi
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *-8(%ebx)
.LccIW:
	addl $-68,%edi
	movl $ghczmprim_GHCziTypes_ZMZN_closure+1,%esi
	ffree %st(0) ;ffree %st(1) ;ffree %st(2) ;ffree %st(3)
	ffree %st(4) ;ffree %st(5)
	jmp *(%ebp)
.data
	.align 4
.align 1
.globl Main_points_closure
Main_points_closure:
	.long	Main_points_info
.text
	.align 4,0x90
	.long	196631
	.long	0
	.long	15
.globl Main_points_info
Main_points_info:
.LccJW:
	movl 24(%ebx),%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %edx,64(%esp)
	leal -12(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb .LccK0
.LccK1:
	movl $ccJT_info,-12(%ebp)
	movl %eax,%esi
	movl 64(%esp),%eax
	movl %eax,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne .LccJT
.LccJU:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	2
	.long	32
ccJT_info:
.LccJT:
	movl $ccJZ_info,(%ebp)
	movl 3(%esi),%esi
	testw $7,%si
	jne .LccJZ
.LccK3:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	2
	.long	32
ccJZ_info:
.LccJZ:
	movl 3(%esi),%eax
	movl %eax,24(%ebx)
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl 4(%ebp),%eax
	movl %eax,8(%ebx)
	addl $12,%ebp
	jmp Main_zdwpoints_info
.LccK0:
	movl %eax,24(%ebx)
	movl %ecx,16(%ebx)
	movl 64(%esp),%eax
	movl %eax,8(%ebx)
	movl $Main_points_closure,%esi
	jmp *-8(%ebx)
.data
	.align 4
.align 1
.globl Main_readAndDraw3_closure
Main_readAndDraw3_closure:
	.long	Main_readAndDraw3_info
	.long	0
	.long	0
	.long	0
.section .rodata
	.align 4
.align 1
ccKm_str:
	.byte	69
	.byte	114
	.byte	114
	.byte	32
	.byte	58
	.byte	32
	.byte	87
	.byte	114
	.byte	111
	.byte	110
	.byte	103
	.byte	32
	.byte	101
	.byte	120
	.byte	112
	.byte	114
	.byte	101
	.byte	115
	.byte	115
	.byte	105
	.byte	111
	.byte	110
	.byte	0
.text
	.align 4,0x90
	.long	0
	.long	22
.globl Main_readAndDraw3_info
Main_readAndDraw3_info:
.LccKn:
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .LccKo
.LccKp:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	call newCAF
	addl $12,%esp
	testl %eax,%eax
	je .LccKl
.LccKk:
	movl $stg_bh_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl $ccKm_str,8(%ebx)
	addl $-12,%ebp
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.LccKl:
	jmp *(%esi)
.LccKo:
	jmp *-16(%ebx)
.data
	.align 4
.align 1
.globl Main_zzoom1_closure
Main_zzoom1_closure:
	.long	Main_zzoom1_info
	.long	0
.text
	.align 4,0x90
	.long	1
	.long	17
scsk_info:
.LccLW:
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .LccLX
.LccLY:
	movl $stg_upd_frame_info,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp base_DataziTuple_fst_info
.LccLX:
	jmp *-16(%ebx)
.text
	.align 4,0x90
	.long	2
	.long	19
scsl_info:
.LccLZ:
	movl %esi,%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb .LccM0
.LccM1:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja .LccM3
.LccM2:
	movl $stg_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl 12(%eax),%ecx
	movl 16(%eax),%eax
	movl $scsk_info,-12(%edi)
	movl %eax,(%edi)
	movl $300,24(%ebx)
	movl %ecx,16(%ebx)
	leal -12(%edi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp Main_zdwpoints_info
.LccM3:
	movl $16,904(%ebx)
.LccM0:
	movl %eax,%esi
	jmp *-16(%ebx)
.text
	.align 4,0x90
	.long	Sczg_srt-(scsm_info)+44
	.long	131077
	.long	1
	.long	65546
scsm_info:
.LccM9:
	movl 8(%ebx),%eax
	movl %eax,16(%ebx)
	movl 2(%esi),%eax
	movl %eax,8(%ebx)
	jmp FxthDgO5vhFC0dVxe1OwkF_HasteziGraphicsziCanvas_line2_info
.text
	.align 4,0x90
	.long	Sczg_srt-(Main_zzoom1_info)+20
	.long	262167
	.long	0
	.long	132055055
.globl Main_zzoom1_info
Main_zzoom1_info:
.LccMj:
	movl 24(%ebx),%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %edx,208(%esp)
	leal -20(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb .LccMk
.LccMl:
	movl $ccLh_info,-16(%ebp)
	movl $Main_readAndDraw4_closure,32(%ebx)
	movl 208(%esp),%edx
	movl %edx,24(%ebx)
	movl $LlHybR7LOSS7VAc0pG6N16_ControlziMonadziIOziClass_zdfMonadIOIO_closure,16(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_zdfIsElemElem_closure,8(%ebx)
	movl $stg_ap_v_info,-20(%ebp)
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl %eax,-4(%ebp)
	addl $-20,%ebp
	jmp FxthDgO5vhFC0dVxe1OwkF_HasteziDOM_getProp_info
.text
	.align 4,0x90
	.long	Sczg_srt-(ccLh_info)+28
	.long	3
	.long	16187424
ccLh_info:
.LccLh:
	movl $ccLl_info,(%ebp)
	movl %esi,8(%ebx)
	jmp Expr_expr1_info
.text
	.align 4,0x90
	.long	Sczg_srt-(ccLl_info)+28
	.long	3
	.long	16056352
ccLl_info:
.LccLl:
	movl 4(%ebp),%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jb .LscrN
.LccMh:
	movl $ccLq_info,-4(%ebp)
	movl 2(%esi),%eax
	movl %eax,8(%ebx)
	movl %eax,(%ebp)
	addl $-4,%ebp
	jmp base_DataziTuple_snd_info
.text
	.align 4,0x90
	.long	Sczg_srt-(ccLq_info)+28
	.long	4
	.long	16056352
ccLq_info:
.LccLq:
	movl $ccLu_info,(%ebp)
	movl $ghczmprim_GHCziTypes_ZMZN_closure+1,16(%ebx)
	movl %esi,8(%ebx)
	jmp ghczmprim_GHCziClasses_zdfEqZMZNzuzdszdczeze1_info
.text
	.align 4,0x90
	.long	Sczg_srt-(ccLu_info)+28
	.long	4
	.long	16056352
ccLu_info:
.LccLu:
	movl %esi,%eax
	andl $7,%eax
	cmpl $2,%eax
	jb .LucNA
.LccNy:
	movl $ccLz_info,(%ebp)
	movl 12(%ebp),%esi
	testw $7,%si
	jne .LccLz
.LccLA:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	Sczg_srt-(ccLz_info)+44
	.long	388
	.long	458784
ccLz_info:
.LccLz:
	movl $ccLE_info,(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%ecx
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziGraphicsziCanvas_bufferzuf1_closure,%esi
	movl %ecx,8(%ebp)
	movl %eax,12(%ebp)
	testw $7,%si
	jne .LccLE
.LccLF:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	Sczg_srt-(ccLE_info)+44
	.long	388
	.long	196640
ccLE_info:
.LccLE:
	movl $ccLM_info,(%ebp)
	movl 3(%esi),%eax
	movl 8(%ebp),%ecx
	movl 872(%ebx),%edx
	movl %eax,64(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,76(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,88(%esp)
	movl 104(%edx),%ecx
	movl %ecx,100(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,112(%esp)
	movl 88(%esp),%eax
	subl %ecx,%eax
	movl 100(%esp),%ecx
	movl %eax,124(%esp)
	movl 112(%esp),%eax
	sbbl %eax,%ecx
	movl 124(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call suspendThread
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call __app1
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call resumeThread
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
.text
	.align 4,0x90
	.long	Sczg_srt-(ccLM_info)+44
	.long	388
	.long	196640
ccLM_info:
.LccLM:
	addl $28,%edi
	cmpl 856(%ebx),%edi
	ja .LccNv
.LccNu:
	movl $scsl_info,-24(%edi)
	movl 16(%ebp),%eax
	movl %eax,-12(%edi)
	movl 4(%ebp),%eax
	movl %eax,-8(%edi)
	movl $scsm_info,-4(%edi)
	leal -24(%edi),%eax
	movl %eax,(%edi)
	movl 12(%ebp),%eax
	movl %eax,16(%ebx)
	leal -2(%edi),%eax
	movl %eax,8(%ebx)
	addl $20,%ebp
	jmp FxthDgO5vhFC0dVxe1OwkF_HasteziGraphicsziCanvas_zdwa16_info
.LccMk:
	movl %eax,24(%ebx)
	movl %ecx,16(%ebx)
	movl 208(%esp),%eax
	movl %eax,8(%ebx)
	movl $Main_zzoom1_closure,%esi
	jmp *-8(%ebx)
.text
	.align 4,0x90
	.long	Sczg_srt-(ccMq_info)+28
	.long	0
	.long	8716320
ccMq_info:
.LccMq:
	movl $ccMx_info,-4(%ebp)
	movl 3(%esi),%eax
	movl $Main_readAndDraw4_closure,%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	jmp toJSStr
.LucNA:
	movl 8(%ebp),%eax
	addl $4,%ebp
.LscrN:
	movl $ccMq_info,12(%ebp)
	movl %eax,%esi
	addl $12,%ebp
	testw $7,%si
	jne .LccMq
.LccMr:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	Sczg_srt-(ccMx_info)+28
	.long	65
	.long	8454176
ccMx_info:
.LccMx:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .LccMY
.LccMX:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl $ccMJ_info,-4(%ebp)
	movl $Main_readAndDraw3_closure,%esi
	movl (%edi),%eax
	movl %eax,(%ebp)
	addl $-4,%ebp
	jmp toJSStr
.text
	.align 4,0x90
	.long	Sczg_srt-(ccMJ_info)+28
	.long	194
	.long	65568
ccMJ_info:
.LccMJ:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .LccN2
.LccN1:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl $ccMT_info,-4(%ebp)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_jsSetzuf1_closure,%esi
	movl (%edi),%eax
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne .LccMT
.LccN4:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	451
	.long	32
ccMT_info:
.LccMT:
	movl 12(%ebp),%eax
	movl $ccNe_info,12(%ebp)
	movl 8(%ebp),%ecx
	movl 4(%ebp),%edx
	addl $12,%ebp
	movl %eax,220(%esp)
	movl 3(%esi),%eax
	movl %eax,232(%esp)
	movl 872(%ebx),%eax
	movl %ecx,244(%esp)
	movl 20(%eax),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	movl %edx,256(%esp)
	leal 4(%edi),%edx
	movl %edx,8(%ecx)
	movl 100(%eax),%edx
	movl %edx,268(%esp)
	movl 104(%eax),%edx
	movl %edx,280(%esp)
	leal 4(%edi),%edx
	subl (%ecx),%edx
	xorl %ecx,%ecx
	movl %ecx,292(%esp)
	movl 268(%esp),%ecx
	subl %edx,%ecx
	movl 280(%esp),%edx
	movl %ecx,304(%esp)
	movl 292(%esp),%ecx
	sbbl %ecx,%edx
	movl 304(%esp),%ecx
	movl %ecx,100(%eax)
	movl %edx,104(%eax)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call suspendThread
	addl $12,%esp
	subl $12,%esp
	movl 268(%esp),%ecx
	pushl %ecx
	movl 260(%esp),%ecx
	pushl %ecx
	movl 240(%esp),%ecx
	pushl %ecx
	movl 256(%esp),%ecx
	pushl %ecx
	movl %eax,344(%esp)
	call __app3
	addl $28,%esp
	subl $8,%esp
	movl 324(%esp),%ecx
	pushl %ecx
	movl %eax,340(%esp)
	call resumeThread
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,340(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,352(%esp)
	movl %eax,%ecx
	movl %edx,364(%esp)
	movl 352(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 340(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,376(%esp)
	movl 364(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 376(%esp),%ecx
	adcl %eax,%ecx
	movl 340(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 328(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
.LccMY:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.LccN2:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.text
	.align 4,0x90
	.long	0
	.long	32
ccNe_info:
.LccNe:
	addl $4,%ebp
	jmp IBJHmTQyrtkCXFsQwT7UYx_HasteziPrimziAny_zdfFromAnyZLZR4_info
.LccNv:
	movl $28,904(%ebx)
	jmp stg_gc_unbx_r1
.data
	.align 4
.align 1
.globl Main_zzoom_closure
Main_zzoom_closure:
	.long	Main_zzoom_info
	.long	0
.text
	.align 4,0x90
	.long	Sczg_srt-(Main_zzoom_info)+60
	.long	262167
	.long	0
	.long	65551
.globl Main_zzoom_info
Main_zzoom_info:
.LccOR:
	movl 24(%ebx),%eax
	movl %eax,24(%ebx)
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp Main_zzoom1_info
.data
	.align 4
.align 1
.globl Main_readAndDraw2_closure
Main_readAndDraw2_closure:
	.long	ghczmprim_GHCziTypes_Dzh_static_info
	.byte	123
	.byte	20
	.byte	174
	.byte	71
	.byte	225
	.byte	122
	.byte	164
	.byte	63
.data
	.align 4
.align 1
.globl Main_showAndDrawDiff1_closure
Main_showAndDrawDiff1_closure:
	.long	Main_showAndDrawDiff1_info
	.long	0
.text
	.align 4,0x90
	.long	1
	.long	17
sctr_info:
.LccRZ:
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .LccS0
.LccS1:
	movl $stg_upd_frame_info,-12(%ebp)
	movl %esi,-8(%ebp)
	movl $300,24(%ebx)
	movl $Main_readAndDraw2_closure+1,16(%ebx)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp Main_zdwpoints_info
.LccS0:
	jmp *-16(%ebx)
.text
	.align 4,0x90
	.long	Sczg_srt-(scts_info)+44
	.long	131077
	.long	1
	.long	65546
scts_info:
.LccS7:
	movl 8(%ebx),%eax
	movl %eax,16(%ebx)
	movl 2(%esi),%eax
	movl %eax,8(%ebx)
	jmp FxthDgO5vhFC0dVxe1OwkF_HasteziGraphicsziCanvas_line2_info
.text
	.align 4,0x90
	.long	Sczg_srt-(Main_showAndDrawDiff1_info)+20
	.long	262167
	.long	0
	.long	1004470287
.globl Main_showAndDrawDiff1_info
Main_showAndDrawDiff1_info:
.LccSh:
	movl 24(%ebx),%eax
	movl 16(%ebx),%ecx
	movl 8(%ebx),%edx
	movl %edx,544(%esp)
	leal -28(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb .LccSi
.LccSj:
	movl $ccQn_info,-16(%ebp)
	movl $Main_readAndDraw4_closure,32(%ebx)
	movl 544(%esp),%edx
	movl %edx,24(%ebx)
	movl $LlHybR7LOSS7VAc0pG6N16_ControlziMonadziIOziClass_zdfMonadIOIO_closure,16(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_zdfIsElemElem_closure,8(%ebx)
	movl $stg_ap_v_info,-20(%ebp)
	movl %edx,-12(%ebp)
	movl %ecx,-8(%ebp)
	movl %eax,-4(%ebp)
	addl $-20,%ebp
	jmp FxthDgO5vhFC0dVxe1OwkF_HasteziDOM_getProp_info
.text
	.align 4,0x90
	.long	Sczg_srt-(ccQn_info)+28
	.long	3
	.long	116850720
ccQn_info:
.LccQn:
	movl $ccQr_info,(%ebp)
	movl %esi,8(%ebx)
	jmp Expr_expr1_info
.text
	.align 4,0x90
	.long	Sczg_srt-(ccQr_info)+28
	.long	3
	.long	116719648
ccQr_info:
.LccQr:
	movl 4(%ebp),%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jb .Lscsu
.LccSf:
	movl $ccQw_info,-4(%ebp)
	movl 2(%esi),%eax
	movl %eax,8(%ebx)
	movl %eax,(%ebp)
	addl $-4,%ebp
	jmp base_DataziTuple_snd_info
.text
	.align 4,0x90
	.long	Sczg_srt-(ccQw_info)+28
	.long	4
	.long	116719648
ccQw_info:
.LccQw:
	movl $ccQA_info,(%ebp)
	movl $ghczmprim_GHCziTypes_ZMZN_closure+1,16(%ebx)
	movl %esi,8(%ebx)
	jmp ghczmprim_GHCziClasses_zdfEqZMZNzuzdszdczeze1_info
.text
	.align 4,0x90
	.long	Sczg_srt-(ccQA_info)+28
	.long	4
	.long	116719648
ccQA_info:
.LccQA:
	movl 8(%ebp),%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jb .LucTO
.LccTM:
	movl $ccQF_info,(%ebp)
	movl %eax,%esi
	testw $7,%si
	jne .LccQF
.LccQG:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	Sczg_srt-(ccQF_info)+28
	.long	132
	.long	108331040
ccQF_info:
.LccQF:
	movl $ccQM_info,(%ebp)
	movl 3(%esi),%eax
	movl $Main_readAndDraw4_closure,%esi
	movl %eax,8(%ebp)
	jmp toJSStr
.text
	.align 4,0x90
	.long	Sczg_srt-(ccQM_info)+28
	.long	132
	.long	108068896
ccQM_info:
.LccQM:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .LccTs
.LccTr:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl $ccQW_info,(%ebp)
	movl 4(%ebp),%eax
	movl %eax,8(%ebx)
	movl (%edi),%eax
	movl %eax,4(%ebp)
	jmp base_DataziTuple_fst_info
.text
	.align 4,0x90
	.long	Sczg_srt-(ccQW_info)+28
	.long	196
	.long	108068896
ccQW_info:
.LccQW:
	movl $ccR0_info,(%ebp)
	movl %esi,8(%ebx)
	jmp Expr_differentiate_info
.text
	.align 4,0x90
	.long	Sczg_srt-(ccR0_info)+28
	.long	196
	.long	40960032
ccR0_info:
.LccR0:
	movl $ccR4_info,-4(%ebp)
	movl %esi,8(%ebx)
	movl %esi,(%ebp)
	addl $-4,%ebp
	jmp Expr_showExpr_info
.text
	.align 4,0x90
	.long	Sczg_srt-(ccR4_info)+28
	.long	389
	.long	7405600
ccR4_info:
.LccR4:
	movl $ccR8_info,(%ebp)
	jmp toJSStr
.text
	.align 4,0x90
	.long	Sczg_srt-(ccR8_info)+28
	.long	389
	.long	7405600
ccR8_info:
.LccR8:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .LccTz
.LccTy:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl $ccRi_info,-4(%ebp)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_jsSetzuf1_closure,%esi
	movl (%edi),%eax
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne .LccRi
.LccRj:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	Sczg_srt-(ccRi_info)+44
	.long	838
	.long	458784
ccRi_info:
.LccRi:
	movl $ccRs_info,(%ebp)
	movl 3(%esi),%eax
	movl 16(%ebp),%ecx
	movl %eax,16(%ebp)
	movl 12(%ebp),%edx
	movl %ecx,64(%esp)
	movl 4(%ebp),%ecx
	movl %edx,76(%esp)
	movl 872(%ebx),%edx
	movl %ecx,88(%esp)
	movl 20(%edx),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	movl %eax,100(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%ecx)
	movl 100(%edx),%eax
	movl %eax,112(%esp)
	movl 104(%edx),%eax
	movl %eax,124(%esp)
	leal 4(%edi),%eax
	subl (%ecx),%eax
	xorl %ecx,%ecx
	movl %ecx,136(%esp)
	movl 112(%esp),%ecx
	subl %eax,%ecx
	movl 124(%esp),%eax
	movl %ecx,148(%esp)
	movl 136(%esp),%ecx
	sbbl %ecx,%eax
	movl 148(%esp),%ecx
	movl %ecx,100(%edx)
	movl %eax,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call suspendThread
	addl $12,%esp
	subl $12,%esp
	movl 100(%esp),%ecx
	pushl %ecx
	movl 92(%esp),%ecx
	pushl %ecx
	movl 84(%esp),%ecx
	pushl %ecx
	movl 124(%esp),%ecx
	pushl %ecx
	movl %eax,188(%esp)
	call __app3
	addl $28,%esp
	subl $8,%esp
	movl 168(%esp),%ecx
	pushl %ecx
	movl %eax,184(%esp)
	call resumeThread
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,184(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,196(%esp)
	movl %eax,%ecx
	movl %edx,208(%esp)
	movl 196(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 184(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,220(%esp)
	movl 208(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 220(%esp),%ecx
	adcl %eax,%ecx
	movl 184(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 172(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
.text
	.align 4,0x90
	.long	Sczg_srt-(ccRs_info)+44
	.long	838
	.long	458784
ccRs_info:
.LccRs:
	movl $ccRu_info,(%ebp)
	movl 20(%ebp),%esi
	testw $7,%si
	jne .LccRu
.LccRv:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	Sczg_srt-(ccRu_info)+44
	.long	1862
	.long	458784
ccRu_info:
.LccRu:
	movl 4(%ebp),%eax
	movl $ccRE_info,4(%ebp)
	movl 16(%ebp),%ecx
	movl 12(%ebp),%edx
	addl $4,%ebp
	movl %ecx,232(%esp)
	movl 3(%esi),%ecx
	movl %ecx,244(%esp)
	movl 872(%ebx),%ecx
	movl %edx,256(%esp)
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,268(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,280(%esp)
	movl 104(%ecx),%eax
	movl %eax,292(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,304(%esp)
	movl 280(%esp),%edx
	subl %eax,%edx
	movl 292(%esp),%eax
	movl %edx,316(%esp)
	movl 304(%esp),%edx
	sbbl %edx,%eax
	movl 316(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call suspendThread
	addl $12,%esp
	subl $12,%esp
	movl 280(%esp),%ecx
	pushl %ecx
	movl 272(%esp),%ecx
	pushl %ecx
	movl 264(%esp),%ecx
	pushl %ecx
	movl 256(%esp),%ecx
	pushl %ecx
	movl %eax,356(%esp)
	call __app3
	addl $28,%esp
	subl $8,%esp
	movl 336(%esp),%ecx
	pushl %ecx
	movl %eax,352(%esp)
	call resumeThread
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,352(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,364(%esp)
	movl %eax,%ecx
	movl %edx,376(%esp)
	movl 364(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 352(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,388(%esp)
	movl 376(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 388(%esp),%ecx
	adcl %eax,%ecx
	movl 352(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 340(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
.text
	.align 4,0x90
	.long	Sczg_srt-(ccRE_info)+44
	.long	901
	.long	458784
ccRE_info:
.LccRE:
	movl $ccRG_info,(%ebp)
	movl 20(%ebp),%esi
	testw $7,%si
	jne .LccRG
.LccRH:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	Sczg_srt-(ccRG_info)+44
	.long	1925
	.long	458784
ccRG_info:
.LccRG:
	movl $ccRL_info,(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%ecx
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziGraphicsziCanvas_bufferzuf1_closure,%esi
	movl %ecx,16(%ebp)
	movl %eax,20(%ebp)
	testw $7,%si
	jne .LccRL
.LccRM:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	Sczg_srt-(ccRL_info)+44
	.long	1925
	.long	196640
ccRL_info:
.LccRL:
	movl $ccRT_info,(%ebp)
	movl 3(%esi),%eax
	movl 16(%ebp),%ecx
	movl 872(%ebx),%edx
	movl %eax,400(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,412(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,424(%esp)
	movl 104(%edx),%ecx
	movl %ecx,436(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,448(%esp)
	movl 424(%esp),%eax
	subl %ecx,%eax
	movl 436(%esp),%ecx
	movl %eax,460(%esp)
	movl 448(%esp),%eax
	sbbl %eax,%ecx
	movl 460(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call suspendThread
	addl $12,%esp
	subl $4,%esp
	movl 416(%esp),%ecx
	pushl %ecx
	movl 408(%esp),%ecx
	pushl %ecx
	movl %eax,484(%esp)
	call __app1
	addl $12,%esp
	subl $8,%esp
	movl 480(%esp),%ecx
	pushl %ecx
	movl %eax,496(%esp)
	call resumeThread
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,496(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,508(%esp)
	movl %eax,%ecx
	movl %edx,520(%esp)
	movl 508(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 496(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,532(%esp)
	movl 520(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 532(%esp),%ecx
	adcl %eax,%ecx
	movl 496(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 484(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
.text
	.align 4,0x90
	.long	Sczg_srt-(ccRT_info)+44
	.long	1925
	.long	196640
ccRT_info:
.LccRT:
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja .LccTJ
.LccTI:
	movl $sctr_info,-20(%edi)
	movl 4(%ebp),%eax
	movl %eax,-8(%edi)
	movl $scts_info,-4(%edi)
	leal -20(%edi),%eax
	movl %eax,(%edi)
	movl 20(%ebp),%eax
	movl %eax,16(%ebx)
	leal -2(%edi),%eax
	movl %eax,8(%ebx)
	addl $24,%ebp
	jmp FxthDgO5vhFC0dVxe1OwkF_HasteziGraphicsziCanvas_zdwa16_info
.LccSi:
	movl %eax,24(%ebx)
	movl %ecx,16(%ebx)
	movl 544(%esp),%eax
	movl %eax,8(%ebx)
	movl $Main_showAndDrawDiff1_closure,%esi
	jmp *-8(%ebx)
.text
	.align 4,0x90
	.long	Sczg_srt-(ccSo_info)+28
	.long	0
	.long	8716320
ccSo_info:
.LccSo:
	movl $ccSv_info,-4(%ebp)
	movl 3(%esi),%eax
	movl $Main_readAndDraw4_closure,%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	jmp toJSStr
.LucTO:
	addl $4,%ebp
.Lscsu:
	movl $ccSo_info,12(%ebp)
	movl %eax,%esi
	addl $12,%ebp
	testw $7,%si
	jne .LccSo
.LccSp:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	Sczg_srt-(ccSv_info)+28
	.long	65
	.long	8454176
ccSv_info:
.LccSv:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .LccSW
.LccSV:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl $ccSH_info,-4(%ebp)
	movl $Main_readAndDraw3_closure,%esi
	movl (%edi),%eax
	movl %eax,(%ebp)
	addl $-4,%ebp
	jmp toJSStr
.text
	.align 4,0x90
	.long	Sczg_srt-(ccSH_info)+28
	.long	194
	.long	65568
ccSH_info:
.LccSH:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .LccT0
.LccSZ:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl $ccSR_info,-4(%ebp)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_jsSetzuf1_closure,%esi
	movl (%edi),%eax
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne .LccSR
.LccT2:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	451
	.long	32
ccSR_info:
.LccSR:
	movl 12(%ebp),%eax
	movl $ccTc_info,12(%ebp)
	movl 8(%ebp),%ecx
	movl 4(%ebp),%edx
	addl $12,%ebp
	movl %eax,556(%esp)
	movl 3(%esi),%eax
	movl %eax,568(%esp)
	movl 872(%ebx),%eax
	movl %ecx,580(%esp)
	movl 20(%eax),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	movl %edx,592(%esp)
	leal 4(%edi),%edx
	movl %edx,8(%ecx)
	movl 100(%eax),%edx
	movl %edx,604(%esp)
	movl 104(%eax),%edx
	movl %edx,616(%esp)
	leal 4(%edi),%edx
	subl (%ecx),%edx
	xorl %ecx,%ecx
	movl %ecx,628(%esp)
	movl 604(%esp),%ecx
	subl %edx,%ecx
	movl 616(%esp),%edx
	movl %ecx,640(%esp)
	movl 628(%esp),%ecx
	sbbl %ecx,%edx
	movl 640(%esp),%ecx
	movl %ecx,100(%eax)
	movl %edx,104(%eax)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call suspendThread
	addl $12,%esp
	subl $12,%esp
	movl 604(%esp),%ecx
	pushl %ecx
	movl 596(%esp),%ecx
	pushl %ecx
	movl 576(%esp),%ecx
	pushl %ecx
	movl 592(%esp),%ecx
	pushl %ecx
	movl %eax,680(%esp)
	call __app3
	addl $28,%esp
	subl $8,%esp
	movl 660(%esp),%ecx
	pushl %ecx
	movl %eax,676(%esp)
	call resumeThread
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,676(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,688(%esp)
	movl %eax,%ecx
	movl %edx,700(%esp)
	movl 688(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 676(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,712(%esp)
	movl 700(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 712(%esp),%ecx
	adcl %eax,%ecx
	movl 676(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 664(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
.LccSW:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.LccT0:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.text
	.align 4,0x90
	.long	0
	.long	32
ccTc_info:
.LccTc:
	addl $4,%ebp
	jmp IBJHmTQyrtkCXFsQwT7UYx_HasteziPrimziAny_zdfFromAnyZLZR4_info
.LccTs:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.LccTz:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.LccTJ:
	movl $24,904(%ebx)
	jmp stg_gc_unbx_r1
.data
	.align 4
.align 1
.globl Main_showAndDrawDiff_closure
Main_showAndDrawDiff_closure:
	.long	Main_showAndDrawDiff_info
	.long	0
.text
	.align 4,0x90
	.long	Sczg_srt-(Main_showAndDrawDiff_info)+72
	.long	262167
	.long	0
	.long	65551
.globl Main_showAndDrawDiff_info
Main_showAndDrawDiff_info:
.LccVN:
	movl 24(%ebx),%eax
	movl %eax,24(%ebx)
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp Main_showAndDrawDiff1_info
.data
	.align 4
.align 1
.globl Main_readAndDraw1_closure
Main_readAndDraw1_closure:
	.long	Main_readAndDraw1_info
	.long	0
.text
	.align 4,0x90
	.long	1
	.long	17
scu6_info:
.LccXn:
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .LccXo
.LccXp:
	movl $stg_upd_frame_info,-12(%ebp)
	movl %esi,-8(%ebp)
	movl 12(%esi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp base_DataziTuple_fst_info
.LccXo:
	jmp *-16(%ebx)
.text
	.align 4,0x90
	.long	1
	.long	17
scu7_info:
.LccXq:
	movl %esi,%eax
	leal -12(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb .LccXr
.LccXs:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja .LccXu
.LccXt:
	movl $stg_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl 12(%eax),%eax
	movl $scu6_info,-12(%edi)
	movl %eax,(%edi)
	movl $300,24(%ebx)
	movl $Main_readAndDraw2_closure+1,16(%ebx)
	leal -12(%edi),%eax
	movl %eax,8(%ebx)
	addl $-12,%ebp
	jmp Main_zdwpoints_info
.LccXu:
	movl $16,904(%ebx)
.LccXr:
	movl %eax,%esi
	jmp *-16(%ebx)
.text
	.align 4,0x90
	.long	Sczg_srt-(scu8_info)+44
	.long	131077
	.long	1
	.long	65546
scu8_info:
.LccXA:
	movl 8(%ebx),%eax
	movl %eax,16(%ebx)
	movl 2(%esi),%eax
	movl %eax,8(%ebx)
	jmp FxthDgO5vhFC0dVxe1OwkF_HasteziGraphicsziCanvas_line2_info
.text
	.align 4,0x90
	.long	Sczg_srt-(Main_readAndDraw1_info)+20
	.long	196623
	.long	0
	.long	1138688015
.globl Main_readAndDraw1_info
Main_readAndDraw1_info:
.LccXK:
	movl 16(%ebx),%eax
	movl 8(%ebx),%ecx
	leal -16(%ebp),%edx
	cmpl 840(%ebx),%edx
	jb .LccXL
.LccXM:
	movl $ccWI_info,-12(%ebp)
	movl $Main_readAndDraw4_closure,32(%ebx)
	movl %ecx,24(%ebx)
	movl $LlHybR7LOSS7VAc0pG6N16_ControlziMonadziIOziClass_zdfMonadIOIO_closure,16(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_zdfIsElemElem_closure,8(%ebx)
	movl $stg_ap_v_info,-16(%ebp)
	movl %ecx,-8(%ebp)
	movl %eax,-4(%ebp)
	addl $-16,%ebp
	jmp FxthDgO5vhFC0dVxe1OwkF_HasteziDOM_getProp_info
.text
	.align 4,0x90
	.long	Sczg_srt-(ccWI_info)+28
	.long	2
	.long	16187424
ccWI_info:
.LccWI:
	movl $ccWM_info,(%ebp)
	movl %esi,8(%ebx)
	jmp Expr_expr1_info
.text
	.align 4,0x90
	.long	Sczg_srt-(ccWM_info)+28
	.long	2
	.long	16056352
ccWM_info:
.LccWM:
	movl 4(%ebp),%eax
	movl %esi,%ecx
	andl $7,%ecx
	cmpl $2,%ecx
	jb .Lsctz
.LccXI:
	movl $ccWR_info,-4(%ebp)
	movl 2(%esi),%eax
	movl %eax,8(%ebx)
	movl %eax,(%ebp)
	addl $-4,%ebp
	jmp base_DataziTuple_snd_info
.text
	.align 4,0x90
	.long	Sczg_srt-(ccWR_info)+28
	.long	3
	.long	16056352
ccWR_info:
.LccWR:
	movl $ccWV_info,(%ebp)
	movl $ghczmprim_GHCziTypes_ZMZN_closure+1,16(%ebx)
	movl %esi,8(%ebx)
	jmp ghczmprim_GHCziClasses_zdfEqZMZNzuzdszdczeze1_info
.text
	.align 4,0x90
	.long	Sczg_srt-(ccWV_info)+28
	.long	3
	.long	16056352
ccWV_info:
.LccWV:
	movl %esi,%eax
	andl $7,%eax
	cmpl $2,%eax
	jb .LucZ1
.LccYZ:
	movl $ccX0_info,(%ebp)
	movl 12(%ebp),%esi
	testw $7,%si
	jne .LccX0
.LccX1:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	Sczg_srt-(ccX0_info)+44
	.long	387
	.long	458784
ccX0_info:
.LccX0:
	movl $ccX5_info,(%ebp)
	movl 3(%esi),%eax
	movl 7(%esi),%ecx
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziGraphicsziCanvas_bufferzuf1_closure,%esi
	movl %ecx,8(%ebp)
	movl %eax,12(%ebp)
	testw $7,%si
	jne .LccX5
.LccX6:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	Sczg_srt-(ccX5_info)+44
	.long	387
	.long	196640
ccX5_info:
.LccX5:
	movl $ccXd_info,(%ebp)
	movl 3(%esi),%eax
	movl 8(%ebp),%ecx
	movl 872(%ebx),%edx
	movl %eax,64(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,76(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,88(%esp)
	movl 104(%edx),%ecx
	movl %ecx,100(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,112(%esp)
	movl 88(%esp),%eax
	subl %ecx,%eax
	movl 100(%esp),%ecx
	movl %eax,124(%esp)
	movl 112(%esp),%eax
	sbbl %eax,%ecx
	movl 124(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call suspendThread
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call __app1
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call resumeThread
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
.text
	.align 4,0x90
	.long	Sczg_srt-(ccXd_info)+44
	.long	387
	.long	196640
ccXd_info:
.LccXd:
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja .LccYW
.LccYV:
	movl $scu7_info,-20(%edi)
	movl 4(%ebp),%eax
	movl %eax,-8(%edi)
	movl $scu8_info,-4(%edi)
	leal -20(%edi),%eax
	movl %eax,(%edi)
	movl 12(%ebp),%eax
	movl %eax,16(%ebx)
	leal -2(%edi),%eax
	movl %eax,8(%ebx)
	addl $16,%ebp
	jmp FxthDgO5vhFC0dVxe1OwkF_HasteziGraphicsziCanvas_zdwa16_info
.LccXL:
	movl %eax,16(%ebx)
	movl %ecx,8(%ebx)
	movl $Main_readAndDraw1_closure,%esi
	jmp *-8(%ebx)
.text
	.align 4,0x90
	.long	Sczg_srt-(ccXR_info)+28
	.long	0
	.long	8716320
ccXR_info:
.LccXR:
	movl $ccXY_info,-4(%ebp)
	movl 3(%esi),%eax
	movl $Main_readAndDraw4_closure,%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	jmp toJSStr
.LucZ1:
	movl 8(%ebp),%eax
	addl $4,%ebp
.Lsctz:
	movl $ccXR_info,8(%ebp)
	movl %eax,%esi
	addl $8,%ebp
	testw $7,%si
	jne .LccXR
.LccXS:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	Sczg_srt-(ccXY_info)+28
	.long	65
	.long	8454176
ccXY_info:
.LccXY:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .LccYp
.LccYo:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl $ccYa_info,-4(%ebp)
	movl $Main_readAndDraw3_closure,%esi
	movl (%edi),%eax
	movl %eax,(%ebp)
	addl $-4,%ebp
	jmp toJSStr
.text
	.align 4,0x90
	.long	Sczg_srt-(ccYa_info)+28
	.long	194
	.long	65568
ccYa_info:
.LccYa:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .LccYt
.LccYs:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl $ccYk_info,-4(%ebp)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_jsSetzuf1_closure,%esi
	movl (%edi),%eax
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne .LccYk
.LccYv:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	451
	.long	32
ccYk_info:
.LccYk:
	movl 12(%ebp),%eax
	movl $ccYF_info,12(%ebp)
	movl 8(%ebp),%ecx
	movl 4(%ebp),%edx
	addl $12,%ebp
	movl %eax,208(%esp)
	movl 3(%esi),%eax
	movl %eax,220(%esp)
	movl 872(%ebx),%eax
	movl %ecx,232(%esp)
	movl 20(%eax),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	movl %edx,244(%esp)
	leal 4(%edi),%edx
	movl %edx,8(%ecx)
	movl 100(%eax),%edx
	movl %edx,256(%esp)
	movl 104(%eax),%edx
	movl %edx,268(%esp)
	leal 4(%edi),%edx
	subl (%ecx),%edx
	xorl %ecx,%ecx
	movl %ecx,280(%esp)
	movl 256(%esp),%ecx
	subl %edx,%ecx
	movl 268(%esp),%edx
	movl %ecx,292(%esp)
	movl 280(%esp),%ecx
	sbbl %ecx,%edx
	movl 292(%esp),%ecx
	movl %ecx,100(%eax)
	movl %edx,104(%eax)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call suspendThread
	addl $12,%esp
	subl $12,%esp
	movl 256(%esp),%ecx
	pushl %ecx
	movl 248(%esp),%ecx
	pushl %ecx
	movl 228(%esp),%ecx
	pushl %ecx
	movl 244(%esp),%ecx
	pushl %ecx
	movl %eax,332(%esp)
	call __app3
	addl $28,%esp
	subl $8,%esp
	movl 312(%esp),%ecx
	pushl %ecx
	movl %eax,328(%esp)
	call resumeThread
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,328(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,340(%esp)
	movl %eax,%ecx
	movl %edx,352(%esp)
	movl 340(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 328(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,364(%esp)
	movl 352(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 364(%esp),%ecx
	adcl %eax,%ecx
	movl 328(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 316(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
.LccYp:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.LccYt:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.text
	.align 4,0x90
	.long	0
	.long	32
ccYF_info:
.LccYF:
	addl $4,%ebp
	jmp IBJHmTQyrtkCXFsQwT7UYx_HasteziPrimziAny_zdfFromAnyZLZR4_info
.LccYW:
	movl $24,904(%ebx)
	jmp stg_gc_unbx_r1
.data
	.align 4
.align 1
.globl Main_readAndDraw_closure
Main_readAndDraw_closure:
	.long	Main_readAndDraw_info
	.long	0
.text
	.align 4,0x90
	.long	Sczg_srt-(Main_readAndDraw_info)+76
	.long	196623
	.long	0
	.long	65551
.globl Main_readAndDraw_info
Main_readAndDraw_info:
.Lcd0h:
	movl 16(%ebx),%eax
	movl %eax,16(%ebx)
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp Main_readAndDraw1_info
.data
	.align 4
.align 1
rc5I_closure:
	.long	rc5I_info
	.long	0
	.long	0
	.long	0
.section .rodata
	.align 4
.align 1
cd0w_str:
	.byte	80
	.byte	97
	.byte	116
	.byte	116
	.byte	101
	.byte	114
	.byte	110
	.byte	32
	.byte	109
	.byte	97
	.byte	116
	.byte	99
	.byte	104
	.byte	32
	.byte	102
	.byte	97
	.byte	105
	.byte	108
	.byte	117
	.byte	114
	.byte	101
	.byte	32
	.byte	105
	.byte	110
	.byte	32
	.byte	100
	.byte	111
	.byte	32
	.byte	101
	.byte	120
	.byte	112
	.byte	114
	.byte	101
	.byte	115
	.byte	115
	.byte	105
	.byte	111
	.byte	110
	.byte	32
	.byte	97
	.byte	116
	.byte	32
	.byte	67
	.byte	97
	.byte	108
	.byte	99
	.byte	117
	.byte	108
	.byte	97
	.byte	116
	.byte	111
	.byte	114
	.byte	46
	.byte	104
	.byte	115
	.byte	58
	.byte	49
	.byte	48
	.byte	56
	.byte	58
	.byte	53
	.byte	45
	.byte	49
	.byte	50
	.byte	0
.text
	.align 4,0x90
	.long	0
	.long	22
rc5I_info:
.Lcd0x:
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lcd0y
.Lcd0z:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	call newCAF
	addl $12,%esp
	testl %eax,%eax
	je .Lcd0v
.Lcd0u:
	movl $stg_bh_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl $cd0w_str,8(%ebx)
	addl $-12,%ebp
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.Lcd0v:
	jmp *(%esi)
.Lcd0y:
	jmp *-16(%ebx)
.data
	.align 4
.align 1
rc5J_closure:
	.long	base_GHCziIOziException_IOError_static_info
	.long	base_GHCziBase_Nothing_closure+1
	.long	base_GHCziIOziException_UserError_closure+1
	.long	ghczmprim_GHCziTypes_ZMZN_closure+1
	.long	rc5I_closure
	.long	base_GHCziBase_Nothing_closure+1
	.long	base_GHCziBase_Nothing_closure+1
	.long	0
.data
	.align 4
.align 1
rc5K_closure:
	.long	rc5K_info
	.long	0
	.long	0
	.long	0
.text
	.align 4,0x90
	.long	Sczg_srt-(rc5K_info)+80
	.long	0
	.long	196630
rc5K_info:
.Lcd0O:
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lcd0P
.Lcd0Q:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	call newCAF
	addl $12,%esp
	testl %eax,%eax
	je .Lcd0N
.Lcd0M:
	movl $stg_bh_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl $rc5J_closure+1,8(%ebx)
	addl $-12,%ebp
	jmp base_GHCziIOziException_zdfExceptionIOExceptionzuzdctoException_info
.Lcd0N:
	jmp *(%esi)
.Lcd0P:
	jmp *-16(%ebx)
.data
	.align 4
.align 1
rc5L_closure:
	.long	rc5L_info
	.long	0
	.long	0
	.long	0
.section .rodata
	.align 4
.align 1
cd1k_str:
	.byte	68
	.byte	105
	.byte	102
	.byte	102
	.byte	101
	.byte	114
	.byte	101
	.byte	110
	.byte	116
	.byte	105
	.byte	97
	.byte	116
	.byte	101
	.byte	0
.text
	.align 4,0x90
	.long	Sczg_srt-(rc5L_info)+88
	.long	0
	.long	65558
rc5L_info:
.Lcd1h:
	leal -20(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lcd1A
.Lcd1B:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	call newCAF
	addl $12,%esp
	testl %eax,%eax
	je .Lcd1d
.Lcd1c:
	movl $stg_bh_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl $cd1e_info,-16(%ebp)
	movl $Pages_mkButton1_closure,%esi
	addl $-16,%ebp
	testw $7,%si
	jne .Lcd1e
.Lcd1f:
	jmp *(%esi)
.Lcd1d:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	0
	.long	32
cd1e_info:
.Lcd1e:
	movl $cd1l_info,-4(%ebp)
	movl $cd1k_str,8(%ebx)
	movl %esi,(%ebp)
	addl $-4,%ebp
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.text
	.align 4,0x90
	.long	1
	.long	32
cd1l_info:
.Lcd1l:
	movl $cd1p_info,(%ebp)
	jmp toJSStr
.text
	.align 4,0x90
	.long	1
	.long	32
cd1p_info:
.Lcd1p:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .Lcd1G
.Lcd1F:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl 4(%ebp),%eax
	leal -3(%edi),%ecx
.Lcd1x:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja .Lcd1J
.Lcd1I:
	movl 3(%ecx),%ecx
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_Attribute_con_info,-8(%edi)
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%esi
	addl $8,%ebp
	jmp *(%ebp)
.text
	.align 4,0x90
	.long	1
	.long	32
cd1w_info:
.Lcd1w:
	movl 4(%ebp),%eax
	movl %esi,%ecx
	jmp .Lcd1x
.Lcd1A:
	jmp *-16(%ebx)
.Lcd1G:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.Lcd1J:
	movl $12,904(%ebx)
	movl $cd1w_info,(%ebp)
	movl %ecx,%esi
	jmp stg_gc_unpt_r1
.data
	.align 4
.align 1
rc5M_closure:
	.long	ghczmprim_GHCziTypes_ZC_static_info
	.long	rc5L_closure
	.long	ghczmprim_GHCziTypes_ZMZN_closure+1
	.long	0
.data
	.align 4
.align 1
rc5N_closure:
	.long	rc5N_info
	.long	0
.section .rodata
	.align 4
.align 1
cd28_str:
	.byte	105
	.byte	110
	.byte	112
	.byte	117
	.byte	116
	.byte	0
.text
	.align 4,0x90
	.long	Sczg_srt-(rc5N_info)+92
	.long	65539
	.long	0
	.long	196623
rc5N_info:
.Lcd2b:
	leal -8(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lcd2z
.Lcd2A:
	movl $cd29_info,-4(%ebp)
	movl $cd28_str,8(%ebx)
	addl $-4,%ebp
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.text
	.align 4,0x90
	.long	Sczg_srt-(cd29_info)+92
	.long	0
	.long	65568
cd29_info:
.Lcd29:
	movl $cd2e_info,(%ebp)
	jmp toJSStr
.text
	.align 4,0x90
	.long	Sczg_srt-(cd2e_info)+92
	.long	0
	.long	65568
cd2e_info:
.Lcd2e:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .Lcd2E
.Lcd2D:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl $cd2o_info,-4(%ebp)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziJSString_newElemzuf1_closure,%esi
	movl (%edi),%eax
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne .Lcd2o
.Lcd2p:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	65
	.long	32
cd2o_info:
.Lcd2o:
	movl 4(%ebp),%eax
	movl $cd2w_info,4(%ebp)
	addl $4,%ebp
	movl 3(%esi),%ecx
	movl 872(%ebx),%edx
	movl %ecx,64(%esp)
	movl 20(%edx),%ecx
	movl %ebp,12(%ecx)
	movl 888(%ebx),%ecx
	movl %eax,76(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%ecx)
	movl 100(%edx),%eax
	movl %eax,88(%esp)
	movl 104(%edx),%eax
	movl %eax,100(%esp)
	leal 4(%edi),%eax
	subl (%ecx),%eax
	xorl %ecx,%ecx
	movl %ecx,112(%esp)
	movl 88(%esp),%ecx
	subl %eax,%ecx
	movl 100(%esp),%eax
	movl %ecx,124(%esp)
	movl 112(%esp),%ecx
	sbbl %ecx,%eax
	movl 124(%esp),%ecx
	movl %ecx,100(%edx)
	movl %eax,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call suspendThread
	addl $12,%esp
	subl $4,%esp
	movl 80(%esp),%ecx
	pushl %ecx
	movl 72(%esp),%ecx
	pushl %ecx
	movl %eax,148(%esp)
	call __app1
	addl $12,%esp
	subl $8,%esp
	movl 144(%esp),%ecx
	pushl %ecx
	movl %eax,160(%esp)
	call resumeThread
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,160(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,172(%esp)
	movl %eax,%ecx
	movl %edx,184(%esp)
	movl 172(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 160(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,196(%esp)
	movl 184(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 196(%esp),%ecx
	adcl %eax,%ecx
	movl 160(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 148(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
.text
	.align 4,0x90
	.long	0
	.long	32
cd2w_info:
.Lcd2w:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .Lcd2J
.Lcd2I:
	movl $base_GHCziPtr_Ptr_con_info,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%esi
	addl $4,%ebp
	jmp *(%ebp)
.Lcd2z:
	movl $rc5N_closure,%esi
	jmp *-8(%ebx)
.Lcd2E:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.Lcd2J:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.data
	.align 4
.align 1
rc5O_closure:
	.long	rc5O_info
	.long	0
	.long	0
	.long	0
.section .rodata
	.align 4
.align 1
cd3C_str:
	.byte	116
	.byte	121
	.byte	112
	.byte	101
	.byte	0
.section .rodata
	.align 4
.align 1
cd3S_str:
	.byte	104
	.byte	105
	.byte	100
	.byte	100
	.byte	101
	.byte	110
	.byte	0
.text
	.align 4,0x90
	.long	0
	.long	22
rc5O_info:
.Lcd3F:
	leal -20(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lcd49
.Lcd4a:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	call newCAF
	addl $12,%esp
	testl %eax,%eax
	je .Lcd3B
.Lcd3A:
	movl $stg_bh_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl $cd3D_info,-16(%ebp)
	movl $cd3C_str,8(%ebx)
	addl $-16,%ebp
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.Lcd3B:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	0
	.long	32
cd3D_info:
.Lcd3D:
	movl $cd3I_info,(%ebp)
	jmp toJSStr
.text
	.align 4,0x90
	.long	0
	.long	32
cd3I_info:
.Lcd3I:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .Lcd4e
.Lcd4d:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl $cd3T_info,-4(%ebp)
	movl $cd3S_str,8(%ebx)
	movl (%edi),%eax
	movl %eax,(%ebp)
	addl $-4,%ebp
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.text
	.align 4,0x90
	.long	65
	.long	32
cd3T_info:
.Lcd3T:
	movl $cd3X_info,(%ebp)
	jmp toJSStr
.text
	.align 4,0x90
	.long	65
	.long	32
cd3X_info:
.Lcd3X:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .Lcd4j
.Lcd4i:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl 4(%ebp),%eax
	leal -3(%edi),%ecx
.Lcd45:
	addl $20,%edi
	cmpl 856(%ebx),%edi
	ja .Lcd4m
.Lcd4l:
	movl 3(%ecx),%ecx
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_AttrName_con_info,-16(%edi)
	movl %eax,-12(%edi)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_Attribute_con_info,-8(%edi)
	leal -13(%edi),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%esi
	addl $8,%ebp
	jmp *(%ebp)
.text
	.align 4,0x90
	.long	65
	.long	32
cd44_info:
.Lcd44:
	movl 4(%ebp),%eax
	movl %esi,%ecx
	jmp .Lcd45
.Lcd49:
	jmp *-16(%ebx)
.Lcd4e:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.Lcd4j:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.Lcd4m:
	movl $20,904(%ebx)
	movl $cd44_info,(%ebp)
	movl %ecx,%esi
	jmp stg_gc_unpt_r1
.data
	.align 4
.align 1
rc5P_closure:
	.long	rc5P_info
	.long	0
	.long	0
	.long	0
.section .rodata
	.align 4
.align 1
cd4U_str:
	.byte	68
	.byte	101
	.byte	122
	.byte	111
	.byte	111
	.byte	109
	.byte	0
.text
	.align 4,0x90
	.long	Sczg_srt-(rc5P_info)+88
	.long	0
	.long	65558
rc5P_info:
.Lcd4R:
	leal -20(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lcd5a
.Lcd5b:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	call newCAF
	addl $12,%esp
	testl %eax,%eax
	je .Lcd4N
.Lcd4M:
	movl $stg_bh_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl $cd4O_info,-16(%ebp)
	movl $Pages_mkButton1_closure,%esi
	addl $-16,%ebp
	testw $7,%si
	jne .Lcd4O
.Lcd4P:
	jmp *(%esi)
.Lcd4N:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	0
	.long	32
cd4O_info:
.Lcd4O:
	movl $cd4V_info,-4(%ebp)
	movl $cd4U_str,8(%ebx)
	movl %esi,(%ebp)
	addl $-4,%ebp
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.text
	.align 4,0x90
	.long	1
	.long	32
cd4V_info:
.Lcd4V:
	movl $cd4Z_info,(%ebp)
	jmp toJSStr
.text
	.align 4,0x90
	.long	1
	.long	32
cd4Z_info:
.Lcd4Z:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .Lcd5g
.Lcd5f:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl 4(%ebp),%eax
	leal -3(%edi),%ecx
.Lcd57:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja .Lcd5j
.Lcd5i:
	movl 3(%ecx),%ecx
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_Attribute_con_info,-8(%edi)
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%esi
	addl $8,%ebp
	jmp *(%ebp)
.text
	.align 4,0x90
	.long	1
	.long	32
cd56_info:
.Lcd56:
	movl 4(%ebp),%eax
	movl %esi,%ecx
	jmp .Lcd57
.Lcd5a:
	jmp *-16(%ebx)
.Lcd5g:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.Lcd5j:
	movl $12,904(%ebx)
	movl $cd56_info,(%ebp)
	movl %ecx,%esi
	jmp stg_gc_unpt_r1
.data
	.align 4
.align 1
rc5Q_closure:
	.long	ghczmprim_GHCziTypes_ZC_static_info
	.long	rc5P_closure
	.long	ghczmprim_GHCziTypes_ZMZN_closure+1
	.long	0
.data
	.align 4
.align 1
rc5R_closure:
	.long	rc5R_info
	.long	0
	.long	0
	.long	0
.section .rodata
	.align 4
.align 1
cd5Q_str:
	.byte	90
	.byte	111
	.byte	111
	.byte	109
	.byte	0
.text
	.align 4,0x90
	.long	Sczg_srt-(rc5R_info)+88
	.long	0
	.long	65558
rc5R_info:
.Lcd5N:
	leal -20(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lcd66
.Lcd67:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	call newCAF
	addl $12,%esp
	testl %eax,%eax
	je .Lcd5J
.Lcd5I:
	movl $stg_bh_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl $cd5K_info,-16(%ebp)
	movl $Pages_mkButton1_closure,%esi
	addl $-16,%ebp
	testw $7,%si
	jne .Lcd5K
.Lcd5L:
	jmp *(%esi)
.Lcd5J:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	0
	.long	32
cd5K_info:
.Lcd5K:
	movl $cd5R_info,-4(%ebp)
	movl $cd5Q_str,8(%ebx)
	movl %esi,(%ebp)
	addl $-4,%ebp
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.text
	.align 4,0x90
	.long	1
	.long	32
cd5R_info:
.Lcd5R:
	movl $cd5V_info,(%ebp)
	jmp toJSStr
.text
	.align 4,0x90
	.long	1
	.long	32
cd5V_info:
.Lcd5V:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .Lcd6c
.Lcd6b:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl 4(%ebp),%eax
	leal -3(%edi),%ecx
.Lcd63:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja .Lcd6f
.Lcd6e:
	movl 3(%ecx),%ecx
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_Attribute_con_info,-8(%edi)
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%esi
	addl $8,%ebp
	jmp *(%ebp)
.text
	.align 4,0x90
	.long	1
	.long	32
cd62_info:
.Lcd62:
	movl 4(%ebp),%eax
	movl %esi,%ecx
	jmp .Lcd63
.Lcd66:
	jmp *-16(%ebx)
.Lcd6c:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.Lcd6f:
	movl $12,904(%ebx)
	movl $cd62_info,(%ebp)
	movl %ecx,%esi
	jmp stg_gc_unpt_r1
.data
	.align 4
.align 1
rc5S_closure:
	.long	ghczmprim_GHCziTypes_ZC_static_info
	.long	rc5R_closure
	.long	ghczmprim_GHCziTypes_ZMZN_closure+1
	.long	0
.data
	.align 4
.align 1
rc5T_closure:
	.long	ghczmprim_GHCziTypes_Izh_static_info
	.long	20
.data
	.align 4
.align 1
rc5U_closure:
	.long	rc5U_info
	.long	0
	.long	0
	.long	0
.section .rodata
	.align 4
.align 1
cd6w_str:
	.byte	48
	.byte	46
	.byte	48
	.byte	52
	.byte	0
.text
	.align 4,0x90
	.long	0
	.long	22
rc5U_info:
.Lcd6x:
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lcd6y
.Lcd6z:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	call newCAF
	addl $12,%esp
	testl %eax,%eax
	je .Lcd6v
.Lcd6u:
	movl $stg_bh_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl $cd6w_str,8(%ebx)
	addl $-12,%ebp
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.Lcd6v:
	jmp *(%esi)
.Lcd6y:
	jmp *-16(%ebx)
.data
	.align 4
.align 1
rc5V_closure:
	.long	rc5V_info
	.long	0
	.long	0
	.long	0
.section .rodata
	.align 4
.align 1
cd74_str:
	.byte	83
	.byte	99
	.byte	97
	.byte	108
	.byte	101
	.byte	32
	.byte	61
	.byte	32
	.byte	0
.text
	.align 4,0x90
	.long	Sczg_srt-(rc5V_info)+100
	.long	0
	.long	65558
rc5V_info:
.Lcd71:
	leal -20(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lcd7k
.Lcd7l:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	call newCAF
	addl $12,%esp
	testl %eax,%eax
	je .Lcd6X
.Lcd6W:
	movl $stg_bh_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl $cd6Y_info,-16(%ebp)
	movl $Pages_mkHTML1_closure,%esi
	addl $-16,%ebp
	testw $7,%si
	jne .Lcd6Y
.Lcd6Z:
	jmp *(%esi)
.Lcd6X:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	0
	.long	32
cd6Y_info:
.Lcd6Y:
	movl $cd75_info,-4(%ebp)
	movl $cd74_str,8(%ebx)
	movl %esi,(%ebp)
	addl $-4,%ebp
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.text
	.align 4,0x90
	.long	1
	.long	32
cd75_info:
.Lcd75:
	movl $cd79_info,(%ebp)
	jmp toJSStr
.text
	.align 4,0x90
	.long	1
	.long	32
cd79_info:
.Lcd79:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .Lcd7q
.Lcd7p:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl 4(%ebp),%eax
	leal -3(%edi),%ecx
.Lcd7h:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja .Lcd7t
.Lcd7s:
	movl 3(%ecx),%ecx
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_Attribute_con_info,-8(%edi)
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%esi
	addl $8,%ebp
	jmp *(%ebp)
.text
	.align 4,0x90
	.long	1
	.long	32
cd7g_info:
.Lcd7g:
	movl 4(%ebp),%eax
	movl %esi,%ecx
	jmp .Lcd7h
.Lcd7k:
	jmp *-16(%ebx)
.Lcd7q:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.Lcd7t:
	movl $12,904(%ebx)
	movl $cd7g_info,(%ebp)
	movl %ecx,%esi
	jmp stg_gc_unpt_r1
.data
	.align 4
.align 1
rc5W_closure:
	.long	ghczmprim_GHCziTypes_ZC_static_info
	.long	rc5V_closure
	.long	ghczmprim_GHCziTypes_ZMZN_closure+1
	.long	0
.data
	.align 4
.align 1
rc5X_closure:
	.long	rc5X_info
	.long	0
	.long	0
	.long	0
.section .rodata
	.align 4
.align 1
cd80_str:
	.byte	60
	.byte	98
	.byte	114
	.byte	47
	.byte	62
	.byte	0
.text
	.align 4,0x90
	.long	Sczg_srt-(rc5X_info)+100
	.long	0
	.long	65558
rc5X_info:
.Lcd7X:
	leal -20(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lcd8g
.Lcd8h:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	call newCAF
	addl $12,%esp
	testl %eax,%eax
	je .Lcd7T
.Lcd7S:
	movl $stg_bh_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl $cd7U_info,-16(%ebp)
	movl $Pages_mkHTML1_closure,%esi
	addl $-16,%ebp
	testw $7,%si
	jne .Lcd7U
.Lcd7V:
	jmp *(%esi)
.Lcd7T:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	0
	.long	32
cd7U_info:
.Lcd7U:
	movl $cd81_info,-4(%ebp)
	movl $cd80_str,8(%ebx)
	movl %esi,(%ebp)
	addl $-4,%ebp
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.text
	.align 4,0x90
	.long	1
	.long	32
cd81_info:
.Lcd81:
	movl $cd85_info,(%ebp)
	jmp toJSStr
.text
	.align 4,0x90
	.long	1
	.long	32
cd85_info:
.Lcd85:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .Lcd8m
.Lcd8l:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl 4(%ebp),%eax
	leal -3(%edi),%ecx
.Lcd8d:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja .Lcd8p
.Lcd8o:
	movl 3(%ecx),%ecx
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_Attribute_con_info,-8(%edi)
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%esi
	addl $8,%ebp
	jmp *(%ebp)
.text
	.align 4,0x90
	.long	1
	.long	32
cd8c_info:
.Lcd8c:
	movl 4(%ebp),%eax
	movl %esi,%ecx
	jmp .Lcd8d
.Lcd8g:
	jmp *-16(%ebx)
.Lcd8m:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.Lcd8p:
	movl $12,904(%ebx)
	movl $cd8c_info,(%ebp)
	movl %ecx,%esi
	jmp stg_gc_unpt_r1
.data
	.align 4
.align 1
rc5Y_closure:
	.long	ghczmprim_GHCziTypes_ZC_static_info
	.long	rc5X_closure
	.long	ghczmprim_GHCziTypes_ZMZN_closure+1
	.long	0
.data
	.align 4
.align 1
rc5Z_closure:
	.long	rc5Z_info
	.long	0
	.long	0
	.long	0
.section .rodata
	.align 4
.align 1
cd8W_str:
	.byte	68
	.byte	114
	.byte	97
	.byte	119
	.byte	32
	.byte	103
	.byte	114
	.byte	97
	.byte	112
	.byte	104
	.byte	0
.text
	.align 4,0x90
	.long	Sczg_srt-(rc5Z_info)+88
	.long	0
	.long	65558
rc5Z_info:
.Lcd8T:
	leal -20(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lcd9c
.Lcd9d:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	call newCAF
	addl $12,%esp
	testl %eax,%eax
	je .Lcd8P
.Lcd8O:
	movl $stg_bh_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl $cd8Q_info,-16(%ebp)
	movl $Pages_mkButton1_closure,%esi
	addl $-16,%ebp
	testw $7,%si
	jne .Lcd8Q
.Lcd8R:
	jmp *(%esi)
.Lcd8P:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	0
	.long	32
cd8Q_info:
.Lcd8Q:
	movl $cd8X_info,-4(%ebp)
	movl $cd8W_str,8(%ebx)
	movl %esi,(%ebp)
	addl $-4,%ebp
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.text
	.align 4,0x90
	.long	1
	.long	32
cd8X_info:
.Lcd8X:
	movl $cd91_info,(%ebp)
	jmp toJSStr
.text
	.align 4,0x90
	.long	1
	.long	32
cd91_info:
.Lcd91:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .Lcd9i
.Lcd9h:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl 4(%ebp),%eax
	leal -3(%edi),%ecx
.Lcd99:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja .Lcd9l
.Lcd9k:
	movl 3(%ecx),%ecx
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_Attribute_con_info,-8(%edi)
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%esi
	addl $8,%ebp
	jmp *(%ebp)
.text
	.align 4,0x90
	.long	1
	.long	32
cd98_info:
.Lcd98:
	movl 4(%ebp),%eax
	movl %esi,%ecx
	jmp .Lcd99
.Lcd9c:
	jmp *-16(%ebx)
.Lcd9i:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.Lcd9l:
	movl $12,904(%ebx)
	movl $cd98_info,(%ebp)
	movl %ecx,%esi
	jmp stg_gc_unpt_r1
.data
	.align 4
.align 1
rc60_closure:
	.long	ghczmprim_GHCziTypes_ZC_static_info
	.long	rc5Z_closure
	.long	ghczmprim_GHCziTypes_ZMZN_closure+1
	.long	0
.data
	.align 4
.align 1
rc61_closure:
	.long	rc61_info
	.long	0
	.long	0
	.long	0
.section .rodata
	.align 4
.align 1
cd9A_str:
	.byte	120
	.byte	0
.text
	.align 4,0x90
	.long	0
	.long	22
rc61_info:
.Lcd9B:
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lcd9C
.Lcd9D:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	call newCAF
	addl $12,%esp
	testl %eax,%eax
	je .Lcd9z
.Lcd9y:
	movl $stg_bh_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl $cd9A_str,8(%ebx)
	addl $-12,%ebp
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.Lcd9z:
	jmp *(%esi)
.Lcd9C:
	jmp *-16(%ebx)
.data
	.align 4
.align 1
rc62_closure:
	.long	rc62_info
	.long	0
	.long	0
	.long	0
.section .rodata
	.align 4
.align 1
cda8_str:
	.byte	60
	.byte	105
	.byte	62
	.byte	102
	.byte	60
	.byte	47
	.byte	105
	.byte	62
	.byte	40
	.byte	60
	.byte	105
	.byte	62
	.byte	120
	.byte	60
	.byte	47
	.byte	105
	.byte	62
	.byte	41
	.byte	32
	.byte	61
	.byte	32
	.byte	0
.text
	.align 4,0x90
	.long	Sczg_srt-(rc62_info)+100
	.long	0
	.long	65558
rc62_info:
.Lcda5:
	leal -20(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lcdao
.Lcdap:
	subl $4,%esp
	pushl %esi
	pushl %ebx
	call newCAF
	addl $12,%esp
	testl %eax,%eax
	je .Lcda1
.Lcda0:
	movl $stg_bh_upd_frame_info,-12(%ebp)
	movl %eax,-8(%ebp)
	movl $cda2_info,-16(%ebp)
	movl $Pages_mkHTML1_closure,%esi
	addl $-16,%ebp
	testw $7,%si
	jne .Lcda2
.Lcda3:
	jmp *(%esi)
.Lcda1:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	0
	.long	32
cda2_info:
.Lcda2:
	movl $cda9_info,-4(%ebp)
	movl $cda8_str,8(%ebx)
	movl %esi,(%ebp)
	addl $-4,%ebp
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.text
	.align 4,0x90
	.long	1
	.long	32
cda9_info:
.Lcda9:
	movl $cdad_info,(%ebp)
	jmp toJSStr
.text
	.align 4,0x90
	.long	1
	.long	32
cdad_info:
.Lcdad:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .Lcdau
.Lcdat:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl 4(%ebp),%eax
	leal -3(%edi),%ecx
.Lcdal:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja .Lcdax
.Lcdaw:
	movl 3(%ecx),%ecx
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_Attribute_con_info,-8(%edi)
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%esi
	addl $8,%ebp
	jmp *(%ebp)
.text
	.align 4,0x90
	.long	1
	.long	32
cdak_info:
.Lcdak:
	movl 4(%ebp),%eax
	movl %esi,%ecx
	jmp .Lcdal
.Lcdao:
	jmp *-16(%ebx)
.Lcdau:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.Lcdax:
	movl $12,904(%ebx)
	movl $cdak_info,(%ebp)
	movl %ecx,%esi
	jmp stg_gc_unpt_r1
.data
	.align 4
.align 1
rc63_closure:
	.long	ghczmprim_GHCziTypes_ZC_static_info
	.long	rc62_closure
	.long	ghczmprim_GHCziTypes_ZMZN_closure+1
	.long	0
.data
	.align 4
.align 1
.globl Main_main1_closure
Main_main1_closure:
	.long	Main_main1_info
	.long	0
.section .rodata
	.align 4
.align 1
cde7_str:
	.byte	118
	.byte	97
	.byte	108
	.byte	117
	.byte	101
	.byte	0
.text
	.align 4,0x90
	.long	1
	.long	17
scvZ_info:
.Lcdea:
	leal -20(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .LcdeB
.LcdeC:
	movl $stg_upd_frame_info,-12(%ebp)
	movl %esi,-8(%ebp)
	movl $cde8_info,-20(%ebp)
	movl $cde7_str,8(%ebx)
	movl 12(%esi),%eax
	movl %eax,-16(%ebp)
	addl $-20,%ebp
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.text
	.align 4,0x90
	.long	1
	.long	32
cde8_info:
.Lcde8:
	movl $cded_info,(%ebp)
	jmp toJSStr
.text
	.align 4,0x90
	.long	1
	.long	32
cded_info:
.Lcded:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .LcdeG
.LcdeF:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl $cdep_info,(%ebp)
	movl 4(%ebp),%esi
	movl (%edi),%eax
	movl %eax,4(%ebp)
	jmp toJSStr
.text
	.align 4,0x90
	.long	65
	.long	32
cdep_info:
.Lcdep:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .LcdeK
.LcdeJ:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl 4(%ebp),%eax
	leal -3(%edi),%ecx
.Lcdex:
	addl $20,%edi
	cmpl 856(%ebx),%edi
	ja .LcdeN
.LcdeM:
	movl 3(%ecx),%ecx
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_AttrName_con_info,-16(%edi)
	movl %eax,-12(%edi)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_Attribute_con_info,-8(%edi)
	leal -13(%edi),%eax
	movl %eax,-4(%edi)
	movl %ecx,(%edi)
	leal -7(%edi),%esi
	addl $8,%ebp
	jmp *(%ebp)
.text
	.align 4,0x90
	.long	65
	.long	32
cdew_info:
.Lcdew:
	movl 4(%ebp),%eax
	movl %esi,%ecx
	jmp .Lcdex
.LcdeB:
	jmp *-16(%ebx)
.LcdeG:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.LcdeK:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.LcdeN:
	movl $20,904(%ebx)
	movl $cdew_info,(%ebp)
	movl %ecx,%esi
	jmp stg_gc_unpt_r1
.section .rodata
	.align 4
.align 1
cdfE_str:
	.byte	98
	.byte	97
	.byte	99
	.byte	107
	.byte	103
	.byte	114
	.byte	111
	.byte	117
	.byte	110
	.byte	100
	.byte	67
	.byte	111
	.byte	108
	.byte	111
	.byte	114
	.byte	0
.section .rodata
	.align 4
.align 1
cdfT_str:
	.byte	114
	.byte	103
	.byte	98
	.byte	40
	.byte	50
	.byte	50
	.byte	57
	.byte	44
	.byte	49
	.byte	55
	.byte	50
	.byte	44
	.byte	49
	.byte	56
	.byte	50
	.byte	41
	.byte	0
.section .rodata
	.align 4
.align 1
cdgk_str:
	.byte	116
	.byte	101
	.byte	120
	.byte	116
	.byte	65
	.byte	108
	.byte	105
	.byte	103
	.byte	110
	.byte	0
.section .rodata
	.align 4
.align 1
cdgz_str:
	.byte	99
	.byte	101
	.byte	110
	.byte	116
	.byte	101
	.byte	114
	.byte	0
.section .rodata
	.align 4
.align 1
cdh0_str:
	.byte	102
	.byte	111
	.byte	110
	.byte	116
	.byte	83
	.byte	105
	.byte	122
	.byte	101
	.byte	0
.section .rodata
	.align 4
.align 1
cdhf_str:
	.byte	49
	.byte	52
	.byte	112
	.byte	116
	.byte	0
.text
	.align 4,0x90
	.long	Sczg_srt-(scyd_info)+40
	.long	131077
	.long	3
	.long	33619977
scyd_info:
.Lcdiz:
	leal -12(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .LcdiA
.LcdiB:
	movl $cdix_info,-12(%ebp)
	movl 2(%esi),%eax
	movl %eax,16(%ebx)
	movl 6(%esi),%eax
	movl %eax,8(%ebx)
	movl %eax,-8(%ebp)
	movl 10(%esi),%eax
	movl %eax,-4(%ebp)
	addl $-12,%ebp
	jmp Main_saveExpr1_info
.text
	.align 4,0x90
	.long	Sczg_srt-(cdix_info)+76
	.long	2
	.long	65568
cdix_info:
.Lcdix:
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl 4(%ebp),%eax
	movl %eax,8(%ebx)
	addl $12,%ebp
	jmp Main_readAndDraw1_info
.LcdiA:
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp *-8(%ebx)
.text
	.align 4,0x90
	.long	Sczg_srt-(scyx_info)+40
	.long	131077
	.long	3
	.long	33619977
scyx_info:
.LcdiM:
	movl 8(%ebx),%eax
	leal -28(%ebp),%ecx
	cmpl 840(%ebx),%ecx
	jb .LcdiN
.LcdiO:
	movl $cdiK_info,-16(%ebp)
	movl 2(%esi),%ecx
	movl 6(%esi),%edx
	movl %ecx,64(%esp)
	movl 10(%esi),%ecx
	movl %eax,%esi
	movl 64(%esp),%eax
	movl %eax,-12(%ebp)
	movl %edx,-8(%ebp)
	movl %ecx,-4(%ebp)
	addl $-16,%ebp
	jmp stg_ap_0_fast
.text
	.align 4,0x90
	.long	Sczg_srt-(cdiK_info)+40
	.long	3
	.long	33620000
cdiK_info:
.LcdiK:
	cmpl $13,19(%esi)
	jne .LcdiU
.LcdiY:
	movl $cdiX_info,-12(%ebp)
	movl 7(%esi),%eax
	movl 11(%esi),%ecx
	movl 15(%esi),%edx
	movl 3(%esi),%esi
	movl %ecx,-8(%ebp)
	movl %edx,-4(%ebp)
	movl %eax,(%ebp)
	addl $-12,%ebp
	testw $7,%si
	jne .LcdiX
.LcdiZ:
	jmp *(%esi)
.LcdiN:
	movl %eax,8(%ebx)
	jmp *-8(%ebx)
.Ludk5:
	addl $8,%ebp
.LcdiU:
	movl $ghczmprim_GHCziTuple_Z0T_closure+1,%esi
	addl $16,%ebp
	jmp *(%ebp)
.Ludk4:
	addl $12,%ebp
	jmp .LcdiU
.Ludk3:
	addl $12,%ebp
	jmp .LcdiU
.text
	.align 4,0x90
	.long	Sczg_srt-(cdiX_info)+40
	.long	6
	.long	33620000
cdiX_info:
.LcdiX:
	movl %esi,%eax
	andl $7,%eax
	cmpl $2,%eax
	jae .Ludk3
.Lcdk2:
	movl $cdj3_info,(%ebp)
	movl 12(%ebp),%esi
	testw $7,%si
	jne .Lcdj3
.Lcdj7:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	Sczg_srt-(cdj3_info)+40
	.long	262
	.long	33620000
cdj3_info:
.Lcdj3:
	movl %esi,%eax
	andl $7,%eax
	cmpl $2,%eax
	jae .Ludk4
.LcdjU:
	movl 4(%ebp),%eax
	movl $cdjb_info,4(%ebp)
	movl %eax,%esi
	addl $4,%ebp
	testw $7,%si
	jne .Lcdjb
.Lcdjf:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	Sczg_srt-(cdjb_info)+40
	.long	133
	.long	33620000
cdjb_info:
.Lcdjb:
	movl %esi,%eax
	andl $7,%eax
	cmpl $2,%eax
	jae .Ludk5
.LcdjM:
	movl $cdjj_info,8(%ebp)
	movl 4(%ebp),%esi
	addl $8,%ebp
	testw $7,%si
	jne .Lcdjj
.Lcdjn:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	Sczg_srt-(cdjj_info)+40
	.long	3
	.long	33620000
cdjj_info:
.Lcdjj:
	movl %esi,%eax
	andl $7,%eax
	cmpl $2,%eax
	jae .LcdiU
.LcdjE:
	movl 4(%ebp),%eax
	movl $cdjr_info,4(%ebp)
	movl %eax,16(%ebx)
	movl 8(%ebp),%eax
	movl %eax,8(%ebx)
	addl $4,%ebp
	jmp Main_saveExpr1_info
.text
	.align 4,0x90
	.long	Sczg_srt-(cdjr_info)+76
	.long	2
	.long	65568
cdjr_info:
.Lcdjr:
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl 4(%ebp),%eax
	movl %eax,8(%ebx)
	addl $12,%ebp
	jmp Main_readAndDraw1_info
.text
	.align 4,0x90
	.long	Sczg_srt-(scyD_info)+72
	.long	131077
	.long	3
	.long	65545
scyD_info:
.Lcdkd:
	movl 10(%esi),%eax
	movl %eax,24(%ebx)
	movl 2(%esi),%eax
	movl %eax,16(%ebx)
	movl 6(%esi),%eax
	movl %eax,8(%ebx)
	jmp Main_showAndDrawDiff1_info
.text
	.align 4,0x90
	.long	Sczg_srt-(scyT_info)+104
	.long	1
	.long	458769
scyT_info:
.LcdkM:
	leal -8(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .LcdkN
.LcdkO:
	movl $cdkK_info,-4(%ebp)
	movl 12(%esi),%eax
	movl %eax,16(%ebx)
	movl $rc5C_closure,8(%ebx)
	addl $-4,%ebp
	jmp base_TextziParserCombinatorsziReadP_run_info
.text
	.align 4,0x90
	.long	Sczg_srt-(cdkK_info)+104
	.long	0
	.long	196640
cdkK_info:
.LcdkK:
	movl $cdkR_info,(%ebp)
	movl %esi,8(%ebx)
	jmp base_TextziRead_readEither6_info
.LcdkN:
	jmp *-16(%ebx)
.text
	.align 4,0x90
	.long	Sczg_srt-(cdkR_info)+104
	.long	0
	.long	196640
cdkR_info:
.LcdkR:
	movl %esi,%eax
	andl $7,%eax
	cmpl $2,%eax
	jae .Lcdll
.Lcdlm:
	movl $rc5A_closure,%esi
	addl $4,%ebp
	jmp *(%esi)
.text
	.align 4,0x90
	.long	Sczg_srt-(cdl1_info)+108
	.long	1
	.long	65568
cdl1_info:
.Lcdl1:
	movl %esi,%eax
	andl $7,%eax
	cmpl $2,%eax
	jae .Lcdlh
.Lcdli:
	movl 4(%ebp),%esi
	andl $-8,%esi
	addl $8,%ebp
	jmp *(%esi)
.Lcdll:
	movl $cdl1_info,-4(%ebp)
	movl 2(%esi),%eax
	movl 6(%esi),%esi
	movl %eax,(%ebp)
	addl $-4,%ebp
	testw $7,%si
	jne .Lcdl1
.Lcdl4:
	jmp *(%esi)
.Lcdlh:
	movl $rc5B_closure,%esi
	addl $8,%ebp
	jmp *(%esi)
.section .data
	.align 4
.align 1
udoz_srtd:
	.long	Sczg_srt+20
	.long	24
	.long	14681107
.text
	.align 4,0x90
	.long	udoz_srtd-(scyU_info)+0
	.long	131077
	.long	3
	.long	-65527
scyU_info:
.Lcdln:
	leal -16(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .Lcdlo
.Lcdlp:
	movl $cdkE_info,-12(%ebp)
	movl $Main_readAndDraw4_closure,32(%ebx)
	movl 2(%esi),%eax
	movl %eax,24(%ebx)
	movl $LlHybR7LOSS7VAc0pG6N16_ControlziMonadziIOziClass_zdfMonadIOIO_closure,16(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_zdfIsElemElem_closure,8(%ebx)
	movl $stg_ap_v_info,-16(%ebp)
	movl 6(%esi),%eax
	movl %eax,-8(%ebp)
	movl 10(%esi),%eax
	movl %eax,-4(%ebp)
	addl $-16,%ebp
	jmp FxthDgO5vhFC0dVxe1OwkF_HasteziDOM_getProp_info
.text
	.align 4,0x90
	.long	Sczg_srt-(cdkE_info)+60
	.long	2
	.long	939589664
cdkE_info:
.LcdkE:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja .Lcdls
.Lcdlr:
	movl $scyT_info,-12(%edi)
	movl %esi,(%edi)
	leal -12(%edi),%eax
	movl %eax,24(%ebx)
	movl 8(%ebp),%eax
	movl %eax,16(%ebx)
	movl 4(%ebp),%eax
	movl %eax,8(%ebx)
	addl $12,%ebp
	jmp Main_zzoom1_info
.Lcdlo:
	movl 8(%ebx),%eax
	movl %eax,8(%ebx)
	jmp *-8(%ebx)
.Lcdls:
	movl $16,904(%ebx)
	jmp stg_gc_unpt_r1
.text
	.align 4,0x90
	.long	Sczg_srt-(scz0_info)+60
	.long	131077
	.long	2
	.long	65548
scz0_info:
.LcdlA:
	movl $Main_readAndDraw2_closure+1,24(%ebx)
	movl 6(%esi),%eax
	movl %eax,16(%ebx)
	movl 2(%esi),%eax
	movl %eax,8(%ebx)
	jmp Main_zzoom1_info
.text
	.align 4,0x90
	.long	Sczg_srt-(scz6_info)+60
	.long	131077
	.long	2
	.long	65548
scz6_info:
.LcdlK:
	movl $Main_readAndDraw2_closure+1,24(%ebx)
	movl 6(%esi),%eax
	movl %eax,16(%ebx)
	movl 2(%esi),%eax
	movl %eax,8(%ebx)
	jmp Main_zzoom1_info
.section .data
	.align 4
.align 1
udoA_srtd:
	.long	Sczg_srt+20
	.long	51
	.long	-1547213
	.long	524287
.section .data
	.align 4
.align 1
udoB_srtd:
	.long	Sczg_srt+20
	.long	50
	.long	-1547213
	.long	262143
.section .data
	.align 4
.align 1
udoC_srtd:
	.long	Sczg_srt+20
	.long	49
	.long	-1547213
	.long	131071
.section .data
	.align 4
.align 1
udoD_srtd:
	.long	Sczg_srt+20
	.long	48
	.long	-1547213
	.long	65535
.section .data
	.align 4
.align 1
udoE_srtd:
	.long	Sczg_srt+20
	.long	48
	.long	-1547213
	.long	65535
.section .data
	.align 4
.align 1
udoF_srtd:
	.long	Sczg_srt+20
	.long	48
	.long	-1547213
	.long	65535
.section .data
	.align 4
.align 1
udoG_srtd:
	.long	Sczg_srt+20
	.long	47
	.long	-1547213
	.long	32767
.section .data
	.align 4
.align 1
udoH_srtd:
	.long	Sczg_srt+20
	.long	46
	.long	-35101645
	.long	16383
.section .data
	.align 4
.align 1
udoI_srtd:
	.long	Sczg_srt+20
	.long	45
	.long	2112382003
	.long	8191
.section .data
	.align 4
.align 1
udoJ_srtd:
	.long	Sczg_srt+20
	.long	44
	.long	2112382003
	.long	4095
.section .data
	.align 4
.align 1
udoK_srtd:
	.long	Sczg_srt+20
	.long	43
	.long	2112382003
	.long	2047
.section .data
	.align 4
.align 1
udoL_srtd:
	.long	Sczg_srt+20
	.long	43
	.long	2112382003
	.long	2047
.section .data
	.align 4
.align 1
udoM_srtd:
	.long	Sczg_srt+20
	.long	42
	.long	2111857715
	.long	1023
.section .data
	.align 4
.align 1
udoN_srtd:
	.long	Sczg_srt+20
	.long	41
	.long	1709204531
	.long	511
.section .data
	.align 4
.align 1
udoO_srtd:
	.long	Sczg_srt+20
	.long	41
	.long	1709204531
	.long	511
.section .data
	.align 4
.align 1
udoP_srtd:
	.long	Sczg_srt+20
	.long	41
	.long	1709204531
	.long	511
.section .data
	.align 4
.align 1
udoQ_srtd:
	.long	Sczg_srt+20
	.long	41
	.long	1709204531
	.long	511
.section .data
	.align 4
.align 1
udoR_srtd:
	.long	Sczg_srt+20
	.long	41
	.long	1709204531
	.long	511
.section .data
	.align 4
.align 1
udoS_srtd:
	.long	Sczg_srt+20
	.long	41
	.long	1709204531
	.long	511
.section .data
	.align 4
.align 1
udoT_srtd:
	.long	Sczg_srt+20
	.long	41
	.long	1709204531
	.long	511
.section .data
	.align 4
.align 1
udoU_srtd:
	.long	Sczg_srt+20
	.long	41
	.long	1642095667
	.long	511
.section .data
	.align 4
.align 1
udoV_srtd:
	.long	Sczg_srt+20
	.long	41
	.long	1642095667
	.long	511
.section .data
	.align 4
.align 1
udoW_srtd:
	.long	Sczg_srt+20
	.long	41
	.long	1105224755
	.long	511
.section .data
	.align 4
.align 1
udoX_srtd:
	.long	Sczg_srt+20
	.long	41
	.long	1105224755
	.long	511
.section .data
	.align 4
.align 1
udoY_srtd:
	.long	Sczg_srt+20
	.long	41
	.long	31482931
	.long	511
.section .data
	.align 4
.align 1
udoZ_srtd:
	.long	Sczg_srt+20
	.long	41
	.long	31482931
	.long	507
.section .data
	.align 4
.align 1
udp0_srtd:
	.long	Sczg_srt+20
	.long	41
	.long	31482931
	.long	507
.section .data
	.align 4
.align 1
udp1_srtd:
	.long	Sczg_srt+20
	.long	41
	.long	31482931
	.long	507
.section .data
	.align 4
.align 1
udp2_srtd:
	.long	Sczg_srt+20
	.long	41
	.long	31482931
	.long	507
.section .data
	.align 4
.align 1
udp3_srtd:
	.long	Sczg_srt+20
	.long	41
	.long	31482931
	.long	507
.section .data
	.align 4
.align 1
udp4_srtd:
	.long	Sczg_srt+20
	.long	41
	.long	31482931
	.long	506
.section .data
	.align 4
.align 1
udp5_srtd:
	.long	Sczg_srt+20
	.long	41
	.long	31482931
	.long	506
.section .data
	.align 4
.align 1
udp6_srtd:
	.long	Sczg_srt+20
	.long	41
	.long	31482931
	.long	506
.section .data
	.align 4
.align 1
udp7_srtd:
	.long	Sczg_srt+20
	.long	41
	.long	31482931
	.long	506
.section .data
	.align 4
.align 1
udp8_srtd:
	.long	Sczg_srt+20
	.long	41
	.long	31482931
	.long	506
.section .data
	.align 4
.align 1
udp9_srtd:
	.long	Sczg_srt+20
	.long	41
	.long	31482931
	.long	506
.section .data
	.align 4
.align 1
udpa_srtd:
	.long	Sczg_srt+20
	.long	41
	.long	31482931
	.long	506
.section .data
	.align 4
.align 1
udpb_srtd:
	.long	Sczg_srt+20
	.long	41
	.long	31482931
	.long	506
.section .data
	.align 4
.align 1
udpc_srtd:
	.long	Sczg_srt+20
	.long	41
	.long	31482931
	.long	506
.section .data
	.align 4
.align 1
udpd_srtd:
	.long	Sczg_srt+20
	.long	41
	.long	31482931
	.long	506
.section .data
	.align 4
.align 1
udpe_srtd:
	.long	Sczg_srt+20
	.long	41
	.long	31482931
	.long	506
.section .data
	.align 4
.align 1
udpf_srtd:
	.long	Sczg_srt+20
	.long	41
	.long	31482931
	.long	506
.section .data
	.align 4
.align 1
udpg_srtd:
	.long	Sczg_srt+20
	.long	41
	.long	31482931
	.long	506
.section .data
	.align 4
.align 1
udph_srtd:
	.long	Sczg_srt+20
	.long	41
	.long	31482931
	.long	504
.section .data
	.align 4
.align 1
udpi_srtd:
	.long	Sczg_srt+20
	.long	41
	.long	31482931
	.long	504
.section .data
	.align 4
.align 1
udpj_srtd:
	.long	Sczg_srt+20
	.long	41
	.long	14705715
	.long	504
.section .data
	.align 4
.align 1
udpk_srtd:
	.long	Sczg_srt+20
	.long	41
	.long	14705715
	.long	504
.section .data
	.align 4
.align 1
udpl_srtd:
	.long	Sczg_srt+20
	.long	41
	.long	14705715
	.long	504
.section .data
	.align 4
.align 1
udpm_srtd:
	.long	Sczg_srt+20
	.long	41
	.long	14705715
	.long	376
.section .data
	.align 4
.align 1
udpn_srtd:
	.long	Sczg_srt+20
	.long	41
	.long	14705715
	.long	376
.section .data
	.align 4
.align 1
udpo_srtd:
	.long	Sczg_srt+20
	.long	38
	.long	14705715
	.long	56
.section .data
	.align 4
.align 1
udpp_srtd:
	.long	Sczg_srt+20
	.long	38
	.long	14705715
	.long	56
.section .data
	.align 4
.align 1
udpq_srtd:
	.long	Sczg_srt+20
	.long	38
	.long	14705715
	.long	56
.section .data
	.align 4
.align 1
udpr_srtd:
	.long	Sczg_srt+20
	.long	38
	.long	14689299
	.long	56
.section .data
	.align 4
.align 1
udps_srtd:
	.long	Sczg_srt+20
	.long	38
	.long	14681107
	.long	56
.section .data
	.align 4
.align 1
udpt_srtd:
	.long	Sczg_srt+60
	.long	28
	.long	234881025
.section .data
	.align 4
.align 1
udpu_srtd:
	.long	Sczg_srt+60
	.long	28
	.long	234881025
.section .data
	.align 4
.align 1
udpv_srtd:
	.long	Sczg_srt+20
	.long	53
	.long	-1547213
	.long	2097151
.text
	.align 4,0x90
	.long	udpv_srtd-(Main_main1_info)+0
	.long	65539
	.long	0
	.long	-65521
.globl Main_main1_info
Main_main1_info:
.LcdlN:
	leal -64(%ebp),%eax
	cmpl 840(%ebx),%eax
	jb .LcdlO
.LcdlP:
	movl $cddF_info,-4(%ebp)
	movl $Main_canHeight_closure+1,16(%ebx)
	movl $Main_canHeight_closure+1,8(%ebx)
	movl $stg_ap_v_info,-8(%ebp)
	addl $-8,%ebp
	jmp Pages_mkCanvas_info
.text
	.align 4,0x90
	.long	udoA_srtd-(cddF_info)+0
	.long	0
	.long	-65504
cddF_info:
.LcddF:
	movl $cddH_info,-4(%ebp)
	movl $rc63_closure+2,32(%ebx)
	movl $Pages_mkHTML2_closure+1,24(%ebx)
	movl $LlHybR7LOSS7VAc0pG6N16_ControlziMonadziIOziClass_zdfMonadIOIO_closure,16(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_zdfIsElemElem_closure,8(%ebx)
	movl $stg_ap_v_info,-8(%ebp)
	movl %esi,(%ebp)
	addl $-8,%ebp
	jmp FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_with_info
.text
	.align 4,0x90
	.long	udoB_srtd-(cddH_info)+0
	.long	1
	.long	-65504
cddH_info:
.LcddH:
	movl $cddJ_info,-4(%ebp)
	movl $rc61_closure,16(%ebx)
	movl $rc5T_closure+1,8(%ebx)
	movl $stg_ap_v_info,-8(%ebp)
	movl %esi,(%ebp)
	addl $-8,%ebp
	jmp Pages_mkInput_info
.text
	.align 4,0x90
	.long	udoC_srtd-(cddJ_info)+0
	.long	2
	.long	-65504
cddJ_info:
.LcddJ:
	movl $cddL_info,-4(%ebp)
	movl $rc60_closure+2,32(%ebx)
	movl $Pages_mkButton2_closure+1,24(%ebx)
	movl $LlHybR7LOSS7VAc0pG6N16_ControlziMonadziIOziClass_zdfMonadIOIO_closure,16(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_zdfIsElemElem_closure,8(%ebx)
	movl $stg_ap_v_info,-8(%ebp)
	movl %esi,(%ebp)
	addl $-8,%ebp
	jmp FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_with_info
.text
	.align 4,0x90
	.long	udoD_srtd-(cddL_info)+0
	.long	3
	.long	-65504
cddL_info:
.LcddL:
	movl $cddN_info,-4(%ebp)
	movl $rc5Y_closure+2,32(%ebx)
	movl $Pages_mkHTML2_closure+1,24(%ebx)
	movl $LlHybR7LOSS7VAc0pG6N16_ControlziMonadziIOziClass_zdfMonadIOIO_closure,16(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_zdfIsElemElem_closure,8(%ebx)
	movl $stg_ap_v_info,-8(%ebp)
	movl %esi,(%ebp)
	addl $-8,%ebp
	jmp FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_with_info
.text
	.align 4,0x90
	.long	udoE_srtd-(cddN_info)+0
	.long	4
	.long	-65504
cddN_info:
.LcddN:
	movl $cddP_info,-4(%ebp)
	movl $rc5Y_closure+2,32(%ebx)
	movl $Pages_mkHTML2_closure+1,24(%ebx)
	movl $LlHybR7LOSS7VAc0pG6N16_ControlziMonadziIOziClass_zdfMonadIOIO_closure,16(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_zdfIsElemElem_closure,8(%ebx)
	movl $stg_ap_v_info,-8(%ebp)
	movl %esi,(%ebp)
	addl $-8,%ebp
	jmp FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_with_info
.text
	.align 4,0x90
	.long	udoF_srtd-(cddP_info)+0
	.long	5
	.long	-65504
cddP_info:
.LcddP:
	movl $cddR_info,-4(%ebp)
	movl $rc5Y_closure+2,32(%ebx)
	movl $Pages_mkHTML2_closure+1,24(%ebx)
	movl $LlHybR7LOSS7VAc0pG6N16_ControlziMonadziIOziClass_zdfMonadIOIO_closure,16(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_zdfIsElemElem_closure,8(%ebx)
	movl $stg_ap_v_info,-8(%ebp)
	movl %esi,(%ebp)
	addl $-8,%ebp
	jmp FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_with_info
.text
	.align 4,0x90
	.long	udoG_srtd-(cddR_info)+0
	.long	6
	.long	-65504
cddR_info:
.LcddR:
	movl $cddT_info,-4(%ebp)
	movl $rc5W_closure+2,32(%ebx)
	movl $Pages_mkHTML2_closure+1,24(%ebx)
	movl $LlHybR7LOSS7VAc0pG6N16_ControlziMonadziIOziClass_zdfMonadIOIO_closure,16(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_zdfIsElemElem_closure,8(%ebx)
	movl $stg_ap_v_info,-8(%ebp)
	movl %esi,(%ebp)
	addl $-8,%ebp
	jmp FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_with_info
.text
	.align 4,0x90
	.long	udoH_srtd-(cddT_info)+0
	.long	7
	.long	-65504
cddT_info:
.LcddT:
	movl $cddV_info,-4(%ebp)
	movl $rc5U_closure,16(%ebx)
	movl $rc5T_closure+1,8(%ebx)
	movl $stg_ap_v_info,-8(%ebp)
	movl %esi,(%ebp)
	addl $-8,%ebp
	jmp Pages_mkInput_info
.text
	.align 4,0x90
	.long	udoI_srtd-(cddV_info)+0
	.long	8
	.long	-65504
cddV_info:
.LcddV:
	movl $cddX_info,-4(%ebp)
	movl $rc5S_closure+2,32(%ebx)
	movl $Pages_mkButton2_closure+1,24(%ebx)
	movl $LlHybR7LOSS7VAc0pG6N16_ControlziMonadziIOziClass_zdfMonadIOIO_closure,16(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_zdfIsElemElem_closure,8(%ebx)
	movl $stg_ap_v_info,-8(%ebp)
	movl %esi,(%ebp)
	addl $-8,%ebp
	jmp FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_with_info
.text
	.align 4,0x90
	.long	udoJ_srtd-(cddX_info)+0
	.long	9
	.long	-65504
cddX_info:
.LcddX:
	movl $cddZ_info,-4(%ebp)
	movl $rc5Q_closure+2,32(%ebx)
	movl $Pages_mkButton2_closure+1,24(%ebx)
	movl $LlHybR7LOSS7VAc0pG6N16_ControlziMonadziIOziClass_zdfMonadIOIO_closure,16(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_zdfIsElemElem_closure,8(%ebx)
	movl $stg_ap_v_info,-8(%ebp)
	movl %esi,(%ebp)
	addl $-8,%ebp
	jmp FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_with_info
.text
	.align 4,0x90
	.long	udoK_srtd-(cddZ_info)+0
	.long	10
	.long	-65504
cddZ_info:
.LcddZ:
	movl $cde1_info,-4(%ebp)
	movl $Main_readAndDraw4_closure,32(%ebx)
	movl 32(%ebp),%eax
	movl %eax,24(%ebx)
	movl $LlHybR7LOSS7VAc0pG6N16_ControlziMonadziIOziClass_zdfMonadIOIO_closure,16(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_zdfIsElemElem_closure,8(%ebx)
	movl $stg_ap_v_info,-8(%ebp)
	movl %esi,(%ebp)
	addl $-8,%ebp
	jmp FxthDgO5vhFC0dVxe1OwkF_HasteziDOM_getProp_info
.text
	.align 4,0x90
	.long	udoL_srtd-(cde1_info)+0
	.long	11
	.long	-65504
cde1_info:
.Lcde1:
	addl $40,%edi
	cmpl 856(%ebx),%edi
	ja .Lcdm3
.Lcdm2:
	movl $scvZ_info,-36(%edi)
	movl %esi,-24(%edi)
	movl $ghczmprim_GHCziTypes_ZC_con_info,-20(%edi)
	leal -36(%edi),%eax
	movl %eax,-16(%edi)
	movl $ghczmprim_GHCziTypes_ZMZN_closure+1,-12(%edi)
	movl $ghczmprim_GHCziTypes_ZC_con_info,-8(%edi)
	movl $rc5O_closure,-4(%edi)
	leal -18(%edi),%eax
	movl %eax,(%edi)
	movl $cdeQ_info,(%ebp)
	leal -6(%edi),%eax
	movl %eax,32(%ebx)
	movl $rc5N_closure+1,24(%ebx)
	movl $LlHybR7LOSS7VAc0pG6N16_ControlziMonadziIOziClass_zdfMonadIOIO_closure,16(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_zdfIsElemElem_closure,8(%ebx)
	movl $stg_ap_v_info,-4(%ebp)
	addl $-4,%ebp
	jmp FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_with_info
.text
	.align 4,0x90
	.long	udoM_srtd-(cdeQ_info)+0
	.long	11
	.long	-65504
cdeQ_info:
.LcdeQ:
	movl $cdeS_info,-4(%ebp)
	movl $rc5M_closure+2,32(%ebx)
	movl $Pages_mkButton2_closure+1,24(%ebx)
	movl $LlHybR7LOSS7VAc0pG6N16_ControlziMonadziIOziClass_zdfMonadIOIO_closure,16(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_zdfIsElemElem_closure,8(%ebx)
	movl $stg_ap_v_info,-8(%ebp)
	movl %esi,(%ebp)
	addl $-8,%ebp
	jmp FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_with_info
.text
	.align 4,0x90
	.long	udoN_srtd-(cdeS_info)+0
	.long	12
	.long	-65504
cdeS_info:
.LcdeS:
	movl $cdeU_info,-4(%ebp)
	movl %esi,(%ebp)
	addl $-4,%ebp
	jmp Pages_mkDiv1_info
.text
	.align 4,0x90
	.long	udoO_srtd-(cdeU_info)+0
	.long	13
	.long	-65504
cdeU_info:
.LcdeU:
	movl $cdeW_info,-4(%ebp)
	movl %esi,(%ebp)
	addl $-4,%ebp
	jmp Pages_mkDiv1_info
.text
	.align 4,0x90
	.long	udoP_srtd-(cdeW_info)+0
	.long	14
	.long	-65504
cdeW_info:
.LcdeW:
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja .Lcdm9
.Lcdm8:
	movl $ghczmprim_GHCziTypes_ZC_con_info,-20(%edi)
	movl 48(%ebp),%eax
	movl %eax,-16(%edi)
	movl $ghczmprim_GHCziTypes_ZMZN_closure+1,-12(%edi)
	movl $ghczmprim_GHCziTypes_ZC_con_info,-8(%edi)
	movl 52(%ebp),%eax
	movl %eax,-4(%edi)
	leal -18(%edi),%eax
	movl %eax,(%edi)
	movl $cdf0_info,(%ebp)
	leal -6(%edi),%eax
	movl %eax,16(%ebx)
	movl 4(%ebp),%eax
	movl %eax,8(%ebx)
	movl %esi,52(%ebp)
	jmp Pages_appendChildren1_info
.text
	.align 4,0x90
	.long	udoQ_srtd-(cdf0_info)+0
	.long	14
	.long	-65504
cdf0_info:
.Lcdf0:
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja .Lcdmc
.Lcdmb:
	movl $ghczmprim_GHCziTypes_ZC_con_info,-20(%edi)
	movl 24(%ebp),%eax
	movl %eax,-16(%edi)
	movl $ghczmprim_GHCziTypes_ZMZN_closure+1,-12(%edi)
	movl $ghczmprim_GHCziTypes_ZC_con_info,-8(%edi)
	movl 28(%ebp),%eax
	movl %eax,-4(%edi)
	leal -18(%edi),%eax
	movl %eax,(%edi)
	movl $cdf4_info,(%ebp)
	leal -6(%edi),%eax
	movl %eax,16(%ebx)
	movl 52(%ebp),%eax
	movl %eax,8(%ebx)
	jmp Pages_appendChildren1_info
.text
	.align 4,0x90
	.long	udoR_srtd-(cdf4_info)+0
	.long	4110
	.long	-65504
cdf4_info:
.Lcdf4:
	movl $cdf6_info,(%ebp)
	jmp Pages_mkDiv1_info
.text
	.align 4,0x90
	.long	udoS_srtd-(cdf6_info)+0
	.long	4110
	.long	-65504
cdf6_info:
.Lcdf6:
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja .Lcdmg
.Lcdmf:
	movl $ghczmprim_GHCziTypes_ZC_con_info,-20(%edi)
	movl 8(%ebp),%eax
	movl %eax,-16(%edi)
	movl $ghczmprim_GHCziTypes_ZMZN_closure+1,-12(%edi)
	movl $ghczmprim_GHCziTypes_ZC_con_info,-8(%edi)
	movl 44(%ebp),%eax
	movl %eax,-4(%edi)
	leal -18(%edi),%eax
	movl %eax,(%edi)
	movl $cdfa_info,(%ebp)
	leal -6(%edi),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	movl %esi,28(%ebp)
	jmp Pages_appendChildren1_info
.text
	.align 4,0x90
	.long	udoT_srtd-(cdfa_info)+0
	.long	14
	.long	-65504
cdfa_info:
.Lcdfa:
	movl $cdfc_info,(%ebp)
	jmp Pages_mkDiv1_info
.text
	.align 4,0x90
	.long	udoU_srtd-(cdfc_info)+0
	.long	14
	.long	-65504
cdfc_info:
.Lcdfc:
	addl $24,%edi
	cmpl 856(%ebx),%edi
	ja .Lcdmk
.Lcdmj:
	movl $ghczmprim_GHCziTypes_ZC_con_info,-20(%edi)
	movl 16(%ebp),%eax
	movl %eax,-16(%edi)
	movl $ghczmprim_GHCziTypes_ZMZN_closure+1,-12(%edi)
	movl $ghczmprim_GHCziTypes_ZC_con_info,-8(%edi)
	movl 20(%ebp),%eax
	movl %eax,-4(%edi)
	leal -18(%edi),%eax
	movl %eax,(%edi)
	movl $cdfg_info,-4(%ebp)
	leal -6(%edi),%eax
	movl %eax,16(%ebx)
	movl %esi,8(%ebx)
	movl %esi,(%ebp)
	addl $-4,%ebp
	jmp Pages_appendChildren1_info
.text
	.align 4,0x90
	.long	udoV_srtd-(cdfg_info)+0
	.long	15
	.long	-65504
cdfg_info:
.Lcdfg:
	addl $108,%edi
	cmpl 856(%ebx),%edi
	ja .Lcdmn
.Lcdmm:
	movl $ghczmprim_GHCziTypes_ZC_con_info,-104(%edi)
	movl 16(%ebp),%eax
	movl %eax,-100(%edi)
	movl $ghczmprim_GHCziTypes_ZMZN_closure+1,-96(%edi)
	movl $ghczmprim_GHCziTypes_ZC_con_info,-92(%edi)
	movl 4(%ebp),%eax
	movl %eax,-88(%edi)
	leal -102(%edi),%eax
	movl %eax,-84(%edi)
	movl $ghczmprim_GHCziTypes_ZC_con_info,-80(%edi)
	movl 36(%ebp),%eax
	movl %eax,-76(%edi)
	leal -90(%edi),%eax
	movl %eax,-72(%edi)
	movl $ghczmprim_GHCziTypes_ZC_con_info,-68(%edi)
	movl 56(%ebp),%eax
	movl %eax,-64(%edi)
	leal -78(%edi),%eax
	movl %eax,-60(%edi)
	movl $ghczmprim_GHCziTypes_ZC_con_info,-56(%edi)
	movl 40(%ebp),%eax
	movl %eax,-52(%edi)
	leal -66(%edi),%eax
	movl %eax,-48(%edi)
	movl $ghczmprim_GHCziTypes_ZC_con_info,-44(%edi)
	movl 32(%ebp),%eax
	movl %eax,-40(%edi)
	leal -54(%edi),%eax
	movl %eax,-36(%edi)
	movl $ghczmprim_GHCziTypes_ZC_con_info,-32(%edi)
	movl 44(%ebp),%eax
	movl %eax,-28(%edi)
	leal -42(%edi),%eax
	movl %eax,-24(%edi)
	movl $ghczmprim_GHCziTypes_ZC_con_info,-20(%edi)
	movl 8(%ebp),%eax
	movl %eax,-16(%edi)
	leal -30(%edi),%eax
	movl %eax,-12(%edi)
	movl $ghczmprim_GHCziTypes_ZC_con_info,-8(%edi)
	movl 60(%ebp),%eax
	movl %eax,-4(%edi)
	leal -18(%edi),%eax
	movl %eax,(%edi)
	movl $cdfr_info,8(%ebp)
	leal -6(%edi),%eax
	movl %eax,8(%ebx)
	addl $8,%ebp
	jmp Pages_columnzugo_info
.text
	.align 4,0x90
	.long	udoW_srtd-(cdfr_info)+0
	.long	161805
	.long	-65504
cdfr_info:
.Lcdfr:
	movl $cdfv_info,(%ebp)
	movl %esi,8(%ebx)
	jmp Pages_column2_info
.text
	.align 4,0x90
	.long	udoX_srtd-(cdfv_info)+0
	.long	161805
	.long	-65504
cdfv_info:
.Lcdfv:
	movl $cdfx_info,(%ebp)
	movl %esi,16(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_documentBody1_closure,8(%ebx)
	jmp Pages_appendChildren1_info
.text
	.align 4,0x90
	.long	udoY_srtd-(cdfx_info)+0
	.long	161805
	.long	-65504
cdfx_info:
.Lcdfx:
	movl $cdfz_info,(%ebp)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_documentBody1_closure,%esi
	testw $7,%si
	jne .Lcdfz
.LcdfA:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	udoZ_srtd-(cdfz_info)+0
	.long	161805
	.long	-65504
cdfz_info:
.Lcdfz:
	movl $cdfF_info,(%ebp)
	movl $cdfE_str,8(%ebx)
	movl 3(%esi),%eax
	movl %eax,48(%ebp)
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.text
	.align 4,0x90
	.long	udp0_srtd-(cdfF_info)+0
	.long	161805
	.long	-65504
cdfF_info:
.LcdfF:
	movl $cdfJ_info,(%ebp)
	jmp toJSStr
.text
	.align 4,0x90
	.long	udp1_srtd-(cdfJ_info)+0
	.long	161805
	.long	-65504
cdfJ_info:
.LcdfJ:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .Lcdmv
.Lcdmu:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl $cdfU_info,(%ebp)
	movl $cdfT_str,8(%ebx)
	movl (%edi),%eax
	movl %eax,36(%ebp)
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.text
	.align 4,0x90
	.long	udp2_srtd-(cdfU_info)+0
	.long	161805
	.long	-65504
cdfU_info:
.LcdfU:
	movl $cdfY_info,(%ebp)
	jmp toJSStr
.text
	.align 4,0x90
	.long	udp3_srtd-(cdfY_info)+0
	.long	161805
	.long	-65504
cdfY_info:
.LcdfY:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .LcdmA
.Lcdmz:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl $cdg8_info,(%ebp)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_jsSetStylezuf1_closure,%esi
	movl (%edi),%eax
	movl %eax,32(%ebp)
	testw $7,%si
	jne .Lcdg8
.Lcdg9:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	udp4_srtd-(cdg8_info)+0
	.long	161805
	.long	-65504
cdg8_info:
.Lcdg8:
	movl $cdgi_info,(%ebp)
	movl 3(%esi),%eax
	movl 36(%ebp),%ecx
	movl %eax,36(%ebp)
	movl 48(%ebp),%edx
	movl %edx,64(%esp)
	movl 32(%ebp),%edx
	movl %ecx,76(%esp)
	movl 872(%ebx),%ecx
	movl %edx,88(%esp)
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,100(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,112(%esp)
	movl 104(%ecx),%eax
	movl %eax,124(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,136(%esp)
	movl 112(%esp),%edx
	subl %eax,%edx
	movl 124(%esp),%eax
	movl %edx,148(%esp)
	movl 136(%esp),%edx
	sbbl %edx,%eax
	movl 148(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call suspendThread
	addl $12,%esp
	subl $12,%esp
	movl 100(%esp),%ecx
	pushl %ecx
	movl 92(%esp),%ecx
	pushl %ecx
	movl 84(%esp),%ecx
	pushl %ecx
	movl 124(%esp),%ecx
	pushl %ecx
	movl %eax,188(%esp)
	call __app3
	addl $28,%esp
	subl $8,%esp
	movl 168(%esp),%ecx
	pushl %ecx
	movl %eax,184(%esp)
	call resumeThread
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,184(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,196(%esp)
	movl %eax,%ecx
	movl %edx,208(%esp)
	movl 196(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 184(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,220(%esp)
	movl 208(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 220(%esp),%ecx
	adcl %eax,%ecx
	movl 184(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 172(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
.text
	.align 4,0x90
	.long	udp5_srtd-(cdgi_info)+0
	.long	161805
	.long	-65504
cdgi_info:
.Lcdgi:
	movl $cdgl_info,(%ebp)
	movl $cdgk_str,8(%ebx)
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.text
	.align 4,0x90
	.long	udp6_srtd-(cdgl_info)+0
	.long	161805
	.long	-65504
cdgl_info:
.Lcdgl:
	movl $cdgp_info,(%ebp)
	jmp toJSStr
.text
	.align 4,0x90
	.long	udp7_srtd-(cdgp_info)+0
	.long	161805
	.long	-65504
cdgp_info:
.Lcdgp:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .LcdmH
.LcdmG:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl $cdgA_info,(%ebp)
	movl $cdgz_str,8(%ebx)
	movl (%edi),%eax
	movl %eax,32(%ebp)
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.text
	.align 4,0x90
	.long	udp8_srtd-(cdgA_info)+0
	.long	161805
	.long	-65504
cdgA_info:
.LcdgA:
	movl $cdgE_info,(%ebp)
	jmp toJSStr
.text
	.align 4,0x90
	.long	udp9_srtd-(cdgE_info)+0
	.long	161805
	.long	-65504
cdgE_info:
.LcdgE:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .LcdmM
.LcdmL:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl $cdgT_info,(%ebp)
	movl 36(%ebp),%eax
	movl 48(%ebp),%ecx
	movl 32(%ebp),%edx
	movl %eax,808(%esp)
	movl (%edi),%eax
	movl %ecx,820(%esp)
	movl 872(%ebx),%ecx
	movl %edx,832(%esp)
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,844(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,856(%esp)
	movl 104(%ecx),%eax
	movl %eax,868(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,880(%esp)
	movl 856(%esp),%edx
	subl %eax,%edx
	movl 868(%esp),%eax
	movl %edx,892(%esp)
	movl 880(%esp),%edx
	sbbl %edx,%eax
	movl 892(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call suspendThread
	addl $12,%esp
	subl $12,%esp
	movl 856(%esp),%ecx
	pushl %ecx
	movl 848(%esp),%ecx
	pushl %ecx
	movl 840(%esp),%ecx
	pushl %ecx
	movl 832(%esp),%ecx
	pushl %ecx
	movl %eax,932(%esp)
	call __app3
	addl $28,%esp
	subl $8,%esp
	movl 912(%esp),%ecx
	pushl %ecx
	movl %eax,928(%esp)
	call resumeThread
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,928(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,940(%esp)
	movl %eax,%ecx
	movl %edx,952(%esp)
	movl 940(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 928(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,964(%esp)
	movl 952(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 964(%esp),%ecx
	adcl %eax,%ecx
	movl 928(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 916(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
.text
	.align 4,0x90
	.long	udpa_srtd-(cdgT_info)+0
	.long	161805
	.long	-65504
cdgT_info:
.LcdgT:
	movl $cdgV_info,(%ebp)
	movl 44(%ebp),%esi
	testw $7,%si
	jne .LcdgV
.LcdgW:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	udpb_srtd-(cdgV_info)+0
	.long	227341
	.long	-65504
cdgV_info:
.LcdgV:
	movl $cdh1_info,(%ebp)
	movl $cdh0_str,8(%ebx)
	movl 3(%esi),%eax
	movl %eax,44(%ebp)
	movl %esi,48(%ebp)
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.text
	.align 4,0x90
	.long	udpc_srtd-(cdh1_info)+0
	.long	96269
	.long	-65504
cdh1_info:
.Lcdh1:
	movl $cdh5_info,(%ebp)
	jmp toJSStr
.text
	.align 4,0x90
	.long	udpd_srtd-(cdh5_info)+0
	.long	96269
	.long	-65504
cdh5_info:
.Lcdh5:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .LcdmT
.LcdmS:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl $cdhg_info,(%ebp)
	movl $cdhf_str,8(%ebx)
	movl (%edi),%eax
	movl %eax,32(%ebp)
	jmp ghczmprim_GHCziCString_unpackCStringzh_info
.text
	.align 4,0x90
	.long	udpe_srtd-(cdhg_info)+0
	.long	96269
	.long	-65504
cdhg_info:
.Lcdhg:
	movl $cdhk_info,(%ebp)
	jmp toJSStr
.text
	.align 4,0x90
	.long	udpf_srtd-(cdhk_info)+0
	.long	96269
	.long	-65504
cdhk_info:
.Lcdhk:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .LcdmY
.LcdmX:
	movl $ghczmprim_GHCziTypes_Izh_con_info,-4(%edi)
	movl %esi,(%edi)
	movl $cdhz_info,(%ebp)
	movl 36(%ebp),%eax
	movl 44(%ebp),%ecx
	movl 32(%ebp),%edx
	movl %eax,976(%esp)
	movl (%edi),%eax
	movl %ecx,988(%esp)
	movl 872(%ebx),%ecx
	movl %edx,1000(%esp)
	movl 20(%ecx),%edx
	movl %ebp,12(%edx)
	movl 888(%ebx),%edx
	movl %eax,1012(%esp)
	leal 4(%edi),%eax
	movl %eax,8(%edx)
	movl 100(%ecx),%eax
	movl %eax,1024(%esp)
	movl 104(%ecx),%eax
	movl %eax,1036(%esp)
	leal 4(%edi),%eax
	subl (%edx),%eax
	xorl %edx,%edx
	movl %edx,1048(%esp)
	movl 1024(%esp),%edx
	subl %eax,%edx
	movl 1036(%esp),%eax
	movl %edx,1060(%esp)
	movl 1048(%esp),%edx
	sbbl %edx,%eax
	movl 1060(%esp),%edx
	movl %edx,100(%ecx)
	movl %eax,104(%ecx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call suspendThread
	addl $12,%esp
	subl $12,%esp
	movl 1024(%esp),%ecx
	pushl %ecx
	movl 1016(%esp),%ecx
	pushl %ecx
	movl 1008(%esp),%ecx
	pushl %ecx
	movl 1000(%esp),%ecx
	pushl %ecx
	movl %eax,1100(%esp)
	call __app3
	addl $28,%esp
	subl $8,%esp
	movl 1080(%esp),%ecx
	pushl %ecx
	movl %eax,1096(%esp)
	call resumeThread
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,1096(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,1108(%esp)
	movl %eax,%ecx
	movl %edx,1120(%esp)
	movl 1108(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 1096(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,1132(%esp)
	movl 1120(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 1132(%esp),%ecx
	adcl %eax,%ecx
	movl 1096(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 1084(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
.text
	.align 4,0x90
	.long	udpg_srtd-(cdhz_info)+0
	.long	96269
	.long	-65504
cdhz_info:
.Lcdhz:
	movl $cdhB_info,(%ebp)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_focuszuf1_closure,%esi
	testw $7,%si
	jne .LcdhB
.LcdhC:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	udph_srtd-(cdhB_info)+0
	.long	96269
	.long	-65504
cdhB_info:
.LcdhB:
	movl $cdhJ_info,(%ebp)
	movl 3(%esi),%eax
	movl 44(%ebp),%ecx
	movl 872(%ebx),%edx
	movl %eax,232(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,244(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,256(%esp)
	movl 104(%edx),%ecx
	movl %ecx,268(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,280(%esp)
	movl 256(%esp),%eax
	subl %ecx,%eax
	movl 268(%esp),%ecx
	movl %eax,292(%esp)
	movl 280(%esp),%eax
	sbbl %eax,%ecx
	movl 292(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call suspendThread
	addl $12,%esp
	subl $4,%esp
	movl 248(%esp),%ecx
	pushl %ecx
	movl 240(%esp),%ecx
	pushl %ecx
	movl %eax,316(%esp)
	call __app1
	addl $12,%esp
	subl $8,%esp
	movl 312(%esp),%ecx
	pushl %ecx
	movl %eax,328(%esp)
	call resumeThread
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,328(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,340(%esp)
	movl %eax,%ecx
	movl %edx,352(%esp)
	movl 340(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 328(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,364(%esp)
	movl 352(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 364(%esp),%ecx
	adcl %eax,%ecx
	movl 328(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 316(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
.text
	.align 4,0x90
	.long	udpi_srtd-(cdhJ_info)+0
	.long	96269
	.long	-65504
cdhJ_info:
.LcdhJ:
	movl $cdhL_info,(%ebp)
	movl $Pages_selectzuf1_closure,%esi
	testw $7,%si
	jne .LcdhL
.LcdhM:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	udpj_srtd-(cdhL_info)+0
	.long	96269
	.long	-65504
cdhL_info:
.LcdhL:
	movl $cdhT_info,(%ebp)
	movl 3(%esi),%eax
	movl 44(%ebp),%ecx
	movl 872(%ebx),%edx
	movl %eax,376(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,388(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,400(%esp)
	movl 104(%edx),%ecx
	movl %ecx,412(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,424(%esp)
	movl 400(%esp),%eax
	subl %ecx,%eax
	movl 412(%esp),%ecx
	movl %eax,436(%esp)
	movl 424(%esp),%eax
	sbbl %eax,%ecx
	movl 436(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call suspendThread
	addl $12,%esp
	subl $4,%esp
	movl 392(%esp),%ecx
	pushl %ecx
	movl 384(%esp),%ecx
	pushl %ecx
	movl %eax,460(%esp)
	call __app1
	addl $12,%esp
	subl $8,%esp
	movl 456(%esp),%ecx
	pushl %ecx
	movl %eax,472(%esp)
	call resumeThread
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,472(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,484(%esp)
	movl %eax,%ecx
	movl %edx,496(%esp)
	movl 484(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 472(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,508(%esp)
	movl 496(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 508(%esp),%ecx
	adcl %eax,%ecx
	movl 472(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 460(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
.text
	.align 4,0x90
	.long	udpk_srtd-(cdhT_info)+0
	.long	96269
	.long	-65504
cdhT_info:
.LcdhT:
	movl $cdhV_info,(%ebp)
	movl 52(%ebp),%esi
	testw $7,%si
	jne .LcdhV
.LcdhW:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	udpl_srtd-(cdhV_info)+0
	.long	358413
	.long	-65504
cdhV_info:
.LcdhV:
	movl $cdi0_info,(%ebp)
	movl %esi,%eax
	movl 3(%esi),%ecx
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziGraphicsziCanvas_zdfFromAnyCanvaszuf2_closure,%esi
	movl %ecx,44(%ebp)
	movl %eax,52(%ebp)
	testw $7,%si
	jne .Lcdi0
.Lcdi1:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	udpm_srtd-(cdi0_info)+0
	.long	96269
	.long	-65504
cdi0_info:
.Lcdi0:
	movl $cdi8_info,(%ebp)
	movl 3(%esi),%eax
	movl 44(%ebp),%ecx
	movl 872(%ebx),%edx
	movl %eax,520(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,532(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,544(%esp)
	movl 104(%edx),%ecx
	movl %ecx,556(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,568(%esp)
	movl 544(%esp),%eax
	subl %ecx,%eax
	movl 556(%esp),%ecx
	movl %eax,580(%esp)
	movl 568(%esp),%eax
	sbbl %eax,%ecx
	movl 580(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call suspendThread
	addl $12,%esp
	subl $4,%esp
	movl 536(%esp),%ecx
	pushl %ecx
	movl 528(%esp),%ecx
	pushl %ecx
	movl %eax,604(%esp)
	call __app1
	addl $12,%esp
	subl $8,%esp
	movl 600(%esp),%ecx
	pushl %ecx
	movl %eax,616(%esp)
	call resumeThread
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,616(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,628(%esp)
	movl %eax,%ecx
	movl %edx,640(%esp)
	movl 628(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 616(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,652(%esp)
	movl 640(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 652(%esp),%ecx
	adcl %eax,%ecx
	movl 616(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 604(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
.text
	.align 4,0x90
	.long	udpn_srtd-(cdi8_info)+0
	.long	96269
	.long	-65504
cdi8_info:
.Lcdi8:
	addl $8,%edi
	cmpl 856(%ebx),%edi
	ja .Lcdn9
.Lcdn8:
	movl $base_GHCziPtr_Ptr_con_info,-4(%edi)
	movl %esi,(%edi)
	leal -3(%edi),%eax
	andl $7,%eax
	cmpl $2,%eax
	jae .LcdnD
.LcdnE:
	movl $rc5K_closure,%esi
	addl $56,%ebp
	jmp stg_raiseIOzh
.text
	.align 4,0x90
	.long	udpo_srtd-(cdih_info)+0
	.long	96269
	.long	-65504
cdih_info:
.Lcdih:
	movl $cdip_info,(%ebp)
	movl 3(%esi),%eax
	movl 44(%ebp),%ecx
	movl 872(%ebx),%edx
	movl %eax,664(%esp)
	movl 20(%edx),%eax
	movl %ebp,12(%eax)
	movl 888(%ebx),%eax
	movl %ecx,676(%esp)
	leal 4(%edi),%ecx
	movl %ecx,8(%eax)
	movl 100(%edx),%ecx
	movl %ecx,688(%esp)
	movl 104(%edx),%ecx
	movl %ecx,700(%esp)
	leal 4(%edi),%ecx
	subl (%eax),%ecx
	xorl %eax,%eax
	movl %eax,712(%esp)
	movl 688(%esp),%eax
	subl %ecx,%eax
	movl 700(%esp),%ecx
	movl %eax,724(%esp)
	movl 712(%esp),%eax
	sbbl %eax,%ecx
	movl 724(%esp),%eax
	movl %eax,100(%edx)
	movl %ecx,104(%edx)
	subl $4,%esp
	pushl $0
	pushl %ebx
	call suspendThread
	addl $12,%esp
	subl $4,%esp
	movl 680(%esp),%ecx
	pushl %ecx
	movl 672(%esp),%ecx
	pushl %ecx
	movl %eax,748(%esp)
	call __app1
	addl $12,%esp
	subl $8,%esp
	movl 744(%esp),%ecx
	pushl %ecx
	movl %eax,760(%esp)
	call resumeThread
	addl $12,%esp
	movl %eax,%ebx
	movl 872(%ebx),%eax
	movl 20(%eax),%ecx
	movl 12(%ecx),%ebp
	addl $104,%ecx
	movl %ecx,840(%ebx)
	movl $0,904(%ebx)
	movl 888(%ebx),%ecx
	movl 8(%ecx),%edx
	leal -4(%edx),%edi
	movl %eax,760(%esp)
	movl (%ecx),%eax
	movl 48(%ecx),%ecx
	shll $12,%ecx
	decl %ecx
	movl %ecx,772(%esp)
	movl %eax,%ecx
	movl %edx,784(%esp)
	movl 772(%esp),%edx
	addl %edx,%ecx
	movl %ecx,856(%ebx)
	movl 760(%esp),%ecx
	movl 100(%ecx),%edx
	movl 104(%ecx),%ecx
	movl %ecx,796(%esp)
	movl 784(%esp),%ecx
	subl %eax,%ecx
	xorl %eax,%eax
	addl %ecx,%edx
	movl 796(%esp),%ecx
	adcl %eax,%ecx
	movl 760(%esp),%eax
	movl %edx,100(%eax)
	movl %ecx,104(%eax)
	movl 748(%esp),%eax
	movl %eax,%esi
	jmp *(%ebp)
.LcdnD:
	movl $cdih_info,(%ebp)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziGraphicsziCanvas_zdfFromAnyCanvaszuf1_closure,%esi
	testw $7,%si
	jne .Lcdih
.Lcdii:
	jmp *(%esi)
.text
	.align 4,0x90
	.long	udpp_srtd-(cdip_info)+0
	.long	96269
	.long	-65504
cdip_info:
.Lcdip:
	addl $28,%edi
	cmpl 856(%ebx),%edi
	ja .Lcdnl
.Lcdnk:
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziGraphicsziCanvas_Canvas_con_info,-24(%edi)
	movl %esi,-20(%edi)
	movl 44(%ebp),%eax
	movl %eax,-16(%edi)
	movl $scyd_info,-12(%edi)
	movl 8(%ebp),%eax
	movl %eax,-8(%edi)
	movl 48(%ebp),%eax
	movl %eax,-4(%edi)
	leal -23(%edi),%eax
	movl %eax,(%edi)
	movl $cdiD_info,(%ebp)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziEventsziMouseEvents_Click_closure+1,40(%ebx)
	movl 40(%ebp),%ecx
	movl %ecx,32(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziEventsziMouseEvents_zdfEventMouseEvent_closure,24(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_zdfIsElemElem_closure,16(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziEventsziCore_zdfMonadEventIO_closure,8(%ebx)
	leal -10(%edi),%ecx
	movl %ecx,-8(%ebp)
	movl $stg_ap_v_info,-4(%ebp)
	movl %eax,44(%ebp)
	addl $-8,%ebp
	jmp FxthDgO5vhFC0dVxe1OwkF_HasteziEventsziCore_onEvent_info
.text
	.align 4,0x90
	.long	udpq_srtd-(cdiD_info)+0
	.long	63501
	.long	-65504
cdiD_info:
.LcdiD:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja .Lcdno
.Lcdnn:
	movl $scyx_info,-12(%edi)
	movl 8(%ebp),%eax
	movl %eax,-8(%edi)
	movl 48(%ebp),%eax
	movl %eax,-4(%edi)
	movl 44(%ebp),%ecx
	movl %ecx,(%edi)
	movl $cdk6_info,(%ebp)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziEventsziKeyEvents_KeyUp_closure+2,40(%ebx)
	movl %eax,32(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziEventsziKeyEvents_zdfEventKeyEvent_closure,24(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_zdfIsElemElem_closure,16(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziEventsziCore_zdfMonadEventIO_closure,8(%ebx)
	leal -10(%edi),%eax
	movl %eax,-8(%ebp)
	movl $stg_ap_v_info,-4(%ebp)
	addl $-8,%ebp
	jmp FxthDgO5vhFC0dVxe1OwkF_HasteziEventsziCore_onEvent_info
.text
	.align 4,0x90
	.long	udpr_srtd-(cdk6_info)+0
	.long	63501
	.long	-65504
cdk6_info:
.Lcdk6:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja .Lcdnr
.Lcdnq:
	movl $scyD_info,-12(%edi)
	movl 8(%ebp),%eax
	movl %eax,-8(%edi)
	movl 48(%ebp),%eax
	movl %eax,-4(%edi)
	movl 44(%ebp),%eax
	movl %eax,(%edi)
	movl 4(%ebp),%eax
	movl $cdkx_info,4(%ebp)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziEventsziMouseEvents_Click_closure+1,40(%ebx)
	movl %eax,32(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziEventsziMouseEvents_zdfEventMouseEvent_closure,24(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_zdfIsElemElem_closure,16(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziEventsziCore_zdfMonadEventIO_closure,8(%ebx)
	leal -10(%edi),%eax
	movl %eax,-4(%ebp)
	movl $stg_ap_v_info,(%ebp)
	addl $-4,%ebp
	jmp FxthDgO5vhFC0dVxe1OwkF_HasteziEventsziCore_onEvent_info
.text
	.align 4,0x90
	.long	udps_srtd-(cdkx_info)+0
	.long	97292
	.long	-65504
cdkx_info:
.Lcdkx:
	addl $16,%edi
	cmpl 856(%ebx),%edi
	ja .Lcdnu
.Lcdnt:
	movl $scyU_info,-12(%edi)
	movl 16(%ebp),%eax
	movl %eax,-8(%edi)
	movl 4(%ebp),%eax
	movl %eax,-4(%edi)
	movl 40(%ebp),%eax
	movl %eax,(%edi)
	movl $cdlt_info,(%ebp)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziEventsziMouseEvents_Click_closure+1,40(%ebx)
	movl 12(%ebp),%eax
	movl %eax,32(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziEventsziMouseEvents_zdfEventMouseEvent_closure,24(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_zdfIsElemElem_closure,16(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziEventsziCore_zdfMonadEventIO_closure,8(%ebx)
	leal -10(%edi),%eax
	movl %eax,-8(%ebp)
	movl $stg_ap_v_info,-4(%ebp)
	addl $-8,%ebp
	jmp FxthDgO5vhFC0dVxe1OwkF_HasteziEventsziCore_onEvent_info
.text
	.align 4,0x90
	.long	udpt_srtd-(cdlt_info)+0
	.long	98060
	.long	-65504
cdlt_info:
.Lcdlt:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja .Lcdnx
.Lcdnw:
	movl $scz0_info,-8(%edi)
	movl 4(%ebp),%eax
	movl %eax,-4(%edi)
	movl 40(%ebp),%eax
	movl %eax,(%edi)
	movl $cdlD_info,(%ebp)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziEventsziMouseEvents_DblClick_closure+1,40(%ebx)
	movl 48(%ebp),%eax
	movl %eax,32(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziEventsziMouseEvents_zdfEventMouseEvent_closure,24(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_zdfIsElemElem_closure,16(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziEventsziCore_zdfMonadEventIO_closure,8(%ebx)
	leal -6(%edi),%eax
	movl %eax,-8(%ebp)
	movl $stg_ap_v_info,-4(%ebp)
	addl $-8,%ebp
	jmp FxthDgO5vhFC0dVxe1OwkF_HasteziEventsziCore_onEvent_info
.text
	.align 4,0x90
	.long	udpu_srtd-(cdlD_info)+0
	.long	229132
	.long	-65504
cdlD_info:
.LcdlD:
	addl $12,%edi
	cmpl 856(%ebx),%edi
	ja .LcdnA
.Lcdnz:
	movl $scz6_info,-8(%edi)
	movl 4(%ebp),%eax
	movl %eax,-4(%edi)
	movl 40(%ebp),%eax
	movl %eax,(%edi)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziEventsziMouseEvents_Click_closure+1,40(%ebx)
	movl 8(%ebp),%eax
	movl %eax,32(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziEventsziMouseEvents_zdfEventMouseEvent_closure,24(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_zdfIsElemElem_closure,16(%ebx)
	movl $FxthDgO5vhFC0dVxe1OwkF_HasteziEventsziCore_zdfMonadEventIO_closure,8(%ebx)
	leal -6(%edi),%eax
	movl %eax,44(%ebp)
	movl $stg_ap_v_info,48(%ebp)
	addl $44,%ebp
	jmp FxthDgO5vhFC0dVxe1OwkF_HasteziEventsziCore_onEvent_info
.LcdlO:
	movl $Main_main1_closure,%esi
	jmp *-8(%ebx)
.Lcdm3:
	movl $40,904(%ebx)
	jmp stg_gc_unpt_r1
.Lcdm9:
	movl $24,904(%ebx)
	jmp stg_gc_unpt_r1
.Lcdmc:
	movl $24,904(%ebx)
	jmp stg_gc_unpt_r1
.Lcdmg:
	movl $24,904(%ebx)
	jmp stg_gc_unpt_r1
.Lcdmk:
	movl $24,904(%ebx)
	jmp stg_gc_unpt_r1
.Lcdmn:
	movl $108,904(%ebx)
	jmp stg_gc_unpt_r1
.Lcdmv:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.LcdmA:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.LcdmH:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.LcdmM:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.LcdmT:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.LcdmY:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.Lcdn9:
	movl $8,904(%ebx)
	jmp stg_gc_unbx_r1
.Lcdnl:
	movl $28,904(%ebx)
	jmp stg_gc_unbx_r1
.Lcdno:
	movl $16,904(%ebx)
	jmp stg_gc_unpt_r1
.Lcdnr:
	movl $16,904(%ebx)
	jmp stg_gc_unpt_r1
.Lcdnu:
	movl $16,904(%ebx)
	jmp stg_gc_unpt_r1
.Lcdnx:
	movl $12,904(%ebx)
	jmp stg_gc_unpt_r1
.LcdnA:
	movl $12,904(%ebx)
	jmp stg_gc_unpt_r1
.data
	.align 4
.align 1
.globl Main_main_closure
Main_main_closure:
	.long	Main_main_info
	.long	0
.text
	.align 4,0x90
	.long	Sczg_srt-(Main_main_info)+228
	.long	65539
	.long	0
	.long	65551
.globl Main_main_info
Main_main_info:
.Lcduz:
	jmp Main_main1_info
.data
	.align 4
.align 1
.globl Main_main2_closure
Main_main2_closure:
	.long	Main_main2_info
	.long	0
.text
	.align 4,0x90
	.long	Sczg_srt-(Main_main2_info)+228
	.long	65539
	.long	0
	.long	196623
.globl Main_main2_info
Main_main2_info:
.LcduK:
	movl $Main_main1_closure+1,8(%ebx)
	jmp base_GHCziTopHandler_runMainIO1_info
.data
	.align 4
.align 1
.globl ZCMain_main_closure
ZCMain_main_closure:
	.long	ZCMain_main_info
	.long	0
.text
	.align 4,0x90
	.long	Sczg_srt-(ZCMain_main_info)+236
	.long	65539
	.long	0
	.long	65551
.globl ZCMain_main_info
ZCMain_main_info:
.LcduV:
	jmp Main_main2_info
.section .data
	.align 4
.align 1
Sczg_srt:
	.long	base_GHCziErr_error_closure
	.long	base_TextziRead_readEither4_closure
	.long	base_TextziRead_readEither2_closure
	.long	base_GHCziRead_zdfReadDoublezuzdsconvertFrac_closure
	.long	base_GHCziRead_zdfReadDouble9_closure
	.long	LlHybR7LOSS7VAc0pG6N16_ControlziMonadziIOziClass_zdfMonadIOIO_closure
	.long	FxthDgO5vhFC0dVxe1OwkF_HasteziDOM_getProp_closure
	.long	FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_jsSetzuf1_closure
	.long	Expr_expr1_closure
	.long	Main_readAndDraw4_closure
	.long	Main_saveExpr1_closure
	.long	FxthDgO5vhFC0dVxe1OwkF_HasteziGraphicsziCanvas_line2_closure
	.long	FxthDgO5vhFC0dVxe1OwkF_HasteziGraphicsziCanvas_zdwa16_closure
	.long	FxthDgO5vhFC0dVxe1OwkF_HasteziGraphicsziCanvas_bufferzuf1_closure
	.long	Main_readAndDraw3_closure
	.long	Main_zzoom1_closure
	.long	Expr_showExpr_closure
	.long	Expr_differentiate_closure
	.long	Main_showAndDrawDiff1_closure
	.long	Main_readAndDraw1_closure
	.long	base_GHCziIOziException_zdfExceptionIOExceptionzuzdctoException_closure
	.long	rc5J_closure
	.long	Pages_mkButton1_closure
	.long	FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziJSString_newElemzuf1_closure
	.long	rc5N_closure
	.long	Pages_mkHTML1_closure
	.long	rc5A_closure
	.long	rc5B_closure
	.long	rc5C_closure
	.long	Pages_selectzuf1_closure
	.long	Pages_mkHTML2_closure
	.long	Pages_mkDiv1_closure
	.long	Pages_mkButton2_closure
	.long	FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_with_closure
	.long	Pages_columnzugo_closure
	.long	Pages_appendChildren1_closure
	.long	Pages_mkInput_closure
	.long	FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_jsSetStylezuf1_closure
	.long	FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_focuszuf1_closure
	.long	FxthDgO5vhFC0dVxe1OwkF_HasteziDOMziCore_documentBody1_closure
	.long	FxthDgO5vhFC0dVxe1OwkF_HasteziEventsziCore_onEvent_closure
	.long	FxthDgO5vhFC0dVxe1OwkF_HasteziEventsziCore_zdfMonadEventIO_closure
	.long	FxthDgO5vhFC0dVxe1OwkF_HasteziEventsziMouseEvents_zdfEventMouseEvent_closure
	.long	FxthDgO5vhFC0dVxe1OwkF_HasteziGraphicsziCanvas_zdfFromAnyCanvaszuf1_closure
	.long	FxthDgO5vhFC0dVxe1OwkF_HasteziGraphicsziCanvas_zdfFromAnyCanvaszuf2_closure
	.long	rc5K_closure
	.long	rc5M_closure
	.long	rc5O_closure
	.long	rc5Q_closure
	.long	rc5S_closure
	.long	rc5U_closure
	.long	rc5W_closure
	.long	rc5Y_closure
	.long	rc60_closure
	.long	rc61_closure
	.long	rc63_closure
	.long	Pages_mkCanvas_closure
	.long	Main_main1_closure
	.long	base_GHCziTopHandler_runMainIO1_closure
	.long	Main_main2_closure
.ident "GHC 7.10.2"

